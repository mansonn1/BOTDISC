# -*- coding: utf-8 -*-
# ==========================================================================
#                    üõ°Ô∏è BOT ANTIRAID CUY üõ°Ô∏è
#            Sistema de Protecci√≥n Medieval para Discord
# ==========================================================================

#‚ô£ SECCION: - IMPORTS
# ==========================================================================
#  ‚ô£‚úÖlista
import aiohttp
import io
import sqlite3
import os
import discord
from discord.ext import commands
import numpy as np
import re
import asyncio
import aiosqlite
import logging
import requests
import random
import time as time_module
import json
import threading
from flask import Flask
from datetime import datetime, timezone, timedelta
from discord.ext import commands
from discord.ext import tasks
from discord.ui import View, Button, Select
from typing import Dict, List
from PIL import Image, ImageDraw, ImageFont, ImageSequence
from io import BytesIO

print("üöÄ BOT INICIANDO - ARCHIVO CARGADO")


# ==========================================================================

#‚ô£ SECCION: - CONFIGURACION BOT
# ==========================================================================

#  ‚ô£‚úÖbot
# Crear el bot
intents = discord.Intents.default()
intents.message_content = True
intents.members = True
intents.guilds = True           # ‚úÖ PARA DETECTAR EVENTOS DE SERVIDOR
intents.guild_messages = True   # ‚úÖ PARA DETECTAR MENSAJES
bot = commands.Bot(command_prefix='!', intents=intents)


# ==========================================================================

#‚ô£ SECCION: - DEFAULT_CONFIG
# ==========================================================================
#  ‚ô£‚úÖconfiguracion 
# Configuraci√≥n por defecto para nuevos servidores
DEFAULT_CONFIG = {
    "eliminar_canales": False,
    "crear_roles": False,
    "eliminar_roles": False,
    "editar_canales": False,
    "editar_roles": False,
    "agregar_bots": False,
    "anti_mencion": False,
    "creacion_canales": False,
    "proteccion_spam": False,
    "raid_mode": False,
    "sancion": "ban",
    "canal_logs_id": None,
    "whitelist": [744653546435379243, 461049946682949632]
}

# ==========================================================================

#‚ô£ SECCION: - ESPIA
# ==========================================================================
#  ‚ô£‚úÖid nombre
ESPIA_ID = 615640516578640011  # ‚Üê CAMBIAR POR TU ID DE CUENTA SECUNDARIA
ESPIA_NOMBRE = "Espia Real"  # ‚Üê NOMBRE PERSONALIZADO


# ==========================================================================

#‚ô£ VARIABLES GLOBALES CENTRALIZADAS
# ==========================================================================

# Variables globales
tiempo_calabozos = {}  # Se cargar√° despu√©s de definir las funciones

#  ‚ô£‚úÖtracking ban/kick masivo
# Tracking de acciones de moderaci√≥n
moderacion_tracking = {}

#  ‚ô£‚úÖtracking temporal
# Variables para tracking temporal
spam_tracking: Dict[int, Dict[int, List[datetime]]] = {}
registro_joins: Dict[int, List[float]] = {}  # CORREGIDO: usar float para time.time()
infracciones_spam: Dict[int, Dict[int, Dict]] = {}
muted_users: Dict[int, Dict[int, datetime]] = {}

#  ‚ô£‚úÖbackup chanel delete y roles
# Diccionarios para backup de canales y roles eliminados
deleted_channels_backup: Dict[int, Dict[int, dict]] = {}
deleted_roles_backup: Dict[int, Dict[int, dict]] = {}

#  ‚ô£‚úÖbloqueo de server
# Variables para sistema de lock
servidor_bloqueado = False
canales_originales = {}

#  ‚ô£‚úÖinvitaciones pausadas
# Variables para invitaciones pausadas
invites_pausadas: Dict[int, List[Dict]] = {}

#  ‚ô£‚úÖprediccion raid
# Variables para predicci√≥n de raids
prediccion_datos = {}
UMBRAL_CUENTAS_NUEVAS = 5
UMBRAL_NOMBRES_SIMILARES = 3
UMBRAL_SIN_AVATAR = 4

    # user_id: {
    #     'count': 5,
    #     'reportes': [
    #         {'razon': 'raider', 'reportado_por': 'Admin#1234', 'servidor': 'Mi Server', 'fecha': '2024-01-15'},
    #         {'razon': 'spam', 'reportado_por': 'Mod#5678', 'servidor': 'Otro Server', 'fecha': '2024-01-16'}
    #     ]
    # }
    # Variable para acumular reportes REALES

reportes_acumulados = {}

#  ‚ô£‚úÖbase de datos simullada
# Base de datos global simulada
reputacion_global = {}
lista_negra_global = set()
servidores_aliados = set()

#  ‚ô£‚úÖcooldown edit
# Variables para cooldown de edici√≥n de canales
channel_edit_cooldown: Dict[int, Dict[int, datetime]] = {}

#  ‚ô£‚úÖprediccion variable
# Variables para predicci√≥n
raid_indicators = {}
pre_raid_warnings = {}

#  ‚ô£‚úÖcontador sancionados
# Contadores diarios de sanciones
sanciones_hoy = {
    "bans": 0,
    "kicks": 0, 
    "timeouts": 0
}
#  ‚ô£‚úÖadd whitelist
# WHITELIST AGREGADA (CORREGIDO)
whitelist_added_users = []  # CORREGIDO: Variable que faltaba


# Clases disponibles
CLASES_RPG = {
    "humano": {
        "nombre": "Guerrero Humano",
        "reino": "Reino de Valdris",
        "lore": "Los humanos son guerreros nobles y valientes, protectores del reino dorado de Valdris. Su honor y determinaci√≥n los convierte en l√≠deres natos.",
        "emoji": "‚öîÔ∏è"
    },
    "elfo": {
        "nombre": "Arquero √âlfico", 
        "reino": "Bosque Sagrado",
        "lore": "Los elfos habitan en los bosques ancestrales, maestros del arco y la magia natural. Su sabidur√≠a milenaria los gu√≠a por senderos m√≠sticos.",
        "emoji": "üèπ"
    },
    "orco": {
        "nombre": "Guerrero de la Horda",
        "reino": "Tierras de la Horda", 
        "lore": "Los orcos son feroces guerreros de las tierras salvajes. Su fuerza bruta y sed de batalla los convierte en temibles combatientes.",
        "emoji": "üó°Ô∏è"
    },
    "enano": {
        "nombre": "Forjador Enano",
        "reino": "Monta√±as de Hierro",
        "lore": "Los enanos dominan las monta√±as rocosas, maestros de la forja y la miner√≠a. Su resistencia y habilidad artesanal son legendarias.",
        "emoji": "‚õèÔ∏è"
    },
    "no_muerto": {
        "nombre": "Nigromante",
        "reino": "Tierras Malditas",
        "lore": "Los no muertos emergen de las sombras eternas, dominando la magia oscura y los secretos de la muerte. Su poder trasciende la mortalidad.",
        "emoji": "üíÄ"
    }
}

# Mascotas por clase
MASCOTAS_POR_CLASE = {
    "humano": {
        "normal": ["Halconero Com√∫n"],
        "raro": ["Lobo Gris"], 
        "epico": ["Le√≥n de Guerra"],
        "legendario": ["Grifo Real", "Drag√≥n del Alba"]  # ‚Üê Ambos en la misma lista
    },
    "enano": {
        "normal": ["Tej√≥n de Mina"],
        "raro": ["√Åguila de Acero"],
        "epico": ["Oso Mont√©s"], 
        "legendario": ["Carnero R√∫nico", "Golem de Piedra"]  # ‚Üê Ambos en la misma lista
    },
    "orco": {
        "normal": ["Jabal√≠ Salvaje"],
        "raro": ["Lobo Sangriento"],
        "epico": ["Tigre de Guerra"],
        "legendario": ["Oso de Guerra", "Drag√≥n de Fuego del Clan"]  # ‚Üê Ambos en la misma lista
    },
    "elfo": {
        "normal": ["Zorro Esmeralda"],
        "raro": ["Aguila Nocturna"], 
        "epico": ["Gran Leopardo"],
        "legendario": ["Gran Alce Del Bosque", "Gran Fenix"]  # ‚Üê Ambos en la misma lista
    },
    "no_muerto": {
        "normal": ["Cuervo Sombr√≠o"],
        "raro": ["Lobo de las Sombras Eternas"],
        "epico": ["Caballo Fantasma de la Muerte"], 
        "legendario": ["G√°rgola del Abismo", "Cerberus"]  # ‚Üê Ambos en la misma lista
    }
}

# ‚ô£‚úÖ SISTEMA DE COLORES PARA MASCOTAS POR RAREZA
COLORES_RAREZA_MASCOTA = {
    "normal": 0x808080,      # Gris
    "raro": 0x0099FF,        # Azul  
    "epico": 0x9932CC,       # P√∫rpura
    "legendario": 0xFFD700   # Dorado
}


# ‚ô£‚úÖ IM√ÅGENES POR CLASE Y RANGO ESPEC√çFICO (ESTRUCTURA CORREGIDA)
imagenes_equipo = {
    # HUMANO
    "humano_Plebeyo": "https://i.ibb.co/n8CV7cg2/1.png", 
    "humano_Recluta": "https://i.ibb.co/N6gPh289/2.png",
    "humano_Guerrero": "https://i.ibb.co/20ky5sbB/3.png", 
    "humano_Hijo del Acero": "https://i.ibb.co/JFWbc3yH/4.png",
    "humano_Caballero de Sangre": "https://i.ibb.co/4nmzjKhj/5.png", 
    "humano_Campe√≥n de la Espada": "https://i.ibb.co/bMqC7X22/6.png",
    "humano_Se√±or de la Guerra": "https://i.ibb.co/Qjj4wxh4/7.png", 
    "humano_H√©roe del Reino": "https://i.ibb.co/0jz30Hk5/8.png",
    "humano_Guardi√°n de los Siete Sellos": "https://i.ibb.co/s73XXxR/9.png", 
    "humano_Destructor de Mundos": "https://i.ibb.co/s9cK6Jrr/10.png",
    "humano_Semidi√≥s del Caos": "https://i.ibb.co/zVXTvPjj/11.png", 
    "humano_Dios de la Guerra": "https://i.ibb.co/YBbyvGsH/12.png",
    
    # ELFO
    "elfo_Recluta": "https://i.ibb.co/cXkwSQ6j/1.png", 
    "elfo_Alma del Bosque": "https://i.ibb.co/gZH7bYBm/2.png",
    "elfo_Arquero Esmeralda": "https://i.ibb.co/RGMkfzzc/3.png", 
    "elfo_Guardi√°n del Bosque": "https://i.ibb.co/Wvzw9v4Y/4.png",
    "elfo_Se√±or de las Hojas Eternas": "https://i.ibb.co/BHM1jMgB/5.png", 
    "elfo_Se√±or de los Astros": "https://i.ibb.co/jkkq09yy/6.png",
    "elfo_√öltimo Hijo del Bosque": "https://i.ibb.co/fGHvKb21/7.png", 
    "elfo_Luz Inmortal de los Bosques": "https://i.ibb.co/bjL2Y23m/8.png",
    "elfo_Se√±or de la Corte Sombr√≠a": "https://i.ibb.co/BHvyfFZ9/9.png", 
    "elfo_Guardi√°n de la Corona": "https://i.ibb.co/kVtw7R1g/10.png",
    "elfo_Se√±or de los Asesinos √âlficos": "https://i.ibb.co/DDd2P2GB/11.png", 
    "elfo_Rey del Bosque Profundo": "https://i.ibb.co/8DjHW0pt/12.png",
    
    # ORCO
    "orco_Recluta": "https://i.ibb.co/KxZLyV0D/1.png", 
    "orco_Recluta de la Horda": "https://i.ibb.co/qYytSHVm/2.png",
    "orco_Guerrero Sangriento": "https://i.ibb.co/rfx1pmVs/3.png", 
    "orco_Rompehuesos": "https://i.ibb.co/bgCLL0f5/4.png",
    "orco_Se√±or de la Matanza": "https://i.ibb.co/KcwvBqz9/5.png", 
    "orco_Destructor de Almas": "https://i.ibb.co/Lh1mkykC/6.png",
    "orco_Jefe de Guerra Salvaje": "https://i.ibb.co/gMWdNHrH/7.png", 
    "orco_Campe√≥n del Clan Sangriento": "https://i.ibb.co/d46L31hn/8.png",
    "orco_Devorador de Esp√≠ritus": "https://i.ibb.co/XfHpMC7C/9.png", 
    "orco_Se√±or de la Bestia": "https://i.ibb.co/tMWXCnyV/10.png",
    "orco_L√≠der de la Horda Oscura": "https://i.ibb.co/BK6FSTtZ/11.png", 
    "orco_El √öltimo Rompedor de Mundos": "https://i.ibb.co/GQD2vg2d/12.png",
    
    # ENANO
    "enano_Recluta": "https://i.ibb.co/2HYzwnM/1.png", 
    "enano_Hacha Novicia": "https://i.ibb.co/Wpsw9R1B/2.png",
    "enano_Martillo de Piedra": "https://i.ibb.co/qLNxP9Fp/3.png", 
    "enano_Guerrero del Yunque": "https://i.ibb.co/kgbBtW9T/4.png",
    "enano_Defensor de la Monta√±a": "https://i.ibb.co/p6T0nKM1/5.png", 
    "enano_Guardi√°n del Fuego Antiguo": "https://i.ibb.co/4nSyP6J5/6.png",
    "enano_Hijo del Fuego de la Monta√±a": "https://i.ibb.co/KjHdqp4s/7.png", 
    "enano_Enano de la Corona de Hierro": "https://i.ibb.co/JWfkVbzJ/8.png",
    "enano_Campe√≥n del Acero R√∫nico": "https://i.ibb.co/XkG5WXvR/9.png", 
    "enano_Enano Rey de la Monta√±a": "https://i.ibb.co/dwmxkncr/10.png",
    "enano_Dios Enano del Acero Vivo": "https://i.ibb.co/B2Xc5XwQ/11.png", 
    "enano_Enano Asesino de Dioses": "https://i.ibb.co/Lzmhg0Fp/12.png",
    
    # NO_MUERTO
    "no_muerto_Muerto": "https://i.ibb.co/sd1SFQQv/1.png", 
    "no_muerto_Alma Maldita": "https://i.ibb.co/23YYfdgm/2.png",
    "no_muerto_Guerrero Putrefacto": "https://i.ibb.co/nMXv5v5N/3.png", 
    "no_muerto_Espadach√≠n Esquel√©tico": "https://i.ibb.co/0pgHwnd1/4.png",
    "no_muerto_Campe√≥n de la Cripta": "https://i.ibb.co/FqhJmH0n/5.png", 
    "no_muerto_Soldado de las Sombras": "https://i.ibb.co/4Z1VgHjR/6.png",
    "no_muerto_Se√±or de la Espada Negra": "https://i.ibb.co/My2y2zYL/7.png", 
    "no_muerto_Guardi√°n del Abismo": "https://i.ibb.co/mrw92vJg/8.png",
    "no_muerto_General Espectral": "https://i.ibb.co/4qCK7vL/9.png", 
    "no_muerto_Jefe de la Legi√≥n Oscura": "https://i.ibb.co/wN7RVSV6/10.png",
    "no_muerto_Se√±or de la Legi√≥n de la Muerte": "https://i.ibb.co/kNM1m9L/11.png", 
    "no_muerto_Dios de la Muerte Eterna": "https://i.ibb.co/chQz5hYN/12.png"
}


# Variable global para guardar el mensaje PVP activo
mensaje_pvp_activo = {}


# ‚ô£‚úÖ COLORES POR RAREZA DE MASCOTA
COLORES_RAREZA_MASCOTA = {
    "normal": 0x808080,      # Gris
    "raro": 0x4169E1,        # Azul
    "epico": 0x9932CC,       # Violeta
    "legendario": 0xFFD700   # Dorado
}

# ‚ô£‚úÖ SISTEMA DE COLORES PARA EQUIPAMIENTO POR RAREZA
COLORES_RAREZA_EQUIPO = {
    "normal": 0x808080,      # Gris
    "raro": 0x0099FF,        # Azul  
    "epico": 0x9932CC,       # P√∫rpura
    "legendario": 0xFFD700   # Dorado
}

# ‚ô£‚úÖ EMOJIS POR RAREZA DE EQUIPAMIENTO
EMOJIS_RAREZA_EQUIPO = {
    "normal": 0x808080,      # Gris
    "raro": 0x0099FF,        # Azul  
    "epico": 0x9932CC,       # P√∫rpura
    "legendario": 0xFFD700   # Dorado
}

# ‚ô£‚úÖ IM√ÅGENES DE MASCOTAS POR CLASE Y RAREZA
IMAGENES_MASCOTAS = {
    "humano": {
        "normal": "https://via.placeholder.com/400x300/808080/FFFFFF?text=Mascota+Humano+Normal",
        "raro": "https://via.placeholder.com/400x300/4169E1/FFFFFF?text=Mascota+Humano+Raro",
        "epico": "https://via.placeholder.com/400x300/9932CC/FFFFFF?text=Mascota+Humano+Epico",
        "legendario": "https://via.placeholder.com/400x300/FFD700/000000?text=Mascota+Humano+Legendario"
    },
    "elfo": {
        "normal": "https://via.placeholder.com/400x300/808080/FFFFFF?text=Mascota+Elfo+Normal",
        "raro": "https://via.placeholder.com/400x300/4169E1/FFFFFF?text=Mascota+Elfo+Raro",
        "epico": "https://via.placeholder.com/400x300/9932CC/FFFFFF?text=Mascota+Elfo+Epico",
        "legendario": "https://via.placeholder.com/400x300/FFD700/000000?text=Mascota+Elfo+Legendario"
    },
    "orco": {
        "normal": "https://via.placeholder.com/400x300/808080/FFFFFF?text=Mascota+Orco+Normal",
        "raro": "https://via.placeholder.com/400x300/4169E1/FFFFFF?text=Mascota+Orco+Raro",
        "epico": "https://via.placeholder.com/400x300/9932CC/FFFFFF?text=Mascota+Orco+Epico",
        "legendario": "https://via.placeholder.com/400x300/FFD700/000000?text=Mascota+Orco+Legendario"
    },
    "enano": {
        "normal": "https://via.placeholder.com/400x300/808080/FFFFFF?text=Mascota+Enano+Normal",
        "raro": "https://via.placeholder.com/400x300/4169E1/FFFFFF?text=Mascota+Enano+Raro",
        "epico": "https://via.placeholder.com/400x300/9932CC/FFFFFF?text=Mascota+Enano+Epico",
        "legendario": "https://via.placeholder.com/400x300/FFD700/000000?text=Mascota+Enano+Legendario"
    },
    "no_muerto": {
        "normal": "https://via.placeholder.com/400x300/808080/FFFFFF?text=Mascota+NoMuerto+Normal",
        "raro": "https://via.placeholder.com/400x300/4169E1/FFFFFF?text=Mascota+NoMuerto+Raro",
        "epico": "https://via.placeholder.com/400x300/9932CC/FFFFFF?text=Mascota+NoMuerto+Epico",
        "legendario": "https://via.placeholder.com/400x300/FFD700/000000?text=Mascota+NoMuerto+Legendario"
    }
}

# ‚ô£‚úÖ IM√ÅGENES DIN√ÅMICAS POR NOMBRE DE MASCOTA  
IMAGENES_MASCOTAS = {
    "humano": {
        "Halconero Com√∫n": "https://i.ibb.co/4ZrxhK35/alcon.png",
        "Lobo Gris": "https://i.ibb.co/hxYrbyKZ/lobo-gris.png",
        "Le√≥n de Guerra": "https://i.ibb.co/dw94Qb2q/LEON-DE-GUERRA.png",
        "Grifo Real": "https://i.ibb.co/rGVyJnKB/hipogrifo.png",
        "Drag√≥n del Alba": "https://i.ibb.co/Y4j34XFK/DRAGON-ALVA.png"
    },
    "elfo": {
        "Zorro Esmeralda": "https://i.ibb.co/V03WbdnP/zorro.png",
        "Aguila Nocturna": "https://i.ibb.co/F4hdqkcs/halcon-comun.png",
        "Gran Leopardo": "https://i.ibb.co/6cZVK05g/pantera-1.png",
        "Gran Alce Del Bosque": "https://i.ibb.co/whdZ64YC/alce.png",
        "Gran Fenix": "https://i.ibb.co/krH61DJ/fenix.png"
    },
    "orco": {
        "Jabal√≠ Salvaje": "https://i.ibb.co/nMMLV51X/jabali.png",
        "Lobo Sangriento": "https://i.ibb.co/ksBC70Gp/lobo-4.png",
        "Tigre de Guerra": "https://i.ibb.co/849B9z5N/tigre.png",
        "Oso de Guerra": "https://i.ibb.co/RTgKmKB9/lobo-3.png",
        "Drag√≥n de Fuego del Clan": "https://i.ibb.co/5X7DTBf1/dragon.png"
    },
    "enano": {
        "Tej√≥n de Mina": "https://i.ibb.co/qMc18RnX/tejon.png",
        "√Åguila de Acero": "https://i.ibb.co/PvkczbwL/aguila-nocturna.png",
        "Oso Mont√©s": "https://i.ibb.co/bMHkf0hF/oso.png",
        "Carnero R√∫nico": "https://i.ibb.co/SDj2p61G/carnero.png",
        "Golem de Piedra": "https://i.ibb.co/G39SZSJp/golem.png"
    },
    "no_muerto": {
        "Cuervo Sombr√≠o": "https://i.ibb.co/B2xCgDHz/cuervo.png",
        "Lobo de las Sombras Eternas": "https://i.ibb.co/0VVcn6dF/lobo-zombi.png",
        "Caballo Fantasma de la Muerte": "https://i.ibb.co/vxBfHx9d/caballo-de-las-sombras.png",
        "G√°rgola del Abismo": "https://i.ibb.co/JjjwDfbS/gargola.png",
        "Cerberus": "https://i.ibb.co/G391s4rH/cerberus.png"
    }
}



# ‚ô£‚úÖ DESCRIPCIONES √âPICAS POR MASCOTA Y RAREZA - NOMBRES EXACTOS
DESCRIPCIONES_MASCOTAS = {
    "humano": {
        "comun": {
            "Halconero com√∫n": "Este leal ave protege fielmente\na su compa√±ero humano, ofreciendo\ncompa√±√≠a constante y vigilancia b√°sica\nen las aventuras m√°s peligrosas."
        },
        "raro": {
            "Lobo Gris": "Una bestia feroz de los bosques\nprofundos que aporta instintos\nprimitivos de caza y supervivencia\na su compa√±ero de batalla."
        },
        "epico": {
            "Le√≥n de Guerra": "El rey de las bestias bendecido\ncon poder ancestral que irradia\nvalent√≠a y liderazgo natural\ninspirando terror en los enemigos."
        },
        "legendario": {
            "Grifo Real": "La criatura m√°s noble de los cielos\nque combina el valor del le√≥n\ncon la majestuosidad del √°guila\notorgando supremac√≠a en batalla."
        },
        "legendario_2": {
            "Drag√≥n del Alba": "Un ser milenario que emerge\ncon los primeros rayos solares\nportando poder destructivo infinito\ny sabidur√≠a de eras olvidadas."
        }
    },
    "elfo": {
        "comun": {
            "Zorro Esmeralda": "Un habitante del bosque\nque comparte la conexi√≥n √©lfica\ncon la naturaleza, proporcionando\nserenidad y gu√≠a en tierras salvajes."
        },
        "raro": {
            "√Åguila Nocturna": "Un depredador celestial que domina\nlos cielos nocturnos con magia\n√©lfica ancestral y perspectiva\nt√°ctica superior legendaria."
        },
        "epico": {
            "Gran Leopardo": "Un depredador celestial que domina\nlos bosques nocturnos con magia\n√©lfica ancestral y perspectiva\nt√°ctica superior."
        },
        "legendario": {
            "Gran Alce Del Bosque": "Una criatura nacida del primer\nbosque √©lfico que controla\nla naturaleza misma y otorga\npoder sobre vida y crecimiento."
        },
        "legendario_2": {
            "Gran Fenix": "Un ave inmortal bendecida\npor la luna √©lfica que renace\neternamente con poder plateado\ncada vez m√°s devastador."
        }
    },
    "orco": {
        "comun": {
            "Jabal√≠ Salvaje": "Una bestia feroz de los p√°ramos\nque embiste sin miedo\ny aumenta la agresividad\nnatural del guerrero orco."
        },
        "raro": {
            "Lobo Sangriento": "Un depredador sediento de batalla\nque se alimenta del conflicto\ny multiplica la sed de guerra\nde su compa√±ero orco."
        },
        "epico": {
            "Tigre de Guerra": "Un felino colosal entrenado\npara la destrucci√≥n que desgarra\nenemigos con garras legendarias\ny rugidos que paralizan."
        },
        "legendario": {
            "Oso de Guerra": "Un coloso acorazado que resiste\ncualquier ataque y proporciona\ndefensa impenetrable\ny resistencia sobrenatural."
        },
        "legendario_2": {
            "Drag√≥n de Fuego": "La encarnaci√≥n de la furia\nprimitiva que escupe llamas\ndestructivas y transforma\na su jinete en dios de guerra."
        }
    },
    "enano": {
        "comun": {
            "Tej√≥n de Mina": "Un excavador nato que detecta\nvenas minerales ocultas\ny ayuda en la b√∫squeda\nde tesoros enterrados."
        },
        "raro": {
            "√Åguila de Acero": "Un ave entrenada en las fraguas\nque vuela con alas met√°licas\ny proporciona reconocimiento\na√©reo con precisi√≥n mec√°nica."
        },
        "epico": {
            "Oso Mont√©s": "Un guardi√°n colosal de las\ncumbres que infunde fuerza\nde monta√±a y resistencia\nde roca ancestral."
        },
        "legendario": {
            "Carnero R√∫nico": "Una bestia grabada con s√≠mbolos\nde poder que canaliza magia\nenana ancestral y embiste\ncon fuerza devastadora."
        },
        "legendario_2": {
            "Golem de Piedra": "Un guardi√°n forjado en las\nprofundidades que protege\ncon dureza eterna\ny golpea como avalancha."
        }
    },
    "no_muerto": {
        "comun": {
            "Cuervo Sombr√≠o": "Un ave siniestra de los cementerios\nque se alimenta de almas perdidas\ny presagia muerte inevitable\nen cada batalla."
        },
        "raro": {
            "Lobo de las Sombras Eternas": "Un depredador espectral que\ncaza entre la vida y muerte\ninfundiendo terror sobrenatural\ny hambre de almas."
        },
        "epico": {
            "Caballo Fantasma de la Muerte": "Un corcel et√©reo que galopa\nentre mundos llevando\nla esencia de la muerte\ny velocidad fantasmal."
        },
        "legendario": {
            "G√°rgola del Abismo": "Un guardi√°n de piedra animado\npor magia necrom√°ntica que\nprotege con garras de obsidiana\ny mirada petrificante."
        },
        "legendario_2": {
            "Cerberus": "La bestia guardian de las puertas del infierno\nferos criatura\nque comanda legiones de muertos\ny domina la muerte misma."
        }
    }
}


# ‚ô£‚úÖ NIVELES DE AVENTURA CON ITEMS
AVENTURAS_CONFIG = {
    "normal": {
        "min_level": 1, "max_level": 25, 
        "exp_min": 100, "exp_max": 300, 
        "florines_min": 50, "florines_max": 150,
        "hp_loss": (10, 20),
        "rareza_items": "normal",
        "chance_item": 40
    },
    "rara": {
        "min_level": 26, "max_level": 50, 
        "exp_min": 400, "exp_max": 800, 
        "florines_min": 100, "florines_max": 300,
        "hp_loss": (15, 25),
        "rareza_items": "raro",
        "chance_item": 60
    },
    "epica": {
        "min_level": 51, "max_level": 75, 
        "exp_min": 900, "exp_max": 1500, 
        "florines_min": 200, "florines_max": 500,
        "hp_loss": (20, 30),
        "rareza_items": "epico",
        "chance_item": 75
    },
    "legendaria": {
        "min_level": 76, "max_level": 100, 
        "exp_min": 1600, "exp_max": 2500, 
        "florines_min": 400, "florines_max": 800,
        "hp_loss": (25, 35),
        "rareza_items": "legendario",
        "chance_item": 85
    }
}

# ‚ô£‚úÖ FUNCI√ìN OBTENER ITEM ALEATORIO
async def obtener_item_aleatorio(clase, rareza_aventura):
    """Obtener un item aleatorio de la clase y rareza especificada"""
    import random
    
    # Determinar tipo de item
    tipos_items = ["arma", "armadura", "accesorio"]
    tipo_item = random.choice(tipos_items)
    
    # Obtener items de la rareza correcta
    if tipo_item == "arma":
        items_disponibles = [item for item in ARMAS_POR_CLASE[clase] if item["rareza"] == rareza_aventura]
    elif tipo_item == "armadura":
        items_disponibles = [item for item in ARMADURAS_POR_CLASE[clase] if item["rareza"] == rareza_aventura]
    else:  # accesorio
        items_disponibles = [item for item in ACCESORIOS_POR_CLASE[clase] if item["rareza"] == rareza_aventura]
    
    if not items_disponibles:
        return None
    
    # Seleccionar item aleatorio
    item_encontrado = random.choice(items_disponibles)
    
    return {
        "tipo": tipo_item,
        "nombre": item_encontrado["nombre"],
        "rareza": rareza_aventura,
        "ataque": item_encontrado["ataque"],
        "defensa": item_encontrado["defensa"]
    }

# ‚ô£‚úÖ FUNCI√ìN GENERAR LORE DE ITEM
def generar_lore_item(clase, tipo_item, nombre_item, rareza):
    """Generar lore √©pico para un item encontrado"""
    
    if tipo_item == "mascota":
        if rareza == "normal":
            return f"üêæ En su traves√≠a, tu h√©roe encontr√≥ a **{nombre_item}**, {LORE_AVENTURAS[clase][rareza][tipo_item]}."
        elif rareza == "raro":
            return f"üê∫ Durante la aventura, tu h√©roe se top√≥ con **{nombre_item}**, {LORE_AVENTURAS[clase][rareza][tipo_item]}."
        elif rareza == "epico":
            return f"ü¶Ö En las profundidades m√≠sticas, tu h√©roe descubri√≥ a **{nombre_item}**, {LORE_AVENTURAS[clase][rareza][tipo_item]}."
        else:  # legendario
            return f"üêâ Los destinos se alinearon para que tu h√©roe encontrara a **{nombre_item}**, {LORE_AVENTURAS[clase][rareza][tipo_item]}."
    
    else:  # arma, armadura, accesorio
        if rareza == "normal":
            return f"En su aventura, tu h√©roe encontr√≥ **{nombre_item}**, {LORE_AVENTURAS[clase][rareza][tipo_item]}."
        elif rareza == "raro":
            return f"Entre los tesoros olvidados, tu h√©roe hall√≥ **{nombre_item}**, {LORE_AVENTURAS[clase][rareza][tipo_item]}."
        elif rareza == "epico":
            return f"En las c√°maras m√°s profundas, tu h√©roe descubri√≥ **{nombre_item}**, {LORE_AVENTURAS[clase][rareza][tipo_item]}."
        else:  # legendario
            return f"Los dioses sonrieron a tu h√©roe, quien encontr√≥ **{nombre_item}**, {LORE_AVENTURAS[clase][rareza][tipo_item]}."

# ‚ô£‚úÖ FUNCI√ìN AGREGAR ITEM AL INVENTARIO
async def agregar_item_al_inventario(guild_id, user_id, item):
    """Agregar item al inventario del jugador"""
    import json
    
    async with aiosqlite.connect(db_manager.db_path) as db:
        stats = {"ataque": item["ataque"], "defensa": item["defensa"]}
        stats_json = json.dumps(stats)
        
        await db.execute(
            "INSERT INTO inventario_objetos (guild_id, user_id, objeto_nombre, objeto_tipo, cantidad, stats) VALUES (?, ?, ?, ?, 1, ?)",
            (guild_id, user_id, item["nombre"], item["tipo"], stats_json)
        )
        await db.commit()

# ‚ô£‚úÖ LORE √âPICO POR CLASE Y RAREZA
LORE_AVENTURAS = {
    "humano": {
        "normal": {
            "arma": "forjada en los talleres reales con acero bendecido",
            "armadura": "templada por los herreros del reino sagrado",
            "accesorio": "creada por los joyeros de la corte imperial",
            "mascota": "una noble criatura que jur√≥ lealtad al reino"
        },
        "raro": {
            "arma": "forjada en las llamas sagradas del templo de la justicia",
            "armadura": "bendecida por los paladines de la orden dorada",
            "accesorio": "imbuida con la bendici√≥n de los santos guerreros",
            "mascota": "una bestia legendaria que sirve solo a los justos"
        },
        "epico": {
            "arma": "forjada en el coraz√≥n ardiente del sol por √°ngeles celestiales",
            "armadura": "creada con metal de las estrellas y bendecida por arc√°ngeles",
            "accesorio": "una reliquia divina que pulsa con poder celestial",
            "mascota": "un guardi√°n celestial enviado por los dioses del honor"
        },
        "legendario": {
            "arma": "forjada en los cielos por el mism√≠simo Dios de la Guerra, ba√±ada en luz divina eterna",
            "armadura": "creada con esencia pura de justicia y templada en las llamas del para√≠so",
            "accesorio": "una reliquia de los primeros reyes, bendecida por todos los dioses del olimpo",
            "mascota": "el √∫ltimo de los dragones dorados, nacido de la luz pura del creador"
        }
    },
    "elfo": {
        "normal": {
            "arma": "tallada de la madera del √°rbol sagrado del bosque",
            "armadura": "tejida con fibras √©llficas y hojas de plata",
            "accesorio": "pulida con roc√≠o de luna y polvo de estrellas",
            "mascota": "una criatura del bosque que eligi√≥ acompa√±arte"
        },
        "raro": {
            "arma": "forjada con metal √©lfico y bendecida por los esp√≠ritus del bosque",
            "armadura": "tejida por los tejedores ancestrales con hilos de luz lunar",
            "accesorio": "creada por los m√°s antiguos maestros joyeros √©lficos",
            "mascota": "un guardi√°n del bosque milenario que te acepta como hermano"
        },
        "epico": {
            "arma": "forjada en el coraz√≥n del √°rbol del mundo con esencia pura de naturaleza",
            "armadura": "tejida con hilos de aurora boreal y bendecida por la reina √©lfica",
            "accesorio": "una gema del primer amanecer, pulsando con magia primordial",
            "mascota": "un f√©nix del bosque eterno, renacido de las cenizas sagradas"
        },
        "legendario": {
            "arma": "forjada por los primeros elfos con madera del √°rbol c√≥smico y metal de meteoritos sagrados",
            "armadura": "tejida con luz pura de la luna eterna y bendecida por la diosa de la naturaleza",
            "accesorio": "la corona perdida del primer rey √©lfico, imbuida con la esencia del tiempo mismo",
            "mascota": "el √∫ltimo unicornio plateado, nacido de los sue√±os de la madre naturaleza"
        }
    },
    "orco": {
        "normal": {
            "arma": "forjada en sangre y templada en el calor de la batalla",
            "armadura": "curtida con cuero de bestias salvajes y reforzada con hueso",
            "accesorio": "tallada de los colmillos de enemigos ca√≠dos",
            "mascota": "una bestia salvaje domada por tu fuerza bruta"
        },
        "raro": {
            "arma": "forjada en las forjas de guerra con metal ba√±ado en sangre de drag√≥n",
            "armadura": "templada en lava volc√°nica y endurecida con furia primitiva",
            "accesorio": "creada con gemas arrancadas de las garras de demonios",
            "mascota": "un depredador alfa que respeta solo tu poder destructivo"
        },
        "epico": {
            "arma": "forjada en el coraz√≥n de un volc√°n con metal de meteoritos y furia pura",
            "armadura": "templada en las llamas del caos y endurecida con c√≥lera ancestral",
            "accesorio": "un talism√°n de poder primitivo que late con energ√≠a salvaje",
            "mascota": "una hidra de las profundidades que se somete a tu voluntad"
        },
        "legendario": {
            "arma": "forjada por el mism√≠simo Dios de la Destrucci√≥n en las llamas del apocalipsis primordial",
            "armadura": "creada con la esencia pura del caos y templada en la furia de mil guerras",
            "accesorio": "el amuleto del primer se√±or de la guerra, imbuido con poder destructivo infinito",
            "mascota": "el √∫ltimo behemoth primordial, nacido del caos mismo y sometido por tu fuerza"
        }
    },
    "enano": {
        "normal": {
            "arma": "forjada en las fraguas ancestrales con hierro de las monta√±as",
            "armadura": "martillada con t√©cnicas tradicionales enanas",
            "accesorio": "pulida con gemas extra√≠das de las minas profundas",
            "mascota": "una criatura de las cavernas que aprecia tu determinaci√≥n"
        },
        "raro": {
            "arma": "forjada con mithril puro en las forjas del rey de la monta√±a",
            "armadura": "creada con acero enano y bendecida por los ancestros",
            "accesorio": "tallada de diamantes del coraz√≥n de la monta√±a",
            "mascota": "un guardian de las minas que reconoce tu honor enano"
        },
        "epico": {
            "arma": "forjada en el yunque sagrado con metal del n√∫cleo terrestre",
            "armadura": "templada en lava y endurecida con la voluntad de la monta√±a",
            "accesorio": "una gema que contiene la esencia misma de la tierra",
            "mascota": "un drag√≥n de tierra milenario que respeta tu maestr√≠a"
        },
        "legendario": {
            "arma": "forjada por el primer herrero enano con metal de las estrellas y fuego del centro del mundo",
            "armadura": "creada con adamantium puro y bendecida por el esp√≠ritu de la monta√±a eterna",
            "accesorio": "el coraz√≥n cristalizado de la primera monta√±a, pulsando con poder ancestral",
            "mascota": "el √∫ltimo drag√≥n de monta√±a, despertado de su sue√±o milenario por tu valor"
        }
    },
    "no_muerto": {
        "normal": {
            "arma": "imbuida con energ√≠a necr√≥tica de las criptas olvidadas",
            "armadura": "forjada con huesos bendecidos por la muerte",
            "accesorio": "tallada de gemas malditas del m√°s all√°",
            "mascota": "un esp√≠ritu perdido que encuentra consuelo en tu presencia"
        },
        "raro": {
            "arma": "forjada en las llamas espectrales del purgatorio",
            "armadura": "creada con esencia de almas perdidas y metal maldito",
            "accesorio": "imbuida con poder necr√≥tico de antiguos lichs",
            "mascota": "un demonio menor que se somete a tu oscuridad"
        },
        "epico": {
            "arma": "forjada en las profundidades del inframundo con fuego eterno",
            "armadura": "templada con l√°grimas de √°ngeles ca√≠dos y esencia de muerte",
            "accesorio": "un fragmento del trono del se√±or de la muerte",
            "mascota": "un espectro ancestral que te acepta como su nuevo maestro"
        },
        "legendario": {
            "arma": "forjada por la Muerte misma en las llamas del infierno eterno, imbuida con poder absoluto",
            "armadura": "creada con la esencia de la nada eterna y templada en el r√≠o del olvido",
            "accesorio": "la corona perdida del primer lich, que contiene secretos de la inmortalidad",
            "mascota": "el √∫ltimo drag√≥n √≥seo, resucitado de las cenizas del apocalipsis por tu poder necr√≥tico"
        }
    }
}


# Rangos espec√≠ficos por clase
RANGOS_POR_CLASE = {
    "humano": {
        5: "Mortal", 10: "Guerrero", 20: "Hijo del Acero", 30: "Caballero de Sangre",
        40: "Campe√≥n de la Espada", 50: "Se√±or de la Guerra", 60: "H√©roe del Reino",
        70: "Guardi√°n de los Siete Sellos", 80: "Destructor de Mundos", 
        90: "Semidi√≥s del Caos", 100: "Dios de la Guerra"
    },
    "elfo": {
        5: "Alma del Bosque", 10: "Arquero Esmeralda", 20: "Guardi√°n del Bosque",
        30: "Se√±or de las Hojas Eternas", 40: "Se√±or de los Astros", 50: "√öltimo Hijo del Bosque",
        60: "Luz Inmortal de los Bosques", 70: "Se√±or de la Corte Sombr√≠a", 
        80: "Guardi√°n de la Corona", 90: "Se√±or de los Asesinos √âlficos", 100: "Rey del Bosque Profundo"
    },
    "orco": {
        5: "Recluta de la Horda", 10: "Guerrero Sangriento", 20: "Rompehuesos",
        30: "Se√±or de la Matanza", 40: "Destructor de Almas", 50: "Jefe de Guerra Salvaje",
        60: "Campe√≥n del Clan Sangriento", 70: "Devorador de Esp√≠ritus", 
        80: "Se√±or de la Bestia", 90: "L√≠der de la Horda Oscura", 100: "El √öltimo Rompedor de Mundos"
    },
    "enano": {
        5: "Hacha Novicia", 10: "Martillo de Piedra", 20: "Guerrero del Yunque",
        30: "Defensor de la Monta√±a", 40: "Guardi√°n del Fuego Antiguo", 
        50: "Hijo del Fuego del Coraz√≥n de la Monta√±a", 60: "Enano de la Corona de Hierro",
        70: "Campe√≥n del Acero R√∫nico", 80: "Enano Rey de la Monta√±a", 
        90: "Dios Enano del Acero Vivo", 100: "Enano Asesino de Dioses"
    },
    "no_muerto": {
        5: "Alma Maldita", 10: "Guerrero Putrefacto", 20: "Espadach√≠n Esquel√©tico",
        30: "Campe√≥n de la Cripta", 40: "Soldado de las Sombras", 50: "Se√±or de la Espada Negra",
        60: "Guardi√°n del Abismo", 70: "General Espectral", 80: "Jefe de la Legi√≥n Oscura",
        90: "Se√±or de la Legi√≥n de la Muerte", 100: "Dios de la Muerte Eterna"
    }
}

# ‚ô£‚úÖ ARMAS POR CLASE CON SISTEMA DE RAREZAS COMPLETO
ARMAS_POR_CLASE = {
    "humano": [
        # NORMAL (0-3)
        {"nombre": "Espada del Alba", "ataque": 15, "defensa": 2, "precio": 50, "rareza": "normal"},
        {"nombre": "Hoja de la Justicia", "ataque": 25, "defensa": 3, "precio": 80, "rareza": "normal"},
        {"nombre": "Excalibur del Reino", "ataque": 35, "defensa": 5, "precio": 120, "rareza": "normal"},
        {"nombre": "Espada del Drag√≥n Dorado", "ataque": 45, "defensa": 7, "precio": 180, "rareza": "normal"},
        
        # RARO (4-7)
        {"nombre": "Lanza del Conquistador", "ataque": 55, "defensa": 8, "precio": 250, "rareza": "raro"},
        {"nombre": "Gladius Imperial", "ataque": 65, "defensa": 10, "precio": 350, "rareza": "raro"},
        {"nombre": "Mandoble del Campe√≥n", "ataque": 75, "defensa": 12, "precio": 500, "rareza": "raro"},
        {"nombre": "Espada del H√©roe Eterno", "ataque": 90, "defensa": 15, "precio": 500, "rareza": "raro"},
        
        # √âPICO (8-10)
        {"nombre": "Flamberge del Emperador Celestial", "ataque": 120, "defensa": 20, "precio": 800, "rareza": "epico"},
        {"nombre": "Espada del Guardi√°n de la Luz", "ataque": 140, "defensa": 25, "precio": 900, "rareza": "epico"},
        {"nombre": "Lanza del Conquistador Divino", "ataque": 160, "defensa": 30, "precio": 1000, "rareza": "epico"},
        
        # LEGENDARIO (11-14)
        {"nombre": "Hoja de los Siete Cielos", "ataque": 180, "defensa": 35, "precio": 1500, "rareza": "legendario"},
        {"nombre": "Excalibur Divina", "ataque": 220, "defensa": 45, "precio": 1800, "rareza": "legendario"},
        {"nombre": "Durandal de los Inmortales", "ataque": 280, "defensa": 60, "precio": 2200, "rareza": "legendario"},
        {"nombre": "Excalibur del Dios Rey", "ataque": 350, "defensa": 80, "precio": 3000, "rareza": "legendario"}  # SUPREMO
    ],
    "elfo": [
        # NORMAL (0-3)
        {"nombre": "Arco de Hojas Susurrantes", "ataque": 20, "defensa": 1, "precio": 60, "rareza": "normal"},
        {"nombre": "Daga de la Luna Plateada", "ataque": 28, "defensa": 2, "precio": 90, "rareza": "normal"},
        {"nombre": "Arco del Viento Eterno", "ataque": 38, "defensa": 3, "precio": 130, "rareza": "normal"},
        {"nombre": "Cimitarra de las Estrellas", "ataque": 48, "defensa": 4, "precio": 190, "rareza": "normal"},
        
        # RARO (4-7)
        {"nombre": "Arco del √Årbol Madre", "ataque": 58, "defensa": 5, "precio": 270, "rareza": "raro"},
        {"nombre": "Daga de la Corte Sombr√≠a", "ataque": 68, "defensa": 6, "precio": 380, "rareza": "raro"},
        {"nombre": "Arco de la Luz Celestial", "ataque": 82, "defensa": 8, "precio": 500, "rareza": "raro"},
        {"nombre": "Daga del Rey del Bosque", "ataque": 98, "defensa": 12, "precio": 500, "rareza": "raro"},
        
        # √âPICO (8-10)
        {"nombre": "Arco del Coraz√≥n del Bosque", "ataque": 125, "defensa": 18, "precio": 800, "rareza": "epico"},
        {"nombre": "Espada de la Reina √âlfica", "ataque": 145, "defensa": 22, "precio": 900, "rareza": "epico"},
        {"nombre": "Daga de la Luna Eterna", "ataque": 165, "defensa": 28, "precio": 1000, "rareza": "epico"},
        
        # LEGENDARIO (11-14)
        {"nombre": "Espada √âlfica Ancestral", "ataque": 185, "defensa": 32, "precio": 1500, "rareza": "legendario"},
        {"nombre": "Arco del Eclipse Eterno", "ataque": 225, "defensa": 40, "precio": 1800, "rareza": "legendario"},
        {"nombre": "Daga del Se√±or de la Naturaleza", "ataque": 285, "defensa": 55, "precio": 2200, "rareza": "legendario"},
        {"nombre": "Arco del Dios del Bosque", "ataque": 360, "defensa": 75, "precio": 3000, "rareza": "legendario"}  # SUPREMO
    ],
    "orco": [
        # NORMAL (0-3)
        {"nombre": "Hacha de Hueso Sangriento", "ataque": 18, "defensa": 4, "precio": 55, "rareza": "normal"},
        {"nombre": "Maza de la Horda Salvaje", "ataque": 30, "defensa": 6, "precio": 85, "rareza": "normal"},
        {"nombre": "Hacha Doble del Caos", "ataque": 42, "defensa": 8, "precio": 125, "rareza": "normal"},
        {"nombre": "Martillo de Guerra Brutal", "ataque": 54, "defensa": 10, "precio": 185, "rareza": "normal"},
        
        # RARO (4-7)
        {"nombre": "Hacha del Jefe Sangriento", "ataque": 66, "defensa": 12, "precio": 260, "rareza": "raro"},
        {"nombre": "Maza del Rompehuesos", "ataque": 78, "defensa": 14, "precio": 370, "rareza": "raro"},
        {"nombre": "Hacha del Devorador", "ataque": 90, "defensa": 16, "precio": 500, "rareza": "raro"},
        {"nombre": "Martillo del Apocalipsis", "ataque": 105, "defensa": 20, "precio": 500, "rareza": "raro"},
        
        # √âPICO (8-10)
        {"nombre": "Hacha del Se√±or de la Guerra", "ataque": 130, "defensa": 25, "precio": 800, "rareza": "epico"},
        {"nombre": "Maza del Devastador Primordial", "ataque": 150, "defensa": 30, "precio": 900, "rareza": "epico"},
        {"nombre": "Martillo del Conquistador Salvaje", "ataque": 170, "defensa": 35, "precio": 1000, "rareza": "epico"},
        
        # LEGENDARIO (11-14)
        {"nombre": "Maza del Destructor de Mundos", "ataque": 190, "defensa": 40, "precio": 1500, "rareza": "legendario"},
        {"nombre": "Hacha de la Bestia Primordial", "ataque": 230, "defensa": 50, "precio": 1800, "rareza": "legendario"},
        {"nombre": "Martillo del Emperador Orco", "ataque": 290, "defensa": 65, "precio": 2200, "rareza": "legendario"},
        {"nombre": "Hacha del Dios de la Destrucci√≥n", "ataque": 370, "defensa": 85, "precio": 3000, "rareza": "legendario"}  # SUPREMO
    ],
    "enano": [
        # NORMAL (0-3)
        {"nombre": "Martillo de Forja Ardiente", "ataque": 12, "defensa": 8, "precio": 50, "rareza": "normal"},
        {"nombre": "Hacha de Mithril Puro", "ataque": 22, "defensa": 12, "precio": 80, "rareza": "normal"},
        {"nombre": "Martillo del Yunque Sagrado", "ataque": 32, "defensa": 16, "precio": 120, "rareza": "normal"},
        {"nombre": "Hacha de la Monta√±a Eterna", "ataque": 42, "defensa": 20, "precio": 175, "rareza": "normal"},
        
        # RARO (4-7)
        {"nombre": "Martillo de los Ancestros", "ataque": 52, "defensa": 24, "precio": 245, "rareza": "raro"},
        {"nombre": "Hacha del Coraz√≥n de Fuego", "ataque": 62, "defensa": 28, "precio": 340, "rareza": "raro"},
        {"nombre": "Martillo de la Corona de Hierro", "ataque": 72, "defensa": 32, "precio": 480, "rareza": "raro"},
        {"nombre": "Hacha del Rey de la Monta√±a", "ataque": 85, "defensa": 38, "precio": 500, "rareza": "raro"},
        
        # √âPICO (8-10)
        {"nombre": "Martillo del Acero Vivo", "ataque": 110, "defensa": 45, "precio": 800, "rareza": "epico"},
        {"nombre": "Hacha del Maestro Forjador", "ataque": 130, "defensa": 52, "precio": 900, "rareza": "epico"},
        {"nombre": "Martillo del Se√±or de las Forjas", "ataque": 150, "defensa": 60, "precio": 1000, "rareza": "epico"},
        
        # LEGENDARIO (11-14)
        {"nombre": "Hacha Asesina de Dioses", "ataque": 170, "defensa": 68, "precio": 1500, "rareza": "legendario"},
        {"nombre": "Martillo del Emperador Enano", "ataque": 210, "defensa": 80, "precio": 1800, "rareza": "legendario"},
        {"nombre": "Hacha del Coraz√≥n de la Monta√±a", "ataque": 270, "defensa": 95, "precio": 2200, "rareza": "legendario"},
        {"nombre": "Mjolnir del Rey Supremo", "ataque": 340, "defensa": 120, "precio": 3000, "rareza": "legendario"}  # SUPREMO
    ],
    "no_muerto": [
        # NORMAL (0-3)
        {"nombre": "Daga de Almas Perdidas", "ataque": 16, "defensa": 3, "precio": 52, "rareza": "normal"},
        {"nombre": "Hoz de la Muerte Silenciosa", "ataque": 26, "defensa": 4, "precio": 82, "rareza": "normal"},
        {"nombre": "Espada Espectral", "ataque": 36, "defensa": 6, "precio": 122, "rareza": "normal"},
        {"nombre": "Guada√±a del Segador", "ataque": 46, "defensa": 8, "precio": 180, "rareza": "normal"},
        
        # RARO (4-7)
        {"nombre": "Daga de la Cripta Maldita", "ataque": 56, "defensa": 10, "precio": 255, "rareza": "raro"},
        {"nombre": "Espada de las Sombras", "ataque": 66, "defensa": 12, "precio": 360, "rareza": "raro"},
        {"nombre": "Hoz del General Espectral", "ataque": 78, "defensa": 15, "precio": 500, "rareza": "raro"},
        {"nombre": "Guada√±a de la Legi√≥n Oscura", "ataque": 92, "defensa": 18, "precio": 500, "rareza": "raro"},
        
        # √âPICO (8-10)
        {"nombre": "Espada del Se√±or de los Muertos", "ataque": 118, "defensa": 22, "precio": 800, "rareza": "epico"},
        {"nombre": "Hoz del Emperador Lich", "ataque": 138, "defensa": 28, "precio": 900, "rareza": "epico"},
        {"nombre": "Guada√±a del Apocalipsis Eterno", "ataque": 158, "defensa": 35, "precio": 1000, "rareza": "epico"},
        
        # LEGENDARIO (11-14)
        {"nombre": "Hoz del Dios de la Muerte", "ataque": 178, "defensa": 42, "precio": 1500, "rareza": "legendario"},
        {"nombre": "Espada de la Muerte Eterna", "ataque": 218, "defensa": 52, "precio": 1800, "rareza": "legendario"},
        {"nombre": "Guada√±a del Rey de los Muertos", "ataque": 278, "defensa": 68, "precio": 2200, "rareza": "legendario"},
        {"nombre": "Necrosword del Dios de la Oscuridad", "ataque": 355, "defensa": 90, "precio": 3000, "rareza": "legendario"}  # SUPREMO
    ]
}

# ‚ô£‚úÖ ARMADURAS POR CLASE CON SISTEMA DE RAREZAS COMPLETO
ARMADURAS_POR_CLASE = {
    "humano": [
        # NORMAL (0-3)
        {"nombre": "Cota de Malla Real", "ataque": 2, "defensa": 15, "precio": 50, "rareza": "normal"},
        {"nombre": "Armadura del Caballero", "ataque": 3, "defensa": 25, "precio": 80, "rareza": "normal"},
        {"nombre": "Coraza del Reino", "ataque": 5, "defensa": 35, "precio": 120, "rareza": "normal"},
        {"nombre": "Armadura del Drag√≥n Dorado", "ataque": 7, "defensa": 45, "precio": 180, "rareza": "normal"},
        
        # RARO (4-7)
        {"nombre": "Placas del Conquistador", "ataque": 8, "defensa": 55, "precio": 250, "rareza": "raro"},
        {"nombre": "Armadura Imperial", "ataque": 10, "defensa": 65, "precio": 350, "rareza": "raro"},
        {"nombre": "Coraza del Campe√≥n", "ataque": 12, "defensa": 75, "precio": 500, "rareza": "raro"},
        {"nombre": "Armadura del H√©roe Eterno", "ataque": 15, "defensa": 90, "precio": 500, "rareza": "raro"},
        
        # √âPICO (8-10)
        {"nombre": "Placas del Emperador Celestial", "ataque": 20, "defensa": 110, "precio": 800, "rareza": "epico"},
        {"nombre": "Armadura del Guardi√°n de la Luz", "ataque": 25, "defensa": 130, "precio": 900, "rareza": "epico"},
        {"nombre": "Coraza del Conquistador Divino", "ataque": 30, "defensa": 150, "precio": 1000, "rareza": "epico"},
        
        # LEGENDARIO (11-14)
        {"nombre": "Placas de los Siete Cielos", "ataque": 35, "defensa": 170, "precio": 1500, "rareza": "legendario"},
        {"nombre": "Armadura Divina", "ataque": 45, "defensa": 200, "precio": 1800, "rareza": "legendario"},
        {"nombre": "Coraza de los Inmortales", "ataque": 60, "defensa": 250, "precio": 2200, "rareza": "legendario"},
        {"nombre": "Armadura del Dios Rey", "ataque": 80, "defensa": 320, "precio": 3000, "rareza": "legendario"}  # SUPREMO
    ],
    "elfo": [
        # NORMAL (0-3)
        {"nombre": "T√∫nica de Hojas √âlfica", "ataque": 10, "defensa": 12, "precio": 60, "rareza": "normal"},
        {"nombre": "Armadura de Luna Plateada", "ataque": 15, "defensa": 20, "precio": 90, "rareza": "normal"},
        {"nombre": "Coraza del Viento Eterno", "ataque": 22, "defensa": 28, "precio": 130, "rareza": "normal"},
        {"nombre": "Armadura de las Estrellas", "ataque": 28, "defensa": 38, "precio": 190, "rareza": "normal"},
        
        # RARO (4-7)
        {"nombre": "Placas del √Årbol Madre", "ataque": 35, "defensa": 48, "precio": 270, "rareza": "raro"},
        {"nombre": "Coraza de la Corte Sombr√≠a", "ataque": 42, "defensa": 58, "precio": 380, "rareza": "raro"},
        {"nombre": "Armadura de Luz Celestial", "ataque": 50, "defensa": 70, "precio": 500, "rareza": "raro"},
        {"nombre": "Coraza √âlfica Ancestral", "ataque": 60, "defensa": 85, "precio": 500, "rareza": "raro"},
        
        # √âPICO (8-10)
        {"nombre": "Armadura del Coraz√≥n del Bosque", "ataque": 75, "defensa": 105, "precio": 800, "rareza": "epico"},
        {"nombre": "Placas de la Reina √âlfica", "ataque": 85, "defensa": 125, "precio": 900, "rareza": "epico"},
        {"nombre": "Coraza de la Luna Eterna", "ataque": 95, "defensa": 145, "precio": 1000, "rareza": "epico"},
        
        # LEGENDARIO (11-14)
        {"nombre": "Armadura del Eclipse Eterno", "ataque": 110, "defensa": 165, "precio": 1500, "rareza": "legendario"},
        {"nombre": "Placas del Rey del Bosque", "ataque": 130, "defensa": 195, "precio": 1800, "rareza": "legendario"},
        {"nombre": "Coraza del Se√±or de la Naturaleza", "ataque": 165, "defensa": 240, "precio": 2200, "rareza": "legendario"},
        {"nombre": "Armadura del Dios del Bosque", "ataque": 210, "defensa": 300, "precio": 3000, "rareza": "legendario"}  # SUPREMO
    ],
    "orco": [
        # NORMAL (0-3)
        {"nombre": "Pieles de Guerra Orcas", "ataque": 12, "defensa": 10, "precio": 55, "rareza": "normal"},
        {"nombre": "Armadura de la Horda", "ataque": 18, "defensa": 18, "precio": 85, "rareza": "normal"},
        {"nombre": "Coraza del Caos", "ataque": 25, "defensa": 25, "precio": 125, "rareza": "normal"},
        {"nombre": "Placas de Guerra Brutales", "ataque": 32, "defensa": 34, "precio": 185, "rareza": "normal"},
        
        # RARO (4-7)
        {"nombre": "Armadura del Jefe Sangriento", "ataque": 40, "defensa": 44, "precio": 260, "rareza": "raro"},
        {"nombre": "Coraza del Rompehuesos", "ataque": 48, "defensa": 54, "precio": 370, "rareza": "raro"},
        {"nombre": "Armadura del Devorador", "ataque": 56, "defensa": 65, "precio": 500, "rareza": "raro"},
        {"nombre": "Placas del Apocalipsis", "ataque": 65, "defensa": 78, "precio": 500, "rareza": "raro"},
        
        # √âPICO (8-10)
        {"nombre": "Coraza del Se√±or de la Guerra", "ataque": 78, "defensa": 95, "precio": 800, "rareza": "epico"},
        {"nombre": "Armadura del Devastador Primordial", "ataque": 90, "defensa": 115, "precio": 900, "rareza": "epico"},
        {"nombre": "Placas del Conquistador Salvaje", "ataque": 105, "defensa": 135, "precio": 1000, "rareza": "epico"},
        
        # LEGENDARIO (11-14)
        {"nombre": "Coraza de la Bestia Primordial", "ataque": 120, "defensa": 155, "precio": 1500, "rareza": "legendario"},
        {"nombre": "Armadura del Destructor", "ataque": 145, "defensa": 185, "precio": 1800, "rareza": "legendario"},
        {"nombre": "Placas del Emperador Orco", "ataque": 180, "defensa": 230, "precio": 2200, "rareza": "legendario"},
        {"nombre": "Coraza del Dios de la Destrucci√≥n", "ataque": 230, "defensa": 290, "precio": 3000, "rareza": "legendario"}  # SUPREMO
    ],
    "enano": [
        # NORMAL (0-3)
        {"nombre": "Cota de Mithril", "ataque": 5, "defensa": 20, "precio": 50, "rareza": "normal"},
        {"nombre": "Armadura de Forja Enana", "ataque": 8, "defensa": 32, "precio": 80, "rareza": "normal"},
        {"nombre": "Coraza del Yunque Sagrado", "ataque": 12, "defensa": 45, "precio": 120, "rareza": "normal"},
        {"nombre": "Placas de la Monta√±a", "ataque": 16, "defensa": 58, "precio": 175, "rareza": "normal"},
        
        # RARO (4-7)
        {"nombre": "Armadura de los Ancestros", "ataque": 20, "defensa": 72, "precio": 245, "rareza": "raro"},
        {"nombre": "Coraza del Coraz√≥n de Fuego", "ataque": 25, "defensa": 88, "precio": 340, "rareza": "raro"},
        {"nombre": "Placas de la Corona de Hierro", "ataque": 30, "defensa": 105, "precio": 480, "rareza": "raro"},
        {"nombre": "Armadura del Rey de la Monta√±a", "ataque": 38, "defensa": 125, "precio": 500, "rareza": "raro"},
        
        # √âPICO (8-10)
        {"nombre": "Coraza del Acero Vivo", "ataque": 45, "defensa": 148, "precio": 800, "rareza": "epico"},
        {"nombre": "Armadura del Maestro Forjador", "ataque": 55, "defensa": 175, "precio": 900, "rareza": "epico"},
        {"nombre": "Placas del Se√±or de las Forjas", "ataque": 65, "defensa": 205, "precio": 1000, "rareza": "epico"},
        
        # LEGENDARIO (11-14)
        {"nombre": "Placas Asesinas de Dioses", "ataque": 75, "defensa": 240, "precio": 1500, "rareza": "legendario"},
        {"nombre": "Coraza del Emperador Enano", "ataque": 90, "defensa": 280, "precio": 1800, "rareza": "legendario"},
        {"nombre": "Armadura del Coraz√≥n de la Monta√±a", "ataque": 115, "defensa": 330, "precio": 2200, "rareza": "legendario"},
        {"nombre": "Aegis del Rey Supremo", "ataque": 150, "defensa": 400, "precio": 3000, "rareza": "legendario"}  # SUPREMO
    ],
    "no_muerto": [
        # NORMAL (0-3)
        {"nombre": "T√∫nica de Almas Perdidas", "ataque": 8, "defensa": 14, "precio": 52, "rareza": "normal"},
        {"nombre": "Coraza de la Muerte Silenciosa", "ataque": 12, "defensa": 22, "precio": 82, "rareza": "normal"},
        {"nombre": "Armadura Espectral", "ataque": 18, "defensa": 32, "precio": 122, "rareza": "normal"},
        {"nombre": "Placas del Segador", "ataque": 24, "defensa": 42, "precio": 180, "rareza": "normal"},
        
        # RARO (4-7)
        {"nombre": "Coraza de la Cripta Maldita", "ataque": 30, "defensa": 54, "precio": 255, "rareza": "raro"},
        {"nombre": "Armadura de las Sombras", "ataque": 38, "defensa": 68, "precio": 360, "rareza": "raro"},
        {"nombre": "Placas del General Espectral", "ataque": 45, "defensa": 82, "precio": 500, "rareza": "raro"},
        {"nombre": "Coraza de la Legi√≥n Oscura", "ataque": 55, "defensa": 98, "precio": 500, "rareza": "raro"},
        
        # √âPICO (8-10)
        {"nombre": "Armadura del Se√±or de los Muertos", "ataque": 68, "defensa": 118, "precio": 800, "rareza": "epico"},
        {"nombre": "Placas del Emperador Lich", "ataque": 80, "defensa": 140, "precio": 900, "rareza": "epico"},
        {"nombre": "Coraza del Apocalipsis Eterno", "ataque": 95, "defensa": 165, "precio": 1000, "rareza": "epico"},
        
        # LEGENDARIO (11-14)
        {"nombre": "Armadura de la Muerte Eterna", "ataque": 110, "defensa": 190, "precio": 1500, "rareza": "legendario"},
        {"nombre": "Placas del Dios de la Muerte", "ataque": 135, "defensa": 225, "precio": 1800, "rareza": "legendario"},
        {"nombre": "Coraza del Rey de los Muertos", "ataque": 170, "defensa": 270, "precio": 2200, "rareza": "legendario"},
        {"nombre": "Armadura del Dios de la Oscuridad", "ataque": 220, "defensa": 340, "precio": 3000, "rareza": "legendario"}  # SUPREMO
    ]
}

# ‚ô£‚úÖ ACCESORIOS POR CLASE CON SISTEMA DE RAREZAS COMPLETO
ACCESORIOS_POR_CLASE = {
    "humano": [
        # NORMAL (0-3)
        {"nombre": "Anillo del Alba", "ataque": 8, "defensa": 8, "precio": 45, "rareza": "normal"},
        {"nombre": "Amuleto de la Justicia", "ataque": 12, "defensa": 12, "precio": 75, "rareza": "normal"},
        {"nombre": "Corona del Reino", "ataque": 18, "defensa": 18, "precio": 110, "rareza": "normal"},
        {"nombre": "Medall√≥n del Drag√≥n Dorado", "ataque": 25, "defensa": 25, "precio": 165, "rareza": "normal"},
        
        # RARO (4-7)
        {"nombre": "Brazalete del Conquistador", "ataque": 32, "defensa": 32, "precio": 230, "rareza": "raro"},
        {"nombre": "Gemas Imperiales", "ataque": 40, "defensa": 40, "precio": 320, "rareza": "raro"},
        {"nombre": "Diadema del Campe√≥n", "ataque": 48, "defensa": 48, "precio": 450, "rareza": "raro"},
        {"nombre": "Amuleto del H√©roe Eterno", "ataque": 58, "defensa": 58, "precio": 500, "rareza": "raro"},
        
        # √âPICO (8-10)
        {"nombre": "Corona del Emperador Celestial", "ataque": 70, "defensa": 70, "precio": 800, "rareza": "epico"},
        {"nombre": "Amuleto del Guardi√°n de la Luz", "ataque": 82, "defensa": 82, "precio": 900, "rareza": "epico"},
        {"nombre": "Brazalete del Conquistador Divino", "ataque": 95, "defensa": 95, "precio": 1000, "rareza": "epico"},
        
        # LEGENDARIO (11-14)
        {"nombre": "Corona de los Siete Cielos", "ataque": 110, "defensa": 110, "precio": 1500, "rareza": "legendario"},
        {"nombre": "Reliquia Divina", "ataque": 130, "defensa": 130, "precio": 1800, "rareza": "legendario"},
        {"nombre": "Amuleto de los Inmortales", "ataque": 160, "defensa": 160, "precio": 2200, "rareza": "legendario"},
        {"nombre": "Corona del Dios Rey", "ataque": 200, "defensa": 200, "precio": 3000, "rareza": "legendario"}  # SUPREMO
    ],
    "elfo": [
        # NORMAL (0-3)
        {"nombre": "Diadema de Hojas", "ataque": 10, "defensa": 6, "precio": 55, "rareza": "normal"},
        {"nombre": "Amuleto de Luna Plateada", "ataque": 15, "defensa": 9, "precio": 85, "rareza": "normal"},
        {"nombre": "Corona del Viento Eterno", "ataque": 22, "defensa": 13, "precio": 125, "rareza": "normal"},
        {"nombre": "Gema de las Estrellas", "ataque": 30, "defensa": 18, "precio": 180, "rareza": "normal"},
        
        # RARO (4-7)
        {"nombre": "Brazalete del √Årbol Madre", "ataque": 38, "defensa": 23, "precio": 255, "rareza": "raro"},
        {"nombre": "Medall√≥n de la Corte Sombr√≠a", "ataque": 47, "defensa": 28, "precio": 360, "rareza": "raro"},
        {"nombre": "Diadema de Luz Celestial", "ataque": 56, "defensa": 34, "precio": 480, "rareza": "raro"},
        {"nombre": "Amuleto √âlfico Ancestral", "ataque": 68, "defensa": 42, "precio": 500, "rareza": "raro"},
        
        # √âPICO (8-10)
        {"nombre": "Corona del Coraz√≥n del Bosque", "ataque": 82, "defensa": 50, "precio": 800, "rareza": "epico"},
        {"nombre": "Gema de la Reina √âlfica", "ataque": 96, "defensa": 58, "precio": 900, "rareza": "epico"},
        {"nombre": "Brazalete de la Luna Eterna", "ataque": 112, "defensa": 68, "precio": 1000, "rareza": "epico"},
        
        # LEGENDARIO (11-14)
        {"nombre": "Corona del Eclipse Eterno", "ataque": 130, "defensa": 78, "precio": 1500, "rareza": "legendario"},
        {"nombre": "Reliquia del Rey del Bosque", "ataque": 150, "defensa": 90, "precio": 1800, "rareza": "legendario"},
        {"nombre": "Amuleto del Se√±or de la Naturaleza", "ataque": 185, "defensa": 115, "precio": 2200, "rareza": "legendario"},
        {"nombre": "Sigmarine Del Rey ", "ataque": 330, "defensa": 140, "precio": 3000, "rareza": "legendario"}  # SUPREMO
    ],
    "orco": [
        # NORMAL (0-3)
        {"nombre": "Collar de Huesos", "ataque": 12, "defensa": 4, "precio": 50, "rareza": "normal"},
        {"nombre": "Amuleto de la Horda", "ataque": 18, "defensa": 6, "precio": 80, "rareza": "normal"},
        {"nombre": "Brazalete del Caos", "ataque": 26, "defensa": 9, "precio": 115, "rareza": "normal"},
        {"nombre": "Garra de Guerra Brutal", "ataque": 35, "defensa": 12, "precio": 170, "rareza": "normal"},
        
        # RARO (4-7)
        {"nombre": "Medall√≥n del Jefe Sangriento", "ataque": 44, "defensa": 15, "precio": 240, "rareza": "raro"},
        {"nombre": "Collar del Rompehuesos", "ataque": 54, "defensa": 18, "precio": 340, "rareza": "raro"},
        {"nombre": "Amuleto del Devorador", "ataque": 65, "defensa": 22, "precio": 460, "rareza": "raro"},
        {"nombre": "Garra del Apocalipsis", "ataque": 78, "defensa": 26, "precio": 500, "rareza": "raro"},
        
        # √âPICO (8-10)
        {"nombre": "Medall√≥n del Se√±or de la Guerra", "ataque": 95, "defensa": 32, "precio": 800, "rareza": "epico"},
        {"nombre": "Collar del Devastador Primordial", "ataque": 110, "defensa": 38, "precio": 900, "rareza": "epico"},
        {"nombre": "Garra del Conquistador Salvaje", "ataque": 128, "defensa": 45, "precio": 1000, "rareza": "epico"},
        
        # LEGENDARIO (11-14)
        {"nombre": "Medall√≥n de la Bestia Primordial", "ataque": 148, "defensa": 52, "precio": 1500, "rareza": "legendario"},
        {"nombre": "Reliquia del Destructor", "ataque": 170, "defensa": 60, "precio": 1800, "rareza": "legendario"},
        {"nombre": "Collar del Emperador Orco", "ataque": 205, "defensa": 75, "precio": 2200, "rareza": "legendario"},
        {"nombre": "Garra del Dios de la Destrucci√≥n", "ataque": 300, "defensa": 100, "precio": 3000, "rareza": "legendario"}  # SUPREMO
    ],
    "enano": [
        # NORMAL (0-3)
        {"nombre": "Anillo de Mithril", "ataque": 6, "defensa": 12, "precio": 45, "rareza": "normal"},
        {"nombre": "Amuleto de Forja", "ataque": 9, "defensa": 18, "precio": 75, "rareza": "normal"},
        {"nombre": "Brazalete del Yunque Sagrado", "ataque": 14, "defensa": 26, "precio": 110, "rareza": "normal"},
        {"nombre": "Gema de la Monta√±a Eterna", "ataque": 20, "defensa": 35, "precio": 165, "rareza": "normal"},
        
        # RARO (4-7)
        {"nombre": "Medall√≥n de los Ancestros", "ataque": 26, "defensa": 45, "precio": 230, "rareza": "raro"},
        {"nombre": "Collar del Coraz√≥n de Fuego", "ataque": 33, "defensa": 56, "precio": 320, "rareza": "raro"},
        {"nombre": "Anillo de la Corona de Hierro", "ataque": 40, "defensa": 68, "precio": 450, "rareza": "raro"},
        {"nombre": "Amuleto del Rey de la Monta√±a", "ataque": 48, "defensa": 82, "precio": 500, "rareza": "raro"},
        
        # √âPICO (8-10)
        {"nombre": "Brazalete del Acero Vivo", "ataque": 58, "defensa": 98, "precio": 800, "rareza": "epico"},
        {"nombre": "Gema del Maestro Forjador", "ataque": 68, "defensa": 115, "precio": 900, "rareza": "epico"},
        {"nombre": "Medall√≥n del Se√±or de las Forjas", "ataque": 80, "defensa": 135, "precio": 1000, "rareza": "epico"},
        
        # LEGENDARIO (11-14)
        {"nombre": "Anillo Asesino de Dioses", "ataque": 92, "defensa": 155, "precio": 1500, "rareza": "legendario"},
        {"nombre": "Amuleto del Emperador Enano", "ataque": 108, "defensa": 180, "precio": 1800, "rareza": "legendario"},
        {"nombre": "Corazon De Smaug", "ataque": 250, "defensa": 170, "precio": 2200, "rareza": "legendario"},
        {"nombre": "El Corazon De La Monta√±a", "ataque": 150, "defensa": 350, "precio": 3000, "rareza": "legendario"}  # SUPREMO
    ],
    "no_muerto": [
        # NORMAL (0-3)
        {"nombre": "Anillo de Almas Perdidas", "ataque": 9, "defensa": 7, "precio": 52, "rareza": "normal"},
        {"nombre": "Amuleto de la Muerte Silenciosa", "ataque": 13, "defensa": 11, "precio": 82, "rareza": "normal"},
        {"nombre": "Collar Espectral", "ataque": 19, "defensa": 16, "precio": 122, "rareza": "normal"},
        {"nombre": "Gema del Segador", "ataque": 26, "defensa": 22, "precio": 180, "rareza": "normal"},
        
        # RARO (4-7)
        {"nombre": "Medall√≥n de la Cripta Maldita", "ataque": 34, "defensa": 28, "precio": 255, "rareza": "raro"},
        {"nombre": "Brazalete de las Sombras", "ataque": 42, "defensa": 35, "precio": 360, "rareza": "raro"},
        {"nombre": "Anillo del General Espectral", "ataque": 52, "defensa": 43, "precio": 500, "rareza": "raro"},
        {"nombre": "Amuleto de la Legi√≥n Oscura", "ataque": 62, "defensa": 52, "precio": 500, "rareza": "raro"},
        
        # √âPICO (8-10)
        {"nombre": "Collar del Se√±or de los Muertos", "ataque": 74, "defensa": 62, "precio": 800, "rareza": "epico"},
        {"nombre": "Gema del Emperador Lich", "ataque": 86, "defensa": 72, "precio": 900, "rareza": "epico"},
        {"nombre": "Medall√≥n del Apocalipsis Eterno", "ataque": 100, "defensa": 85, "precio": 1000, "rareza": "epico"},
        
        # LEGENDARIO (11-14)
        {"nombre": "Anillo de la Muerte Eterna", "ataque": 116, "defensa": 98, "precio": 1500, "rareza": "legendario"},
        {"nombre": "Amuleto del Dios de la Muerte", "ataque": 135, "defensa": 115, "precio": 1800, "rareza": "legendario"},
        {"nombre": "Brazalete del Rey de los Muertos", "ataque": 165, "defensa": 140, "precio": 2200, "rareza": "legendario"},
        {"nombre": "Reliquia de La Muerte", "ataque": 290, "defensa": 200, "precio": 3000, "rareza": "legendario"}  # SUPREMO
    ]
}

# ‚ô£‚úÖ DICCIONARIO DE POCIONES
POCIONES = {
    # COM√öN
    "Poci√≥n de Vida Menor": {"efecto": "heal", "valor": 25, "duracion": 0, "rareza": "comun"},
    "T√≥nico de Fuerza": {"efecto": "ataque", "valor": 25, "duracion": 60, "rareza": "comun"},
    
    # RARO
    "Elixir de Curaci√≥n": {"efecto": "heal", "valor": 100, "duracion": 0, "rareza": "raro"},
    "Poci√≥n de Escudo": {"efecto": "defensa", "valor": 50, "duracion": 120, "rareza": "raro"},
    
    # √âPICO
    "Suero de Regeneraci√≥n": {"efecto": "regeneracion", "valor": 20, "duracion": 120, "rareza": "epico"},
}   

# ‚ô£‚úÖ DICCIONARIO DE POCIONES
POCIONES = {
    # COM√öN
    "Poci√≥n de Vida Menor": {"efecto": "heal", "valor": 25, "duracion": 0, "rareza": "comun"},
    "T√≥nico de Fuerza": {"efecto": "ataque", "valor": 25, "duracion": 60, "rareza": "comun"},
    
    # RARO
    "Elixir de Curaci√≥n": {"efecto": "heal", "valor": 100, "duracion": 0, "rareza": "raro"},
    "Poci√≥n de Escudo": {"efecto": "defensa", "valor": 50, "duracion": 120, "rareza": "raro"},
    
    # √âPICO
    "Suero de Regeneraci√≥n": {"efecto": "regeneracion", "valor": 15, "duracion": 90, "rareza": "epico"},
    
    # LEGENDARIO
    "Poci√≥n de Vida": {"efecto": "heal", "valor": 50, "duracion": 0, "rareza": "legendario"},
    "Poci√≥n de Fuerza": {"efecto": "ataque", "valor": 50, "duracion": 120, "rareza": "legendario"},
    "Poci√≥n de la Locura": {"efecto": "ataque", "valor": 200, "duracion": 120, "rareza": "legendario"},
    "Elixir de la Muerte": {"efecto": "revive", "valor": 50, "duracion": 120, "rareza": "legendario"},
    "Poci√≥n de Velocidad Divina": {"efecto": "doble_ataque", "valor": 60, "duracion": 60, "rareza": "legendario"},
    "Bebida de Suerte": {"efecto": "suerte", "valor": 30, "duracion": 120, "rareza": "legendario"},
    "Poci√≥n de Piel de Piedra": {"efecto": "defensa", "valor": 200, "duracion": 120, "rareza": "legendario"},
    "Poci√≥n de Terror": {"efecto": "ataque", "valor": 75, "duracion": 120, "rareza": "legendario"},
    "Elixir de Valor": {"efecto": "ataque_inmunidad", "valor": 75, "duracion": 120, "rareza": "legendario"},
    "Poci√≥n de Precisi√≥n √âlfica": {"efecto": "critico", "valor": 90, "duracion": 120, "rareza": "legendario"}
}



# ‚ô£‚úÖ STATS BASE POR CLASE
STATS_BASE_POR_CLASE = {
    'humano': {'ataque': 100, 'defensa': 100},
    'elfo': {'ataque': 120, 'defensa': 80},
    'orco': {'ataque': 150, 'defensa': 70},
    'enano': {'ataque': 90, 'defensa': 130},
    'no_muerto': {'ataque': 110, 'defensa': 90}
}
















def obtener_rango_por_clase(clase, nivel):
    """Obtener rango espec√≠fico por clase y nivel"""
    rangos_clase = RANGOS_POR_CLASE.get(clase, {})
    
    # Buscar el rango m√°s alto que el nivel alcanza
    rango_encontrado = "Recluta"  # Default
    for nivel_requerido, nombre_rango in sorted(rangos_clase.items()):
        if nivel >= nivel_requerido:
            rango_encontrado = nombre_rango
        else:
            break
    
    return rango_encontrado

def calcular_stats_por_nivel(clase, nivel):
    # ‚ô£‚úÖ CONVERTIR NIVEL A ENTERO
    nivel = int(nivel)
    
    # Multiplicadores por clase
    MULTIPLICADORES_CLASE = {
        "humano": {"ataque": 3, "defensa": 3, "hp": 5},
        "elfo": {"ataque": 4, "defensa": 2, "hp": 3},
        "orco": {"ataque": 4, "defensa": 2, "hp": 6},
        "enano": {"ataque": 2, "defensa": 4, "hp": 6},
        "no_muerto": {"ataque": 3, "defensa": 3, "hp": 4}
    }
    
    mult = MULTIPLICADORES_CLASE.get(clase, {"ataque": 3, "defensa": 3, "hp": 5})
    
    # ‚ô£‚úÖ DEVOLVER CON LAS CLAVES CORRECTAS
    return {
        "ataque": int(10 + (nivel * mult["ataque"])),
        "defensa": int(10 + (nivel * mult["defensa"])),
        "hp": int(100 + (nivel * mult["hp"]))
    }

# ‚ô£‚úÖ FUNCI√ìN CALCULAR STATS TOTALES (NIVEL + EQUIPAMIENTO)
async def calcular_stats_totales(guild_id, user_id, personaje):
    """Calcular stats totales: nivel + equipamiento + mascota"""
    import json
    
    # Stats base por nivel
    clase = personaje[2]
    nivel = personaje[3]
    stats_base = calcular_stats_por_nivel(clase, nivel)
    
    # Stats de equipamiento desde la base de datos
    async with aiosqlite.connect(db_manager.db_path) as db:
        cursor = await db.execute(
            "SELECT objeto_nombre, objeto_tipo, stats FROM inventario_objetos WHERE guild_id = ? AND user_id = ? AND equipado = 1",
            (guild_id, user_id)
        )
        equipamiento = await cursor.fetchall()
    
    # Sumar stats del equipamiento
    bonus_ataque = 0
    bonus_defensa = 0
    
    for item in equipamiento:
        stats_text = item[2]  # Campo stats
        if stats_text:
            try:
                stats = json.loads(stats_text)
                bonus_ataque += stats.get('ataque', 0)
                bonus_defensa += stats.get('defensa', 0)
            except:
                pass
    
    # Stats finales
    return {
        "ataque": stats_base["ataque"] + bonus_ataque,
        "defensa": stats_base["defensa"] + bonus_defensa,
        "hp": stats_base["hp"]
    }




def calcular_suerte_total(nivel, suerte_bonus=0):
    """Calcular suerte total basada en nivel + bonus de equipamiento"""
    # Suerte base por nivel (5% + 0.1% por nivel)
    suerte_base = 5 + (nivel * 0.1)
    
    # Suerte total = base + bonus de equipamiento
    suerte_total = suerte_base + suerte_bonus
    
    # M√°ximo 25%
    if suerte_total > 25:
        suerte_total = 25
    
    return round(suerte_total, 1)




# ‚ô£‚úÖ FUNCIONES NECESARIAS PARA EL SISTEMA



# ‚ô£‚úÖ FUNCI√ìN PARA APLICAR VALORES DIN√ÅMICOS A LAS NARRACIONES
def procesar_narracion_batalla(narracion_template, datos_combate):
    """
    Procesa una plantilla de narraci√≥n y sustituye los valores din√°micos
    """
    
    # Extraer datos de los combatientes
    jugador1 = datos_combate['jugador1']
    jugador2 = datos_combate['jugador2']
    
    # Determinar las clases y ajustar los nombres de variables seg√∫n la combinaci√≥n
    clase1 = jugador1['clase'].lower()
    clase2 = jugador2['clase'].lower()
    
    # Mapear nombres de variables seg√∫n las clases
    valores = {}
    
    # Mapear jugador 1
    if clase1 == 'humano':
        valores.update({
            'titulo_humano': jugador1['titulo'],
            'arma_humano': jugador1['arma'],
            'armadura_humano': jugador1['armadura'],
            'accesorio_humano': jugador1['accesorio'],
            'mascota_humano': jugador1['mascota'],
            'hp_restante_humano': jugador1['hp_actual'],
            'hp_total_humano': jugador1['hp_maximo'],
            'hp_final_humano': datos_combate['hp_final_1']
        })
    elif clase1 == 'elfo':
        valores.update({
            'titulo_elfo': jugador1['titulo'],
            'arma_elfo': jugador1['arma'],
            'armadura_elfo': jugador1['armadura'],
            'accesorio_elfo': jugador1['accesorio'],
            'mascota_elfo': jugador1['mascota'],
            'hp_restante_elfo': jugador1['hp_actual'],
            'hp_total_elfo': jugador1['hp_maximo'],
            'hp_final_elfo': datos_combate['hp_final_1']
        })
    elif clase1 == 'orco':
        valores.update({
            'titulo_orco': jugador1['titulo'],
            'arma_orco': jugador1['arma'],
            'armadura_orco': jugador1['armadura'],
            'accesorio_orco': jugador1['accesorio'],
            'mascota_orco': jugador1['mascota'],
            'hp_restante_orco': jugador1['hp_actual'],
            'hp_total_orco': jugador1['hp_maximo'],
            'hp_final_orco': datos_combate['hp_final_1']
        })
    elif clase1 == 'enano':
        valores.update({
            'titulo_enano': jugador1['titulo'],
            'arma_enano': jugador1['arma'],
            'armadura_enano': jugador1['armadura'],
            'accesorio_enano': jugador1['accesorio'],
            'mascota_enano': jugador1['mascota'],
            'hp_restante_enano': jugador1['hp_actual'],
            'hp_total_enano': jugador1['hp_maximo'],
            'hp_final_enano': datos_combate['hp_final_1']
        })
    elif clase1 == 'no_muerto':
        valores.update({
            'titulo_no_muerto': jugador1['titulo'],
            'arma_no_muerto': jugador1['arma'],
            'armadura_no_muerto': jugador1['armadura'],
            'accesorio_no_muerto': jugador1['accesorio'],
            'mascota_no_muerto': jugador1['mascota'],
            'hp_restante_no_muerto': jugador1['hp_actual'],
            'hp_total_no_muerto': jugador1['hp_maximo'],
            'hp_final_no_muerto': datos_combate['hp_final_1']
        })
    
    # Mapear jugador 2 (similar proceso)
    if clase2 == 'humano':
        valores.update({
            'titulo_humano': jugador2['titulo'],
            'arma_humano': jugador2['arma'],
            'armadura_humano': jugador2['armadura'],
            'accesorio_humano': jugador2['accesorio'],
            'mascota_humano': jugador2['mascota'],
            'hp_restante_humano': jugador2['hp_actual'],
            'hp_total_humano': jugador2['hp_maximo'],
            'hp_final_humano': datos_combate['hp_final_2']
        })
    elif clase2 == 'elfo':
        valores.update({
            'titulo_elfo': jugador2['titulo'],
            'arma_elfo': jugador2['arma'],
            'armadura_elfo': jugador2['armadura'],
            'accesorio_elfo': jugador2['accesorio'],
            'mascota_elfo': jugador2['mascota'],
            'hp_restante_elfo': jugador2['hp_actual'],
            'hp_total_elfo': jugador2['hp_maximo'],
            'hp_final_elfo': datos_combate['hp_final_2']
        })
    elif clase2 == 'orco':
        valores.update({
            'titulo_orco': jugador2['titulo'],
            'arma_orco': jugador2['arma'],
            'armadura_orco': jugador2['armadura'],
            'accesorio_orco': jugador2['accesorio'],
            'mascota_orco': jugador2['mascota'],
            'hp_restante_orco': jugador2['hp_actual'],
            'hp_total_orco': jugador2['hp_maximo'],
            'hp_final_orco': datos_combate['hp_final_2']
        })
    elif clase2 == 'enano':
        valores.update({
            'titulo_enano': jugador2['titulo'],
            'arma_enano': jugador2['arma'],
            'armadura_enano': jugador2['armadura'],
            'accesorio_enano': jugador2['accesorio'],
            'mascota_enano': jugador2['mascota'],
            'hp_restante_enano': jugador2['hp_actual'],
            'hp_total_enano': jugador2['hp_maximo'],
            'hp_final_enano': datos_combate['hp_final_2']
        })
    elif clase2 == 'no muerto':
        valores.update({
            'titulo_no_muerto': jugador2['titulo'],
            'arma_no_muerto': jugador2['arma'],
            'armadura_no_muerto': jugador2['armadura'],
            'accesorio_no_muerto': jugador2['accesorio'],
            'mascota_no_muerto': jugador2['mascota'],
            'hp_restante_no_muerto': jugador2['hp_actual'],
            'hp_total_no_muerto': jugador2['hp_maximo'],
            'hp_final_no_muerto': datos_combate['hp_final_2']
        })
    
    # Agregar valores de da√±o
    valores.update({
        'da√±o1': datos_combate['da√±os'][0],
        'da√±o2': datos_combate['da√±os'][1],
        'da√±o3': datos_combate['da√±os'][2],
        'da√±o4': datos_combate['da√±os'][3],
        'da√±o5': datos_combate['da√±os'][4],
        'da√±o6': datos_combate['da√±os'][5]
    })
    
    # Procesar cada round
    narracion_procesada = {}
    for round_key, template in narracion_template.items():
        try:
            narracion_procesada[round_key] = template.format(**valores)
        except KeyError as e:
            # Si falta alguna variable, usar un valor por defecto
            print(f"Variable faltante en narraci√≥n: {e}")
            narracion_procesada[round_key] = template
    
    return narracion_procesada

# ‚ô£‚úÖ FUNCI√ìN PRINCIPAL PARA EJECUTAR COMBATE COMPLETO
async def ejecutar_combate_pvp_completo(interaction, jugador1_id, jugador2_id):
    """
    Funci√≥n principal que ejecuta todo el sistema de combate PVP
    """
    
    # 1. Obtener datos de los jugadores
    datos_j1 = obtener_datos_jugador(interaction.guild.id, jugador1_id)
    datos_j2 = obtener_datos_jugador(interaction.guild.id, jugador2_id)
    
    if not datos_j1 or not datos_j2:
        await interaction.followup.send("‚ùå Error al obtener datos de los jugadores.")
        return
    
    # 2. Calcular da√±os de cada round
    da√±os = []
    for i in range(6):  # 6 ataques total (2 por jugador + 2 mascotas + 2 finales)
        if i % 2 == 0:  # Ataques del jugador 1
            da√±o = calcular_da√±o_ataque(datos_j1, datos_j2)
        else:  # Ataques del jugador 2
            da√±o = calcular_da√±o_ataque(datos_j2, datos_j1)
        da√±os.append(da√±o)
    
    # 3. Calcular HP finales
    hp_final_j1 = max(0, datos_j1['hp'] - da√±os[1] - da√±os[3] - da√±os[5])
    hp_final_j2 = max(0, datos_j2['hp'] - da√±os[0] - da√±os[2] - da√±os[4])
    
    # 4. Verificar pociones de resurrecci√≥n
    tiene_pocion_j1 = verificar_pocion_resurreccion(interaction.guild.id, jugador1_id)
    tiene_pocion_j2 = verificar_pocion_resurreccion(interaction.guild.id, jugador2_id)
    
    if hp_final_j1 <= 0 and tiene_pocion_j1:
        hp_final_j1 = 50
    if hp_final_j2 <= 0 and tiene_pocion_j2:
        hp_final_j2 = 50
    
    # 5. Preparar datos para la narraci√≥n
    datos_combate = {
        'jugador1': {
            'clase': datos_j1['clase'],
            'titulo': obtener_titulo_por_nivel(datos_j1['nivel'], datos_j1['clase']),
            'arma': datos_j1.get('arma', 'Espada B√°sica'),
            'armadura': datos_j1.get('armadura', 'Armadura de Cuero'),
            'accesorio': datos_j1.get('accesorio', 'Amuleto Simple'),
            'mascota': datos_j1.get('mascota', 'Compa√±ero Fiel'),
            'hp_actual': datos_j1['hp'],
            'hp_maximo': datos_j1['hp']
        },
        'jugador2': {
            'clase': datos_j2['clase'],
            'titulo': obtener_titulo_por_nivel(datos_j2['nivel'], datos_j2['clase']),
            'arma': datos_j2.get('arma', 'Espada B√°sica'),
            'armadura': datos_j2.get('armadura', 'Armadura de Cuero'),
            'accesorio': datos_j2.get('accesorio', 'Amuleto Simple'),
            'mascota': datos_j2.get('mascota', 'Compa√±ero Fiel'),
            'hp_actual': datos_j2['hp'],
            'hp_maximo': datos_j2['hp']
        },
        'da√±os': da√±os,
        'hp_final_1': hp_final_j1,
        'hp_final_2': hp_final_j2,
        'tiene_pocion_vida_1': tiene_pocion_j1,
        'tiene_pocion_vida_2': tiene_pocion_j2
    }
    
    # 6. Obtener narraci√≥n aleatoria seg√∫n las clases
    narracion_template = obtener_narracion_aleatoria(datos_j1['clase'], datos_j2['clase'])
    
    if not narracion_template:
        await interaction.followup.send("‚ùå No se encontr√≥ narraci√≥n para esta combinaci√≥n de clases.")
        return
    
    # 7. Procesar la narraci√≥n con los datos reales
    narracion_final = procesar_narracion_batalla(narracion_template, datos_combate)
    
    # 8. Aplicar resultado completo (incluyendo ganador)
    resultado_completo = aplicar_narracion_con_ganador(narracion_final, datos_combate)
    
    # 9. Crear embed √©pico para mostrar la batalla
    embed = discord.Embed(
        title="‚öîÔ∏è **COMBATE √âPICO EN CURSO** ‚öîÔ∏è",
        description="üåü **Una batalla legendaria est√° a punto de comenzar...**",
        color=0xFF6B35
    )
    
    embed.add_field(
        name=f"üëë {datos_combate['jugador1']['titulo']}",
        value=f"**Clase:** {datos_j1['clase']}\n**HP:** {datos_j1['hp']}\n**Nivel:** {datos_j1['nivel']}",
        inline=True
    )
    
    embed.add_field(
        name="‚öîÔ∏è VS ‚öîÔ∏è",
        value="**¬°QUE COMIENCE\nLA BATALLA!**",
        inline=True
    )
    
    embed.add_field(
        name=f"üëë {datos_combate['jugador2']['titulo']}",
        value=f"**Clase:** {datos_j2['clase']}\n**HP:** {datos_j2['hp']}\n**Nivel:** {datos_j2['nivel']}",
        inline=True
    )
    
    # 10. Enviar embed inicial
    mensaje_batalla = await interaction.followup.send(embed=embed)
    
    # 11. Mostrar cada round con delays dram√°ticos
    await asyncio.sleep(3)
    
    # Round 1
    embed1 = discord.Embed(
        title="‚öîÔ∏è **ROUND 1** ‚öîÔ∏è",
        description=resultado_completo['rounds']['round1'],
        color=0xFF6B35
    )
    await mensaje_batalla.edit(embed=embed1)
    await asyncio.sleep(4)
    
    # Round 2
    embed2 = discord.Embed(
        title="üî• **ROUND 2** üî•",
        description=resultado_completo['rounds']['round2'],
        color=0xFF4500
    )
    await mensaje_batalla.edit(embed=embed2)
    await asyncio.sleep(4)
    
    # Round 3
    embed3 = discord.Embed(
        title="üêâ **ROUND 3 - MASCOTAS** üêâ",
        description=resultado_completo['rounds']['round3'],
        color=0x8A2BE2
    )
    await mensaje_batalla.edit(embed=embed3)
    await asyncio.sleep(4)
    
    # Round 4 - Final
    embed4 = discord.Embed(
        title="üí• **ROUND FINAL** üí•",
        description=resultado_completo['rounds']['round4'],
        color=0xFFD700
    )
    await mensaje_batalla.edit(embed=embed4)
    await asyncio.sleep(3)
    
    # 12. Mostrar resurrecciones si las hay
    if resultado_completo['resurreccion_1']:
        embed_res1 = discord.Embed(
            title="üíÄ **RESURRECCI√ìN √âPICA** üíÄ",
            description=resultado_completo['resurreccion_1'],
            color=0x00FF00
        )
        await mensaje_batalla.edit(embed=embed_res1)
        await asyncio.sleep(3)
    
    if resultado_completo['resurreccion_2']:
        embed_res2 = discord.Embed(
            title="üíÄ **RESURRECCI√ìN √âPICA** üíÄ",
            description=resultado_completo['resurreccion_2'],
            color=0x00FF00
        )
        await mensaje_batalla.edit(embed=embed_res2)
        await asyncio.sleep(3)
    
    # 13. Mostrar resultado final
    if resultado_completo['hp_final_1'] > resultado_completo['hp_final_2']:
        color_final = 0x00FF00  # Verde para victoria
    elif resultado_completo['hp_final_2'] > resultado_completo['hp_final_1']:
        color_final = 0x00FF00  # Verde para victoria
    else:
        color_final = 0xFFFF00  # Amarillo para empate
    
    embed_final = discord.Embed(
        title="üëë **RESULTADO FINAL** üëë",
        description=resultado_completo['resultado_final'],
        color=color_final
    )
    
    await mensaje_batalla.edit(embed=embed_final)
    
    # 14. Actualizar estad√≠sticas PVP en la base de datos
    actualizar_estadisticas_pvp(interaction.guild.id, jugador1_id, jugador2_id, 
                               resultado_completo['hp_final_1'], resultado_completo['hp_final_2'])
    
    print(f"‚úÖ Combate completado: {datos_j1['nombre']} vs {datos_j2['nombre']}")





def calcular_exp_necesaria(nivel):
    """Calcular experiencia necesaria para subir de nivel"""
    nivel = int(nivel)  # ‚Üê AGREGAR ESTA L√çNEA
    return int(500 * (nivel ** 1.5))

def obtener_rango(nivel, clase):
    """Obtener t√≠tulo seg√∫n el nivel y clase espec√≠fica"""
    nivel = int(nivel)
    
    # T√≠tulos por clase (mismo orden que imagenes_equipo)
    titulos_por_clase = {
        "humano": ["Plebeyo", "Recluta", "Guerrero", "Hijo del Acero", "Caballero de Sangre", 
                   "Campe√≥n de la Espada", "Se√±or de la Guerra", "H√©roe del Reino", 
                   "Guardi√°n de los Siete Sellos", "Destructor de Mundos", "Semidi√≥s del Caos", "Dios de la Guerra"],
        
        "elfo": ["Recluta", "Alma del Bosque", "Arquero Esmeralda", "Guardi√°n del Bosque", 
                 "Se√±or de las Hojas Eternas", "Se√±or de los Astros", "√öltimo Hijo del Bosque", 
                 "Luz Inmortal de los Bosques", "Se√±or de la Corte Sombr√≠a", "Guardi√°n de la Corona", 
                 "Se√±or de los Asesinos √âlficos", "Rey del Bosque Profundo"],
        
        "orco": ["Recluta", "Recluta de la Horda", "Guerrero Sangriento", "Rompehuesos", 
                 "Se√±or de la Matanza", "Destructor de Almas", "Jefe de Guerra Salvaje", 
                 "Campe√≥n del Clan Sangriento", "Devorador de Esp√≠ritus", "Se√±or de la Bestia", 
                 "L√≠der de la Horda Oscura", "El √öltimo Rompedor de Mundos"],
        
        "enano": ["Recluta", "Hacha Novicia", "Martillo de Piedra", "Guerrero del Yunque", 
                  "Defensor de la Monta√±a", "Guardi√°n del Fuego Antiguo", "Hijo del Fuego de la Monta√±a", 
                  "Enano de la Corona de Hierro", "Campe√≥n del Acero R√∫nico", "Enano Rey de la Monta√±a", 
                  "Dios Enano del Acero Vivo", "Enano Asesino de Dioses"],
        
        "no_muerto": ["Muerto", "Alma Maldita", "Guerrero Putrefacto", "Espadach√≠n Esquel√©tico", 
                      "Campe√≥n de la Cripta", "Soldado de las Sombras", "Se√±or de la Espada Negra", 
                      "Guardi√°n del Abismo", "General Espectral", "Jefe de la Legi√≥n Oscura", 
                      "Se√±or de la Legi√≥n de la Muerte", "Dios de la Muerte Eterna"]
    }
    
    # Determinar √≠ndice del t√≠tulo seg√∫n nivel
    if nivel <= 4: indice = 0      # Lv 0-4
    elif nivel <= 9: indice = 1    # Lv 5-9  
    elif nivel <= 19: indice = 2   # Lv 10-19
    elif nivel <= 29: indice = 3   # Lv 20-29
    elif nivel <= 39: indice = 4   # Lv 30-39
    elif nivel <= 49: indice = 5   # Lv 40-49
    elif nivel <= 59: indice = 6   # Lv 50-59
    elif nivel <= 69: indice = 7   # Lv 60-69
    elif nivel <= 79: indice = 8   # Lv 70-79
    elif nivel <= 89: indice = 9   # Lv 80-89
    elif nivel <= 99: indice = 10  # Lv 90-99
    else: indice = 11              # Lv 100
    
    # Obtener t√≠tulo seg√∫n clase e √≠ndice
    if clase in titulos_por_clase:
        return titulos_por_clase[clase][indice]
    else:
        return "T√≠tulo Desconocido"



def crear_barra_progreso(actual, maximo, longitud=10):
    """Crear barra de progreso visual"""
    porcentaje = actual / maximo
    bloques_llenos = int(porcentaje * longitud)
    bloques_vacios = longitud - bloques_llenos
    return "‚ñà" * bloques_llenos + "‚ñë" * bloques_vacios

async def obtener_personaje(guild_id, user_id):
    """Obtener datos del personaje desde la database"""
    async with aiosqlite.connect(db_manager.db_path) as db:
        cursor = await db.execute(
            "SELECT * FROM personajes WHERE guild_id = ? AND user_id = ?",
            (guild_id, user_id)
        )
        personaje = await cursor.fetchone()
        # DEBUG
        print(f"üîç Personaje obtenido: {personaje}")
        return personaje

async def crear_personaje(guild_id, user_id, clase):
    """Crear nuevo personaje en la database"""
    async with aiosqlite.connect(db_manager.db_path) as db:
        fecha_creacion = datetime.now(timezone.utc).isoformat()
        await db.execute(
            "INSERT INTO personajes (guild_id, user_id, clase, nivel, experiencia, hp_actual, hp_maximo, florines, fecha_creacion) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)",
            (guild_id, user_id, clase, 1, 0, 100, 100, 100, fecha_creacion)
        )
        await db.commit()
        print(f"üéÆ Personaje creado: Usuario {user_id}, Clase {clase}, HP: 100/100")  # Debug

# ‚ô£‚úÖ FUNCI√ìN ACTUALIZAR PERSONAJE - NUEVA
async def actualizar_personaje(guild_id, user_id, **campos):
    """Actualizar cualquier campo del personaje en la BD"""
    async with aiosqlite.connect(db_manager.db_path) as db:
        campos_str = ", ".join([f"{k} = ?" for k in campos.keys()])
        valores = list(campos.values()) + [guild_id, user_id]
        await db.execute(
            f"UPDATE personajes SET {campos_str} WHERE guild_id = ? AND user_id = ?",
            valores
        )
        await db.commit()
        print(f"üíæ Personaje actualizado: {campos}")  # Debug

# ‚ô£‚úÖ FUNCI√ìN INICIALIZAR EQUIPO B√ÅSICO
def inicializar_equipo_basico(user_data, clase):
    """Inicializar equipo b√°sico para nuevos personajes"""
    user_data['arma_equipada'] = 'Sin equipar'
    user_data['armadura_equipada'] = 'Sin equipar'
    user_data['accesorio_equipado'] = 'Sin equipar'
    user_data['arma_stats'] = {'ataque': 0, 'defensa': 0}
    user_data['armadura_stats'] = {'ataque': 0, 'defensa': 0}
    user_data['accesorio_stats'] = {'ataque': 0, 'defensa': 0}
    
    # Equipo b√°sico por clase
    equipos_basicos = {
        'humano': {
            'arma': 'Espada del Alba',
            'stats_arma': {'ataque': 15, 'defensa': 2}
        },
        'elfo': {
            'arma': 'Arco de Hojas Susurrantes',
            'stats_arma': {'ataque': 20, 'defensa': 1}
        },
        'orco': {
            'arma': 'Hacha de Hueso Sangriento',
            'stats_arma': {'ataque': 18, 'defensa': 4}
        },
        'enano': {
            'arma': 'Martillo de Forja Ardiente',
            'stats_arma': {'ataque': 12, 'defensa': 8}
        },
        'no_muerto': {
            'arma': 'Daga de Almas Perdidas',
            'stats_arma': {'ataque': 16, 'defensa': 3}
        }
    }
    
    if clase in equipos_basicos:
        equipo_inicial = equipos_basicos[clase]
        user_data['arma_equipada'] = equipo_inicial['arma']
        user_data['arma_stats'] = equipo_inicial['stats_arma']




def obtener_emoji_rareza(rareza):
    """Obtener emoji seg√∫n la rareza del item"""
    emojis = {
        "comun": "‚ö™",
        "normal": "‚ö™", 
        "raro": "üîµ",
        "epico": "üü£",
        "legendario": "üü°"
    }
    return emojis.get(rareza.lower(), "‚ö™")












# ‚ô£‚úÖ FUNCI√ìN SISTEMA DE VENTA DE EQUIPO
async def vender_equipo(interaction):
    global users_data  # ‚Üê AGREGAR ESTA L√çNEA
    user_id = str(interaction.user.id)
    
    if user_id not in users_data:
        embed = discord.Embed(
            title="‚ùå Error",
            description="No tienes un personaje creado.",
            color=0xff0000
        )
        await interaction.response.send_message(embed=embed, ephemeral=True)
        return
    
    user_data = users_data[user_id]
    
    # Verificar si tiene equipo equipado
    arma_equipada = user_data.get('arma_equipada', 'Sin equipar')
    armadura_equipada = user_data.get('armadura_equipada', 'Sin equipar')
    accesorio_equipado = user_data.get('accesorio_equipado', 'Sin equipar')
    
    if arma_equipada == 'Sin equipar' and armadura_equipada == 'Sin equipar' and accesorio_equipado == 'Sin equipar':
        embed = discord.Embed(
            title="üí∏ Nada que Vender",
            description="No tienes ning√∫n equipo equipado para vender.",
            color=0xff9900
        )
        await interaction.response.send_message(embed=embed, ephemeral=True)
        return
    
    embed = discord.Embed(
        title="üí∞ VENDER EQUIPO",
        description="¬øQu√© equipo deseas vender?",
        color=0xffaa00
    )
    
    equipo_texto = ""
    if arma_equipada != 'Sin equipar':
        equipo_texto += f"üó°Ô∏è **{arma_equipada}** - Obt√©n florines\n"
    if armadura_equipada != 'Sin equipar':
        equipo_texto += f"üõ°Ô∏è **{armadura_equipada}** - Obt√©n florines\n"
    if accesorio_equipado != 'Sin equipar':
        equipo_texto += f"üíç **{accesorio_equipado}** - Obt√©n florines\n"
    
    embed.add_field(name="üéí EQUIPO DISPONIBLE", value=equipo_texto, inline=False)
    
    view = VentaEquipoView()
    await interaction.response.send_message(embed=embed, view=view)


# ‚ô£‚úÖ CLASE VISTA VENTA EQUIPO
class VentaEquipoView(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=300)
    
    @discord.ui.button(label="üó°Ô∏è Vender Arma", style=discord.ButtonStyle.danger)
    async def vender_arma(self, interaction: discord.Interaction, button: discord.ui.Button):
        global users_data  # ‚Üê AGREGAR ESTA L√çNEA
        await procesar_venta_equipo(interaction, 'arma')
    
    @discord.ui.button(label="üõ°Ô∏è Vender Armadura", style=discord.ButtonStyle.primary)
    async def vender_armadura(self, interaction: discord.Interaction, button: discord.ui.Button):
        global users_data  # ‚Üê AGREGAR ESTA L√çNEA
        await procesar_venta_equipo(interaction, 'armadura')
    
    @discord.ui.button(label="üíç Vender Accesorio", style=discord.ButtonStyle.secondary)
    async def vender_accesorio(self, interaction: discord.Interaction, button: discord.ui.Button):
        global users_data  # ‚Üê AGREGAR ESTA L√çNEA
        await procesar_venta_equipo(interaction, 'accesorio')
    
    @discord.ui.button(label="üîÑ Cancelar", style=discord.ButtonStyle.success)
    async def cancelar_venta(self, interaction: discord.Interaction, button: discord.ui.Button):
        global users_data  # ‚Üê AGREGAR ESTA L√çNEA
        await mostrar_equipo(interaction)





























# ‚ô£‚úÖ FUNCI√ìN PROCESAR VENTA DE EQUIPO
async def procesar_venta_equipo(interaction, tipo_equipo):
    user_id = str(interaction.user.id)
    user_data = users_data[user_id]
    
    if tipo_equipo == 'arma':
        equipo_key = 'arma_equipada'
        stats_key = 'arma_stats'
        equipos_db = ARMAS_POR_CLASE
    elif tipo_equipo == 'armadura':
        equipo_key = 'armadura_equipada'
        stats_key = 'armadura_stats'
        equipos_db = ARMADURAS_POR_CLASE
    else:  # accesorio
        equipo_key = 'accesorio_equipado'
        stats_key = 'accesorio_stats'
        equipos_db = ACCESORIOS_POR_CLASE
    
    equipo_equipado = user_data.get(equipo_key, 'Sin equipar')
    
    if equipo_equipado == 'Sin equipar':
        embed = discord.Embed(
            title="‚ùå Error",
            description=f"No tienes ning√∫n {tipo_equipo} equipado.",
            color=0xff0000
        )
        await interaction.response.send_message(embed=embed, ephemeral=True)
        return
    
    # Buscar precio del equipo
    clase = user_data['clase']
    equipos_clase = equipos_db.get(clase, [])
    precio_venta = 0
    
    for equipo in equipos_clase:
        if equipo['nombre'] == equipo_equipado:
            precio_venta = int(equipo['precio'] * 0.7)  # 70% del precio original
            break
    
    # Procesar venta
    florines_actuales = user_data.get('florines', 0)
    user_data['florines'] = florines_actuales + precio_venta
    user_data[equipo_key] = 'Sin equipar'
    user_data[stats_key] = {'ataque': 0, 'defensa': 0}
    
    embed = discord.Embed(
        title="‚úÖ ¬°Venta Exitosa!",
        description=f"Has vendido: **{equipo_equipado}**\nüí∞ Obtuviste **{precio_venta} florines**\nüíé Florines totales: **{user_data['florines']}**",
        color=0x00ff00
    )
    
    await interaction.response.send_message(embed=embed, ephemeral=True)


# ‚ô£‚úÖ FUNCI√ìN COMANDO TIENDA
async def comando_tienda(interaction):
    global users_data  # ‚Üê AGREGAR ESTA L√çNEA
    user_id = str(interaction.user.id)
    
    if user_id not in users_data:
        embed = discord.Embed(
            title="‚ùå Error",
            description="No tienes un personaje creado. Usa `/aventura` para empezar.",
            color=0xff0000
        )
        await interaction.response.send_message(embed=embed, ephemeral=True)
        return
    
    user_data = users_data[user_id]
    florines = user_data.get('florines', 0)
    clase = user_data['clase']
    
    embed = discord.Embed(
        title="üè™ TIENDA √âPICA DE AVENTUREROS",
        description=f"¬°Bienvenido, valiente {clase}! Aqu√≠ encontrar√°s el mejor equipo del reino.\n\nüí∞ **Florines disponibles:** {florines}",
        color=0xffd700
    )
    
    embed.add_field(
        name="üó°Ô∏è ARMAS LEGENDARIAS",
        value="Las mejores armas forjadas por maestros herreros",
        inline=True
    )
    embed.add_field(
        name="üõ°Ô∏è ARMADURAS √âPICAS",
        value="Protecci√≥n digna de los m√°s grandes h√©roes",
        inline=True
    )
    embed.add_field(
        name="üíç ACCESORIOS M√çSTICOS",
        value="Objetos m√°gicos que potencian tus habilidades",
        inline=True
    )
    
    embed.set_footer(text="üí° Tip: Puedes vender tu equipo actual para obtener florines")
    
    view = TiendaView()
    await interaction.response.send_message(embed=embed, view=view)





















# ‚ô£‚úÖ CLASE VISTA TIENDA
class TiendaView(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=300)
    
    @discord.ui.button(label="üó°Ô∏è Comprar Armas", style=discord.ButtonStyle.danger, emoji="‚öîÔ∏è")
    async def comprar_armas(self, interaction: discord.Interaction, button: discord.ui.Button):
        global users_data  # ‚Üê AGREGAR ESTA L√çNEA SIEMPRE
        await mostrar_tienda_armas(interaction)
    
    @discord.ui.button(label="üõ°Ô∏è Comprar Armaduras", style=discord.ButtonStyle.primary, emoji="üõ°Ô∏è")
    async def comprar_armaduras(self, interaction: discord.Interaction, button: discord.ui.Button):
        global users_data  # ‚Üê AGREGAR ESTA L√çNEA SIEMPRE
        await mostrar_tienda_armaduras(interaction)
    
    @discord.ui.button(label="üíç Comprar Accesorios", style=discord.ButtonStyle.secondary, emoji="üíé")
    async def comprar_accesorios(self, interaction: discord.Interaction, button: discord.ui.Button):
        global users_data  # ‚Üê AGREGAR ESTA L√çNEA SIEMPRE
        await mostrar_tienda_accesorios(interaction)
    
    @discord.ui.button(label="üí∞ Vender Equipo", style=discord.ButtonStyle.success, emoji="üí∏")
    async def vender_equipo_tienda(self, interaction: discord.Interaction, 
button: discord.ui.Button):
        global users_data  # ‚Üê AGREGAR ESTA L√çNEA
        await vender_equipo(interaction)
    
    @discord.ui.button(label="üîÑ Salir de la Tienda", style=discord.ButtonStyle.gray)
    async def salir_tienda(self, interaction: discord.Interaction, button: discord.ui.Button):
        embed = discord.Embed(
            title="üö™ ¬°Hasta la vista!",
            description="Gracias por visitar la Tienda √âpica de Aventureros.\n¬°Que tengas grandes aventuras!",
            color=0x00ff00
        )
        await interaction.response.send_message(embed=embed, ephemeral=True)

# ‚ô£‚úÖ FUNCI√ìN MOSTRAR TIENDA ARMAS
async def mostrar_tienda_armas(interaction):
    global users_data  # ‚Üê AGREGAR ESTA L√çNEA SIEMPRE
    user_id = str(interaction.user.id)
    user_data = users_data[user_id]
    clase = user_data['clase']
    florines = user_data.get('florines', 0)
    
    armas = ARMAS_POR_CLASE.get(clase, [])
    
    embed = discord.Embed(
        title=f"üó°Ô∏è ARSENAL DE {clase.upper()}",
        description=f"üí∞ Florines disponibles: **{florines}**\n\nElige un arma para comprar:",
        color=0xff4444
    )
    
    # Mostrar todas las armas con precios
    armas_texto = ""
    for i, arma in enumerate(armas[:8]):  # Mostrar primeras 8
        armas_texto += f"**{i+1}.** {arma['nombre']}\n"
        armas_texto += f"   ‚öîÔ∏è +{arma['ataque']} ATK | üõ°Ô∏è +{arma['defensa']} DEF\n"
        armas_texto += f"   üí∞ **{arma['precio']} florines**\n\n"
    
    embed.add_field(name="‚öîÔ∏è ARMAS DISPONIBLES", value=armas_texto, inline=False)
    
    view = TiendaArmasView(armas, florines)
    await interaction.response.send_message(embed=embed, view=view)














# ‚ô£‚úÖ CLASE VISTA TIENDA ARMAS
class TiendaArmasView(discord.ui.View):
    def __init__(self, armas, florines):
        super().__init__(timeout=300)
        self.armas = armas
        self.florines = florines
        
        # Crear dropdown solo con armas que el usuario puede comprar
        options = []
        for i, arma in enumerate(armas[:10]):
            puede_comprar = "‚úÖ" if florines >= arma['precio'] else "‚ùå"
            options.append(
                discord.SelectOption(
                    label=f"{puede_comprar} {arma['nombre']}",
                    description=f"‚öîÔ∏è +{arma['ataque']} ATK | üõ°Ô∏è +{arma['defensa']} DEF | üí∞ {arma['precio']} florines",
                    value=str(i)
                )
            )
        
        if options:
            self.select_arma = discord.ui.Select(
                placeholder="üó°Ô∏è Elige un arma para comprar...",
                options=options
            )
            self.select_arma.callback = self.comprar_arma
            self.add_item(self.select_arma)
    
    async def comprar_arma(self, interaction: discord.Interaction):
        user_id = str(interaction.user.id)
        arma_index = int(self.select_arma.values[0])
        arma_seleccionada = self.armas[arma_index]
        
        user_data = users_data[user_id]
        florines_actuales = user_data.get('florines', 0)
        
        if florines_actuales < arma_seleccionada['precio']:
            embed = discord.Embed(
                title="‚ùå Florines Insuficientes",
                description=f"Necesitas **{arma_seleccionada['precio']} florines** pero solo tienes **{florines_actuales}**.",
                color=0xff0000
            )
            await interaction.response.send_message(embed=embed, ephemeral=True)
            return
        
        # Procesar compra
        user_data['florines'] = florines_actuales - arma_seleccionada['precio']
        user_data['arma_equipada'] = arma_seleccionada['nombre']
        user_data['arma_stats'] = {
            'ataque': arma_seleccionada['ataque'],
            'defensa': arma_seleccionada['defensa']
        }
        
        embed = discord.Embed(
            title="‚úÖ ¬°Compra Exitosa!",
            description=f"Has comprado y equipado: **{arma_seleccionada['nombre']}**\n‚öîÔ∏è +{arma_seleccionada['ataque']} ATK | üõ°Ô∏è +{arma_seleccionada['defensa']} DEF\n\nüí∞ Florines restantes: **{user_data['florines']}**",
            color=0x00ff00
        )
        
        await interaction.response.send_message(embed=embed, ephemeral=True)
    
    @discord.ui.button(label="üîÑ Volver a la Tienda", style=discord.ButtonStyle.secondary)
    async def volver_tienda(self, interaction: discord.Interaction, button: discord.ui.Button):
        global users_data  # ‚Üê AGREGAR ESTA L√çNEA
        await comando_tienda(interaction)


# ‚ô£‚úÖ FUNCI√ìN MOSTRAR TIENDA ARMADURAS
async def mostrar_tienda_armaduras(interaction):
    global users_data  # ‚Üê AGREGAR ESTA L√çNEA SIEMPRE
    user_id = str(interaction.user.id)
    user_data = users_data[user_id]
    clase = user_data['clase']
    florines = user_data.get('florines', 0)
    
    armaduras = ARMADURAS_POR_CLASE.get(clase, [])
    
    embed = discord.Embed(
        title=f"üõ°Ô∏è ARMER√çA DE {clase.upper()}",
        description=f"üí∞ Florines disponibles: **{florines}**\n\nElige una armadura para comprar:",
        color=0x4444ff
    )
    
    # Mostrar todas las armaduras con precios
    armaduras_texto = ""
    for i, armadura in enumerate(armaduras[:8]):
        armaduras_texto += f"**{i+1}.** {armadura['nombre']}\n"
        armaduras_texto += f"   ‚öîÔ∏è +{armadura['ataque']} ATK | üõ°Ô∏è +{armadura['defensa']} DEF\n"
        armaduras_texto += f"   üí∞ **{armadura['precio']} florines**\n\n"
    
    embed.add_field(name="üõ°Ô∏è ARMADURAS DISPONIBLES", value=armaduras_texto, inline=False)
    
    view = TiendaArmadurasView(armaduras, florines)
    await interaction.response.send_message(embed=embed, view=view)


















# ‚ô£‚úÖ CLASE VISTA TIENDA ARMADURAS
class TiendaArmadurasView(discord.ui.View):
    def __init__(self, armaduras, florines):
        super().__init__(timeout=300)
        self.armaduras = armaduras
        self.florines = florines
        
        # Crear dropdown solo con armaduras que el usuario puede comprar
        options = []
        for i, armadura in enumerate(armaduras[:10]):
            puede_comprar = "‚úÖ" if florines >= armadura['precio'] else "‚ùå"
            options.append(
                discord.SelectOption(
                    label=f"{puede_comprar} {armadura['nombre']}",
                    description=f"‚öîÔ∏è +{armadura['ataque']} ATK | üõ°Ô∏è +{armadura['defensa']} DEF | üí∞ {armadura['precio']} florines",
                    value=str(i)
                )
            )
        
        if options:
            self.select_armadura = discord.ui.Select(
                placeholder="üõ°Ô∏è Elige una armadura para comprar...",
                options=options
            )
            self.select_armadura.callback = self.comprar_armadura
            self.add_item(self.select_armadura)
    
    async def comprar_armadura(self, interaction: discord.Interaction):
        user_id = str(interaction.user.id)
        armadura_index = int(self.select_armadura.values[0])
        armadura_seleccionada = self.armaduras[armadura_index]
        
        user_data = users_data[user_id]
        florines_actuales = user_data.get('florines', 0)
        
        if florines_actuales < armadura_seleccionada['precio']:
            embed = discord.Embed(
                title="‚ùå Florines Insuficientes",
                description=f"Necesitas **{armadura_seleccionada['precio']} florines** pero solo tienes **{florines_actuales}**.",
                color=0xff0000
            )
            await interaction.response.send_message(embed=embed, ephemeral=True)
            return
        
        # Procesar compra
        user_data['florines'] = florines_actuales - armadura_seleccionada['precio']
        user_data['armadura_equipada'] = armadura_seleccionada['nombre']
        user_data['armadura_stats'] = {
            'ataque': armadura_seleccionada['ataque'],
            'defensa': armadura_seleccionada['defensa']
        }
        
        embed = discord.Embed(
            title="‚úÖ ¬°Compra Exitosa!",
            description=f"Has comprado y equipado: **{armadura_seleccionada['nombre']}**\n‚öîÔ∏è +{armadura_seleccionada['ataque']} ATK | üõ°Ô∏è +{armadura_seleccionada['defensa']} DEF\n\nüí∞ Florines restantes: **{user_data['florines']}**",
            color=0x00ff00
        )
        
        await interaction.response.send_message(embed=embed, ephemeral=True)
    
    @discord.ui.button(label="üîÑ Volver a la Tienda", style=discord.ButtonStyle.secondary)
    async def volver_tienda(self, interaction: discord.Interaction, button: discord.ui.Button):
        global users_data  # ‚Üê AGREGAR ESTA L√çNEA
        await comando_tienda(interaction)

# ‚ô£‚úÖ FUNCI√ìN MOSTRAR TIENDA ACCESORIOS
async def mostrar_tienda_accesorios(interaction):
    global users_data  # ‚Üê AGREGAR ESTA L√çNEA SIEMPRE
    user_id = str(interaction.user.id)
    user_data = users_data[user_id]
    clase = user_data['clase']
    florines = user_data.get('florines', 0)
    
    accesorios = ACCESORIOS_POR_CLASE.get(clase, [])
    
    embed = discord.Embed(
        title=f"üíç JOYER√çA M√çSTICA DE {clase.upper()}",
        description=f"üí∞ Florines disponibles: **{florines}**\n\nElige un accesorio para comprar:",
        color=0xff44ff
    )
    
    # Mostrar todos los accesorios con precios
    accesorios_texto = ""
    for i, accesorio in enumerate(accesorios[:8]):
        accesorios_texto += f"**{i+1}.** {accesorio['nombre']}\n"
        accesorios_texto += f"   ‚öîÔ∏è +{accesorio['ataque']} ATK | üõ°Ô∏è +{accesorio['defensa']} DEF\n"
        accesorios_texto += f"   üí∞ **{accesorio['precio']} florines**\n\n"
    
    embed.add_field(name="üíç ACCESORIOS DISPONIBLES", value=accesorios_texto, inline=False)
    
    view = TiendaAccesoriosView(accesorios, florines)
    await interaction.response.send_message(embed=embed, view=view)














# ‚ô£‚úÖ CLASE VISTA TIENDA ACCESORIOS
class TiendaAccesoriosView(discord.ui.View):
    def __init__(self, accesorios, florines):
        super().__init__(timeout=300)
        self.accesorios = accesorios
        self.florines = florines
        
        # Crear dropdown solo con accesorios que el usuario puede comprar
        options = []
        for i, accesorio in enumerate(accesorios[:10]):
            puede_comprar = "‚úÖ" if florines >= accesorio['precio'] else "‚ùå"
            options.append(
                discord.SelectOption(
                    label=f"{puede_comprar} {accesorio['nombre']}",
                    description=f"‚öîÔ∏è +{accesorio['ataque']} ATK | üõ°Ô∏è +{accesorio['defensa']} DEF | üí∞ {accesorio['precio']} florines",
                    value=str(i)
                )
            )
        
        if options:
            self.select_accesorio = discord.ui.Select(
                placeholder="üíç Elige un accesorio para comprar...",
                options=options
            )
            self.select_accesorio.callback = self.comprar_accesorio
            self.add_item(self.select_accesorio)
    
    async def comprar_accesorio(self, interaction: discord.Interaction):
        user_id = str(interaction.user.id)
        accesorio_index = int(self.select_accesorio.values[0])
        accesorio_seleccionado = self.accesorios[accesorio_index]
        
        user_data = users_data[user_id]
        florines_actuales = user_data.get('florines', 0)
        
        if florines_actuales < accesorio_seleccionado['precio']:
            embed = discord.Embed(
                title="‚ùå Florines Insuficientes",
                description=f"Necesitas **{accesorio_seleccionado['precio']} florines** pero solo tienes **{florines_actuales}**.",
                color=0xff0000
            )
            await interaction.response.send_message(embed=embed, ephemeral=True)
            return
        
        # Procesar compra
        user_data['florines'] = florines_actuales - accesorio_seleccionado['precio']
        user_data['accesorio_equipado'] = accesorio_seleccionado['nombre']
        user_data['accesorio_stats'] = {
            'ataque': accesorio_seleccionado['ataque'],
            'defensa': accesorio_seleccionado['defensa']
        }
        
        embed = discord.Embed(
            title="‚úÖ ¬°Compra Exitosa!",
            description=f"Has comprado y equipado: **{accesorio_seleccionado['nombre']}**\n‚öîÔ∏è +{accesorio_seleccionado['ataque']} ATK | üõ°Ô∏è +{accesorio_seleccionado['defensa']} DEF\n\nüí∞ Florines restantes: **{user_data['florines']}**",
            color=0x00ff00
        )
        
        await interaction.response.send_message(embed=embed, ephemeral=True)
    
    @discord.ui.button(label="üîÑ Volver a la Tienda", style=discord.ButtonStyle.secondary)
    async def volver_tienda(self, interaction: discord.Interaction, button: discord.ui.Button):
        global users_data  # ‚Üê AGREGAR ESTA L√çNEA
        await comando_tienda(interaction)






















#  ‚ô£‚úÖverificar whitelist
async def solo_verificar_whitelist_interaction(interaction):
    """Verificar whitelist para interacciones sin frases"""
    user_id = interaction.user.id
    
    # Obtener configuraci√≥n del servidor
    config = await db_manager.get_config(interaction.guild_id)
    whitelist = config.get("whitelist", [])
    
    # VERIFICAR SI EST√Å EN WHITELIST NORMAL (acceso completo)
    if user_id in whitelist:
        return True  # Acceso completo
    
    # VERIFICAR VIP SOLO (sin acceso a comandos)
    if user_id in WHITELIST_VIP:
        frase = random.choice(WHITELIST_VIP[user_id])
        await interaction.response.send_message(frase, ephemeral=True)
        return False  # Sin acceso
    
    # Usuario normal - sin acceso
    frase = random.choice(FRASES_NO_WHITELIST)
    await interaction.response.send_message(f"**{frase}**", ephemeral=True)
    return False



# Al inicio del c√≥digo (con las otras variables)

#  ‚ô£‚úÖgifs libertad
GIFS_LIBERAR = [
    # Busca GIFs de liberaci√≥n/escape/llaves y s√∫belos a Imgur
    "https://media4.giphy.com/media/v1.Y2lkPTc5MGI3NjExMGUyMjY4dXRyM2VoczQzZjh3cTdlZ2kzanR2ZXR0YWpsaGZ5ZHo1YSZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/4Uo3ZQp8WrzgphLhPx/giphy.gif",  # Reemplaza con URLs reales
]

#  ‚ô£‚úÖgifs calabozo
GIFS_CALABOZO = [
    # Busca GIFs de prisiones/calabozos/cadenas y s√∫belos a Imgur
    "https://media3.giphy.com/media/v1.Y2lkPTc5MGI3NjExY3FucmM3YXY5bHM4d2FxdHFuY2ZnYmF5ajVqdGs5bHl2ZjRsMHJnbyZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/UhNqutHksywkU/giphy.gif", 
    "https://media4.giphy.com/media/v1.Y2lkPTc5MGI3NjExYngyeTQ5eWZyODBleGdiMmx6ZXozZnQzZ3ZxeWZidndxeWtwazl0NiZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/zioAGhDKH81ivyYdZ4/giphy.gif",
    "https://media0.giphy.com/media/v1.Y2lkPTc5MGI3NjExdWVia21vNnFpbGJ2NHg3MDdsMTcwZXBwdXJzZ2MwazBwNzdtcnZqaiZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/Mt0DUFwh62abcC1OHt/giphy.gif",# Reemplaza con URLs reales
    "https://media0.giphy.com/media/v1.Y2lkPTc5MGI3NjExdWVia21vNnFpbGJ2NHg3MDdsMTcwZXBwdXJzZ2MwazBwNzdtcnZqaiZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/Mt0DUFwh62abcC1OHt/giphy.gif",
    "https://media0.giphy.com/media/v1.Y2lkPTc5MGI3NjExbGMxM2dieWxkcGlncWxxdDBzMGFtZmRjNXh0c2VvZWF4bHJyOHFqOCZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/O4WGKcbpYf6PK0Q6nB/giphy.gif",
]

#  ‚ô£‚úÖgifs lock
GIFS_LOCK = [
    "https://media4.giphy.com/media/v1.Y2lkPTc5MGI3NjExbmhscnB2Znh6ZHozN2t4cHc3NmRtYzRtdzRvc3Zndm4waTRiY3lheCZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/tTLFs7WhFosPIzpdeN/giphy.gif",
    "https://media4.giphy.com/media/v1.Y2lkPTc5MGI3NjExZ3FobDFsZjNlZWdtYW54bTQzMnZsaGZtZjI3NGpqYzNka3I0ZWExbiZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/TjY58wKIiOTQflDLmN/giphy.gif", 
    "https://media1.giphy.com/media/v1.Y2lkPTc5MGI3NjExNXVvbTdnajAza3VvaWVwaTVxcnE5OW5sNWZxd2cwMWZoN2gzMWw5ayZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/SIYeVV0NzuLWMCVGMt/giphy.gif",
    "https://media1.giphy.com/media/v1.Y2lkPTc5MGI3NjExbDVrMTNqa2JmMms2eWI2MzN0ODEwZTUxaHdkdTd6OThjZDhsd2xjNSZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/CwLZnAmzlfU6bI59tJ/giphy.gif",
    "https://media3.giphy.com/media/v1.Y2lkPTc5MGI3NjExd2picnVncmVsemwzZTFiN3FqNmF3cW1sd2h6bTFyemlpMjc2OWU1byZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/IMlSvxEVkSSp0jm6gl/giphy.gif",
    "https://media0.giphy.com/media/v1.Y2lkPTc5MGI3NjExZjR1MDZxbG1tZTZtYzJ6dHd3dmVudmpoOTZ4ajYya2lwcDJucTFoaSZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/1osZS7pe8zVTi8OU78/giphy.gif",
    "https://media1.giphy.com/media/v1.Y2lkPTc5MGI3NjExa3R3N2l3MTE4cTJ0a2R3MXZrbm15bjFuZ3dxZTlrMXBmMjFnMWN3ZiZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/E2X4hzmBe2q4i7eIfi/giphy.gif",
    "Y2lkPTc5MGI3NjExZ21mcDB1cnJ4anZsdzFhOGtsbjh6d3I2ZjIzbzhtOWY3dWgwb245MyZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw",
]

#  ‚ô£‚úÖgifs unlock
GIFS_UNLOCK = [
    "https://media1.giphy.com/media/v1.Y2lkPTc5MGI3NjExNGNvNnN4MnNoYm05aWs3emNtYWhzcHp5cmZpdTlqZml1NGo0Zm51ciZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/ooMcDMPdarEDVLD5SL/giphy.gif",
    "https://media2.giphy.com/media/v1.Y2lkPTc5MGI3NjExYjl6a25wOGNxYmNwemRsNHJ3MXMwajJseTBoOTM3c3U4eDk3eTMwMSZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/gW5rVptRkSosvvtqzm/giphy.gif",
    "https://media2.giphy.com/media/v1.Y2lkPTc5MGI3NjExa3FqOGZuemo0bDkwNXhiN3lwbDN5dnFnZjdmYjk5cXJnbzFxOGhneiZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/qUYPXZZZ8vP6HUkwGT/giphy.gif",
    "https://media2.giphy.com/media/v1.Y2lkPTc5MGI3NjExZXRrcXJ0aXA1dXlucWI4M2k4d3Z3ZWo2djFndXdwMmxjMHQycXltZSZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/GkarDVdmyR5usH0l89/giphy.gif",
    "https://media1.giphy.com/media/v1.Y2lkPTc5MGI3NjExdnV1aGZicjV3ZjI5bm1rczI5bDBneXU4aDZ5cXRmMm56cndreDlxeCZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/Fccyokw5ThhAZzybFL/giphy.gif",
    "https://media2.giphy.com/media/v1.Y2lkPTc5MGI3NjExNGJ3dDhkcnBqYmgyeHM0cGRrNnJyaHJhNWp5OHJmc2tiMHcyb3pldiZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/yQzhZkopuIAvvcZ6vl/giphy.gif",
    "https://media4.giphy.com/media/v1.Y2lkPTc5MGI3NjExbzB5M2g0YnVyMWJybnkwd2k4YWE0cjg0Nm50NGo2OTBjdnl5YW8wNCZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/rGWQK57JwGuCZjo1Fd/giphy.gif",
    "https://media3.giphy.com/media/v1.Y2lkPTc5MGI3NjExZXEwemFkY2ppejhzZjZrOGNibDQyaXB1MDZqNXh2dDk2MmpteXJ2byZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/xj3T9m9pvyVGQyHClw/giphy.gif",
]   

#  ‚ô£‚úÖgifs canal seguro
GIFS_CANAL_SEGURO = [
    "https://media4.giphy.com/media/v1.Y2lkPTc5MGI3NjExM2E5YTA3NHg2eTd5dHR5YmIxZWhpc2k4ZGEzYTl4aWJrM3FvenJhOCZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/Ddc0XAD1BREP3DmliR/giphy.gif",
]

#  ‚ô£‚úÖgifs ejecutar
GIFS_BAN = [
    "https://media2.giphy.com/media/v1.Y2lkPTc5MGI3NjExcmpsOWZkazFzOTkyaXlmdzdzb2ltdzVpdHUwNTEwaHpwZnV4cnJ3aiZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/epBfvgFfruDFRoO094/giphy.gif",
    "https://media2.giphy.com/media/v1.Y2lkPTc5MGI3NjExbjF1aDA5eWQ0cjRtYmh4OXNrMXZ4b2cycm40dzI0OGRuYXd5eGQ4byZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/mrbMs3hDjE59xuy0oS/giphy.gif",
    "https://media1.giphy.com/media/v1.Y2lkPTc5MGI3NjExcTMxMmRpd2R0MXoya2o1NWtzaGM4Nzd2azE3ZmQzczNxeTF2cTlzayZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/sWXrmqJ9l4mDwftfSu/giphy.gif",
    "https://media3.giphy.com/media/v1.Y2lkPTc5MGI3NjExMzd3aGhlbDVhY3U2bDBocTV1d2JmOXo3eGNoZWNhYThjMTBxZWN3bSZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/y6CWTClNCJSoq8IROh/giphy.gif",
    "https://media2.giphy.com/media/v1.Y2lkPTc5MGI3NjExcm5zd2prZGx2dDA5MTk5MWJyb2R3aDByejl6bXI4c2I3aHQ2YXJldiZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/DKgVQsLHZET8KRmRY9/giphy.gif",
    "https://media3.giphy.com/media/v1.Y2lkPTc5MGI3NjExcndjMzdtNjRvOHk0aGt1NHdzODdpZWo1MDkwY2w1ZDVxZmIyODQycSZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/hUCbhzmGGolShU7SCK/giphy.gif",
    "https://media0.giphy.com/media/v1.Y2lkPTc5MGI3NjExYXYzamxxZW1lMGRtc2FjMTRuZTU3dmM5eXp0d3UxcXg5Y2M2bTdheCZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/Ny4Ian52lZDz2/giphy.gif",
    "https://media0.giphy.com/media/v1.Y2lkPTc5MGI3NjExc3AwdXZzdjA3cGNqOGhhMzR3MDN3MnRvaTMzY2xjNnR1YnlmZ3dpMiZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/DoASNkgBr1iii4MkSq/giphy.gif",
    "https://media3.giphy.com/media/v1.Y2lkPTc5MGI3NjExbnkxYzJ3MzBuc3preXV4enl6bHExajZ4Z3BocW55bjY5ZDZnamZ4aiZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/PCFK39ruKPdnc4Km4h/giphy.gif", 
"https://media4.giphy.com/media/v1.Y2lkPTc5MGI3NjExbjBwcGZnZTl6bnVvbGtnYnBucmQ4djJqcjY3YTUyYWFodmg0bmo4eSZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/lfBKXBz4ut56BDYOHf/giphy.gif",
    "https://media3.giphy.com/media/v1.Y2lkPTc5MGI3NjExZDZxMmw4eGZvMWs1dXJpeDQ3amt6eGk1ZGhmb3ZxamUxOXk3M2I5eCZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/rTGHakuW55XwlRsJol/giphy.gif",
    "https://media0.giphy.com/media/v1.Y2lkPTc5MGI3NjExcXNoOG90MW1vcWIybnk0bm4zY2lmdjYxMnBjNzZxMWJhcGZycnJzeiZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/wzmf2YPni4a40/giphy.gif",
    "https://media4.giphy.com/media/v1.Y2lkPTc5MGI3NjExdnVmcnFnMXJpcG1iNjZsNTZzcHFpaHNya2lwMWxteDczMTdmMnZueiZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/46gCcbKdCFhMTzGlDp/giphy.gif",
]

#  ‚ô£‚úÖgifs expulsar
GIFS_KICK = [
    "https://media.giphy.com/media/PMjkKda7d6JqAEkR55/giphy.gif",
]


# =====================================================================
#‚ô£ VARIABLE - IA RESPUESTA
# =====================================================================

# Palabras problem√°ticas
palabras_fuertes = ["idiota", "est√∫pido", "tonto", "imb√©cil", "pendejo", "mierda", "joder", "fuck", "shit", "damn", "puto", "cabr√≥n"]
palabras_modernas = ["wifi", "internet", "smartphone", "tiktok", "youtube", "instagram", "facebook", "twitter", "meme", "xd", "lol", "wtf", "omg", "bruh", "sus", "cringe", "simp", "stream", "google"]






# ‚ô£‚úÖ SISTEMA COMPLETO DE COMBATE PVP CON NARRACIONES DIN√ÅMICAS Y DETERMINACI√ìN DE GANADOR

# ‚ô£‚úÖ FUNCI√ìN PARA DETERMINAR GANADOR Y TEXTO FINAL
def determinar_ganador_y_texto(hp_jugador1, hp_jugador2, nombre1, nombre2, titulo1, titulo2):
    """Determina el ganador basado en HP restante y retorna texto √©pico"""
    
    if hp_jugador1 > hp_jugador2:
        return f"""
üèÜ **¬°VICTORIA √âPICA!**
üëë **{titulo1} {nombre1}** emerge triunfante con **{hp_jugador1} HP** restantes!
üíÄ **{titulo2} {nombre2}** cae derrotado con **{hp_jugador2} HP**

üåü **¬°EL COSMOS CORONA A SU NUEVO CAMPE√ìN!**
‚öîÔ∏è Esta batalla ser√° recordada por milenios como una de las m√°s √©picas jam√°s libradas.
üí´ **HONOR ETERNO PARA EL VENCEDOR!**
"""
    elif hp_jugador2 > hp_jugador1:
        return f"""
üèÜ **¬°VICTORIA √âPICA!**
üëë **{titulo2} {nombre2}** emerge triunfante con **{hp_jugador2} HP** restantes!
üíÄ **{titulo1} {nombre1}** cae derrotado con **{hp_jugador1} HP**

üåü **¬°EL COSMOS CORONA A SU NUEVO CAMPE√ìN!**
‚öîÔ∏è Esta batalla ser√° recordada por milenios como una de las m√°s √©picas jam√°s libradas.
üí´ **HONOR ETERNO PARA EL VENCEDOR!**
"""
    else:
        return f"""
‚öñÔ∏è **¬°EMPATE LEGENDARIO!**
ü§ù **{titulo1} {nombre1}** y **{titulo2} {nombre2}** terminan con **{hp_jugador1} HP** cada uno!

üåü **¬°AMBOS GUERREROS SON DIGNOS DE GLORIA ETERNA!**
‚öîÔ∏è Esta batalla √©pica demuestra que ambos luchadores son verdaderos campeones.
üí´ **HONOR COMPARTIDO PARA AMBOS H√âROES!**
"""

# ‚ô£‚úÖ FUNCI√ìN PARA DETECTAR POCIONES DE RESURRECCI√ìN
def verificar_pocion_resurreccion(guild_id, user_id):
    """Verifica si el jugador tiene pociones de resurrecci√≥n"""
    # Aqu√≠ ir√≠a la l√≥gica para verificar en la base de datos
    # Retorna True si tiene "Elixir de la Muerte" o "Poci√≥n de Vida"
    return False  # Por ahora placeholder

# ‚ô£‚úÖ FUNCI√ìN PRINCIPAL DE APLICACI√ìN DE NARRACIONES
def aplicar_narracion_con_ganador(narracion, datos_batalla):
    """Aplica la narraci√≥n completa incluyendo determinaci√≥n del ganador"""
    
    # Calcular HP final despu√©s de todos los rounds
    hp_final_1 = datos_batalla['hp_inicial_1'] - sum(datos_batalla['da√±os_recibidos_1'])
    hp_final_2 = datos_batalla['hp_inicial_2'] - sum(datos_batalla['da√±os_recibidos_2'])
    
    # Aplicar efectos de pociones de resurrecci√≥n
    texto_resurreccion_1 = ""
    texto_resurreccion_2 = ""
    
    if hp_final_1 <= 0 and datos_batalla.get('tiene_pocion_vida_1', False):
        hp_final_1 = 50  # Revive con 50 HP
        texto_resurreccion_1 = f"""
üíÄ **¬°{datos_batalla['titulo_1']} CAE DERROTADO!**
üçÉ Pero el **Elixir de la Muerte** corre por sus venas...
‚ö° **¬°SUS OJOS SE ABREN CON PODER RENOVADO!**
üî• **¬°LA MUERTE NO PUEDE DETENER A UN VERDADERO GUERRERO!**
‚ù§Ô∏è **REVIVE CON {hp_final_1} HP!**

"""
    
    if hp_final_2 <= 0 and datos_batalla.get('tiene_pocion_vida_2', False):
        hp_final_2 = 50  # Revive con 50 HP
        texto_resurreccion_2 = f"""
üíÄ **¬°{datos_batalla['titulo_2']} CAE DERROTADO!**
üçÉ Pero el **Elixir de la Muerte** corre por sus venas...
‚ö° **¬°SUS OJOS SE ABREN CON PODER RENOVADO!**
üî• **¬°LA MUERTE NO PUEDE DETENER A UN VERDADERO GUERRERO!**
‚ù§Ô∏è **REVIVE CON {hp_final_2} HP!**

"""
    
    # Texto final con ganador
    texto_ganador = determinar_ganador_y_texto(
        hp_final_1, hp_final_2, 
        datos_batalla['nombre_1'], datos_batalla['nombre_2'],
        datos_batalla['titulo_1'], datos_batalla['titulo_2']
    )
    
    return {
        'rounds': narracion,
        'resurreccion_1': texto_resurreccion_1,
        'resurreccion_2': texto_resurreccion_2,
        'resultado_final': texto_ganador,
        'hp_final_1': max(0, hp_final_1),
        'hp_final_2': max(0, hp_final_2)
    }


# ‚ô£‚úÖ SISTEMA COMPLETO DE NARRACIONES √âPICAS POR CLASE
NARRACIONES_COMBATE = {
    "humano_VS_orco": [
        # NARRACION 1 - HUMANO COMIENZA
        {
        "round1": "‚öîÔ∏è **El guerrero {titulo_humano}** entra al campo de batalla con mirada determinante, empu√±ando su **{arma_humano}** con absoluta confianza.\n\n‚öîÔ∏è **Humano:** 'Hoy alimentar√© a mi **{mascota_humano}** con tu carne podrida, bestia inmunda.'\nüëπ **Orco:** 'Tu sangre regar√° mi hacha antes del anochecer.'\n\n‚ö° El humano lanza una estocada mortal directo al coraz√≥n orco. El orco esquiva por cent√≠metros y contraataca con un hachazo devastador hacia el cuello humano.\n\nü©∏ El **{titulo_humano}** logr√≥ atravesar el hombro orco. Sangre verde y viscosa brota como una cascada mientras el orco ruge de dolor y rabia.\n\n‚öîÔ∏è El humano sonr√≠e con orgullo viendo la sangre orca manchar el suelo.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round2": "üëπ **El {titulo_orco}** contraataca furiosamente con su gran **{arma_orco}** pero el brillo del **{armadura_humano}** cega por un instante al orco haciendo que su ataque no sea efectivo del todo.\n\nüëπ **Orco:** '¬°Maldito resplandor! ¬°Te har√© pedazos!'\n‚öîÔ∏è **Humano:** 'La Luz Sagrada me protege de tu oscuridad.'\n\n‚ö° El orco descarga un hachazo brutal buscando partir al humano por la mitad. El humano aprovecha la ceguera moment√°nea y contraataca con una estocada hacia las costillas orcas.\n\nü©∏ La hacha orca logra cortar el brazo humano pero no tan profundo como esperaba. Sangre roja gotea mientras el humano mantiene su valor.\n\nüëπ El orco gru√±e frustrado mientras se frota los ojos, a√∫n sintiendo el resplandor.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un grito. **{mascota_humano}** entra al campo de batalla y ataca ferozmente al orco que hierve en furia. El **{mascota_orco}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, disciplina contra salvajismo en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del orco y el humano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_humano}/{hp_total_humano} vs {hp_restante_orco}/{hp_total_orco}**",
        
        "round4": "üíÄ **¬°ROUND FINAL!** El orco decide poner fin a esta lucha.\n\nüëπ **Orco:** '¬°Es hora de parterte el cr√°neo con mis propias manos!'\n‚öîÔ∏è **Humano:** '¬°No temer√© ante tu brutalidad! ¬°La Alianza prevalecer√°!'\n\n‚ö° Frotando su **{accesorio_orco}** se lanza contra el humano brutalmente. El humano lo mira fijamente y lanza su ataque mientras su **{accesorio_humano}** vibra por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El orco estrella sus pu√±os contra el cr√°neo humano mientras el humano clava su arma en el coraz√≥n orco.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_orco}/{hp_total_orco} vs {hp_final_humano}/{hp_total_humano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 2 - ORCO COMIENZA
    {
        "round1": "üëπ **El guerrero {titulo_orco}** ingresa golpeando su pecho como s√≠mbolo de guerra, rugiendo mientras brandea su **{arma_orco}** con ferocidad primitiva.\n\nüëπ **Orco:** 'Tu carne ser√° mi fest√≠n esta noche, escoria humana.'\n‚öîÔ∏è **Humano:** 'Por las murallas de Stormwind, no caer√°s ante una bestia.'\n\n‚ö° El orco lanza un hachazo brutal directo a la cabeza humana. El humano esquiva rodando y contraataca con una estocada hacia el est√≥mago orco.\n\nü©∏ El **{titulo_orco}** logr√≥ cortar profundamente el muslo humano. Sangre roja empapa el suelo mientras el humano grita de dolor.\n\nüëπ El orco r√≠e salvajemente lamiendo la sangre de su arma.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",
        
        "round2": "‚öîÔ∏è **El {titulo_humano}** contraataca con tenacidad pero su **{armadura_orco}** absorbe gran parte del impacto haciendo que el ataque humano sea menos efectivo.\n\n‚öîÔ∏è **Humano:** '¬°Maldita armadura primitiva!'\nüëπ **Orco:** 'Est√° templada con la sangre de mil humanos como t√∫.'\n\n‚ö° El humano clava su espada buscando una abertura en la armadura. El orco aprovecha la cercan√≠a y embiste con todo su peso.\n\nü©∏ La espada humana logra encontrar una grieta y corta el costado orco, pero el orco logra golpear brutalmente el pecho humano.\n\n‚öîÔ∏è El humano retrocede jadeando mientras siente sus costillas doler, pero mantiene su valor.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un rugido. **{mascota_orco}** entra al campo de batalla y ataca ferozmente al humano que se defiende valientemente. El **{mascota_humano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, instinto salvaje contra lealtad disciplinada en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del orco y el humano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_orco}/{hp_total_orco} vs {hp_restante_humano}/{hp_total_humano}**",
        
        "round4": "üíÄ **¬°ROUND FINAL!** El humano decide poner fin a esta lucha.\n\n‚öîÔ∏è **Humano:** '¬°Luchar√© hasta mi √∫ltimo aliento! ¬°Por cada humano ca√≠do!'\nüëπ **Orco:** '¬°Ser√°s sacrificio a mis ancestros! ¬°Por la Horda!'\n\n‚ö° Frotando su **{accesorio_humano}** se lanza contra el orco brutalmente. El orco lo mira fijamente y lanza su ataque mientras su **{accesorio_orco}** late por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El humano atraviesa el coraz√≥n orco mientras el orco parte el cr√°neo humano con sus garras.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_humano}/{hp_total_humano} vs {hp_final_orco}/{hp_total_orco}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 3 - HUMANO COMIENZA
    {
        "round1": "‚öîÔ∏è **El guerrero {titulo_humano}** aparece en posici√≥n de combate con su **{arma_humano}** lista, irradiando orgullo y determinaci√≥n implacable.\n\n‚öîÔ∏è **Humano:** 'La sangre humana es superior a la tuya, bestia inmunda.'\nüëπ **Orco:** 'Te desgarrar√© miembro por miembro, escoria de Stormwind.'\n\n‚ö° El humano ejecuta una serie de estocadas r√°pidas buscando perforar √≥rganos vitales. El orco bloquea con su arma y contraataca con un golpe horizontal.\n\nü©∏ El **{titulo_humano}** logr√≥ perforar el abdomen orco. Sangre verde brota mientras el orco gru√±e de dolor y rabia.\n\n‚öîÔ∏è El humano retira su arma lentamente, disfrutando el sufrimiento orco con orgullo.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round2": "üëπ **El {titulo_orco}** contraataca con furia salvaje pero el **{armadura_humano}** desv√≠a gran parte del golpe haciendo que el ataque orco pierda efectividad.\n\nüëπ **Orco:** '¬°Esa armadura no te salvar√° por mucho tiempo!'\n‚öîÔ∏è **Humano:** 'Fue forjada espec√≠ficamente para defenderse de tu raza.'\n\n‚ö° El orco descarga golpes furiosos buscando romper la defensa humana. El humano espera el momento perfecto para contraatacar con valor.\n\nü©∏ El hacha orca logra golpear el hombro humano, pero la armadura absorbe la mayor parte del da√±o. El humano apenas sangra.\n\nüëπ El orco ruge frustrado al ver su ataque casi in√∫til contra la defensa humana.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**"
    },
    
    # NARRACION 6 - ORCO COMIENZA
    {
        "round1": "üëπ **El guerrero {titulo_orco}** irrumpe en la arena alzando su **{arma_orco}** al cielo mientras lanza un grito de guerra que hace temblar la tierra.\n\nüëπ **Orco:** 'Tu reino caer√° ante nosotros como todos los dem√°s.'\n‚öîÔ∏è **Humano:** 'Jam√°s permitir√© que profanes nuestro suelo sagrado.'\n\n‚ö° El orco se abalanza con furia bestial buscando despedazar al humano. El humano retrocede calculando el momento perfecto para contraatacar.\n\nü©∏ El **{titulo_orco}** logr√≥ desgarrar el costado humano con sus garras. Sangre roja brota mientras el humano gime de dolor.\n\nüëπ El orco lame la sangre de sus propias garras con placer salvaje.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",
        
        "round2": "‚öîÔ∏è **El {titulo_humano}** contraataca con valor inquebrantable pero su **{armadura_orco}** rechaza el golpe como si fuera hierro puro, minimizando el da√±o.\n\n‚öîÔ∏è **Humano:** '¬øDe qu√© est√° hecha esa maldita armadura?'\nüëπ **Orco:** 'Del metal m√°s duro forjado en las llamas del inframundo.'\n\n‚ö° El humano busca desesperadamente un punto d√©bil mientras el orco presiona su ventaja defensiva. Cada golpe humano resuena in√∫tilmente.\n\nü©∏ La espada humana logra encontrar una peque√±a grieta y rasga superficialmente la piel orca, pero apenas causa da√±o real.\n\n‚öîÔ∏è El humano retrocede frustrado ante la resistencia sobrenatural de la armadura.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un aullido de rabia. **{mascota_orco}** entra al campo de batalla y ataca ferozmente al humano que lucha por mantener su terreno. El **{mascota_humano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, bestialidad contra disciplina en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del orco y el humano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_orco}/{hp_total_orco} vs {hp_restante_humano}/{hp_total_humano}**",
        
        "round4": "üíÄ **¬°ROUND FINAL!** El humano decide poner fin a esta lucha.\n\n‚öîÔ∏è **Humano:** '¬°Con mi √∫ltimo aliento te enviar√© al inframundo!'\nüëπ **Orco:** '¬°Ser√°s sacrificio a mis ancestros guerreros!'\n\n‚ö° Frotando su **{accesorio_humano}** se lanza contra el orco brutalmente. El orco lo mira fijamente y lanza su ataque mientras su **{accesorio_orco}** vibra por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El humano perfora el coraz√≥n orco mientras el orco tritura el cr√°neo humano con sus mand√≠bulas.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_humano}/{hp_total_humano} vs {hp_final_orco}/{hp_total_orco}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 7 - HUMANO COMIENZA
    {
        "round1": "‚öîÔ∏è **El guerrero {titulo_humano}** avanza con determinaci√≥n absoluta, arrastrando su **{arma_humano}** por el suelo mientras deja una estela de chispas.\n\n‚öîÔ∏è **Humano:** 'Por cada aldea quemada, cortar√© una extremidad tuya.'\nüëπ **Orco:** '¬°Tu pueblo arde por nuestra superioridad racial!'\n\n‚ö° El humano ejecuta un movimiento giratorio mortal buscando seccionar la cabeza orca. El orco agacha la cabeza y embiste contra el est√≥mago humano.\n\nü©∏ El **{titulo_humano}** logr√≥ cortar profundamente la espalda orca. Sangre verde mancha el suelo mientras el orco a√∫lla de dolor.\n\n‚öîÔ∏è El humano sonr√≠e con satisfacci√≥n viendo como la sangre orca se derrama copiosamente.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round2": "üëπ **El {titulo_orco}** gira con la espalda sangrando pero el resplandor del **{armadura_humano}** lo desorienta completamente, haciendo que falle su contraataque.\n\nüëπ **Orco:** '¬°Ese brillo maldito me est√° cegando!'\n‚öîÔ∏è **Humano:** 'La pureza del metal humano quema a los demonios.'\n\n‚ö° El orco ataca desesperadamente mientras trata de bloquear el resplandor con su mano libre. El humano aprovecha la confusi√≥n para atacar los puntos vitales.\n\nü©∏ El hacha orca golpea el escudo humano sin causar da√±o real. La armadura refleja perfectamente todos los golpes.\n\nüëπ El orco maldice mientras sigue luchando pr√°cticamente a ciegas.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un rugido territorial. **{mascota_humano}** entra al campo de batalla y ataca ferozmente al orco que apenas puede defenderse. El **{mascota_orco}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, estrategia contra fuerza bruta en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del orco y el humano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_humano}/{hp_total_humano} vs {hp_restante_orco}/{hp_total_orco}**",
        
        "round4": "üíÄ **¬°ROUND FINAL!** El orco decide poner fin a esta lucha.\n\nüëπ **Orco:** '¬°Ya no importa si muero, te llevar√© conmigo!'\n‚öîÔ∏è **Humano:** '¬°Tu dominaci√≥n termina aqu√≠! ¬°Por la gloria de la Alianza!'\n\n‚ö° Frotando su **{accesorio_orco}** se lanza contra el humano brutalmente. El humano lo mira fijamente y lanza su ataque mientras su **{accesorio_humano}** pulsa por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El orco parte la columna vertebral humana mientras el humano decapita al orco de un tajo limpio.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_orco}/{hp_total_orco} vs {hp_final_humano}/{hp_total_humano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 8 - ORCO COMIENZA
    {
        "round1": "üëπ **El guerrero {titulo_orco}** entra dando zancadas pesadas que hacen retumbar el suelo, blandiendo su **{arma_orco}** mientras ense√±a sus colmillos amenazantes.\n\nüëπ **Orco:** 'Tu carne ser√° el banquete perfecto para mis hermanos.'\n‚öîÔ∏è **Humano:** 'Ning√∫n orco profanar√° tierra sagrada mientras yo respire.'\n\n‚ö° El orco realiza un barrido horizontal buscando cortar al humano por la mitad. El humano salta hacia atr√°s y lanza una estocada hacia el pecho orco.\n\nü©∏ El **{titulo_orco}** logr√≥ rasgar el muslo humano con el filo de su arma. Sangre roja se derrama mientras el humano cojea ligeramente.\n\nüëπ El orco r√≠e mientras observa como el humano lucha por mantener el equilibrio.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",
        
        "round2": "‚öîÔ∏è **El {titulo_humano}** contraataca con tenacidad heroica pero la **{armadura_orco}** est√° dise√±ada para resistir los ataques m√°s brutales, absorbiendo gran parte del da√±o.\n\n‚öîÔ∏è **Humano:** '¬°Es imposible! ¬øC√≥mo resiste tanto castigo?'\nüëπ **Orco:** 'Esta armadura ha sobrevivido a mil batallas como esta.'\n\n‚ö° El humano multiplica sus ataques buscando abrumar la defensa orca. El orco se mantiene firme mientras bloquea cada golpe con su armadura.\n\nü©∏ La espada humana logra penetrar por una junta mal sellada, causando una herida menor en el brazo orco.\n\n‚öîÔ∏è El humano jadea exhausto mientras el orco apenas muestra signos de fatiga.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un gru√±ido amenazante. **{mascota_orco}** entra al campo de batalla y ataca ferozmente al humano que retrocede alarmado. El **{mascota_humano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, salvajismo puro contra entrenamiento militar en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del orco y el humano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_orco}/{hp_total_orco} vs {hp_restante_humano}/{hp_total_humano}**",
        
        "round4": "üíÄ **¬°ROUND FINAL!** El humano decide poner fin a esta lucha.\n\n‚öîÔ∏è **Humano:** '¬°Con mi √∫ltimo soplo de vida te mandar√© al inframundo!'\nüëπ **Orco:** '¬°Tu alma alimentar√° a los esp√≠ritus de mis ancestros!'\n\n‚ö° Frotando su **{accesorio_humano}** se lanza contra el orco brutalmente. El orco lo mira fijamente y lanza su ataque mientras su **{accesorio_orco}** late por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El humano atraviesa el abdomen orco mientras el orco destroza las costillas humanas con un golpe devastador.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_humano}/{hp_total_humano} vs {hp_final_orco}/{hp_total_orco}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 9 - HUMANO COMIENZA
    {
        "round1": "‚öîÔ∏è **El guerrero {titulo_humano}** emerge de las sombras con su **{arma_humano}** desenvainada, sus ojos brillando con sed de venganza implacable.\n\n‚öîÔ∏è **Humano:** 'Tu raza pagar√° por cada l√°grima derramada en Lordaeron.'\nüëπ **Orco:** 'Lordaeron fue solo el primer paso hacia vuestra extinci√≥n.'\n\n‚ö° El humano ataca con movimientos fluidos y mortales buscando puntos vitales. El orco responde con golpes brutales y directos.\n\nü©∏ El **{titulo_humano}** logr√≥ perforar el hombro orco con precisi√≥n quir√∫rgica. Sangre verde brota mientras el orco rug–µ de dolor.\n\n‚öîÔ∏è El humano observa con orgullo como su t√©cnica superior supera la brutalidad orca.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round2": "üëπ **El {titulo_orco}** contraataca con furia descontrolada pero el **{armadura_humano}** distribuye perfectamente el impacto, reduciendo dr√°sticamente el da√±o recibido.\n\nüëπ **Orco:** '¬°Maldita armadura de cobarde!'\n‚öîÔ∏è **Humano:** 'Se llama ingenier√≠a superior, bestia primitiva.'\n\n‚ö° El orco descarga una serie de golpes furiosos contra la defensa humana. El humano mantiene su posici√≥n mientras planea su siguiente movimiento.\n\nü©∏ El hacha orca golpea repetidamente la armadura pero apenas logra hacer mella en el metal refinado.\n\nüëπ El orco gru√±e frustrado al ver sus ataques m√°s poderosos resultar casi in√∫tiles.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un ladrido disciplinado. **{mascota_humano}** entra al campo de batalla y ataca ferozmente al orco que intenta defenderse. El **{mascota_orco}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, disciplina t√°ctica contra instinto salvaje en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del orco y el humano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_humano}/{hp_total_humano} vs {hp_restante_orco}/{hp_total_orco}**",
        
        "round4": "üíÄ **¬°ROUND FINAL!** El orco decide poner fin a esta lucha.\n\nüëπ **Orco:** '¬°Si caigo, te arrastrar√© a las profundidades conmigo!'\n‚öîÔ∏è **Humano:** '¬°Mi valor ser√° recordado por generaciones!'\n\n‚ö° Frotando su **{accesorio_orco}** se lanza contra el humano brutalmente. El humano lo mira fijamente y lanza su ataque mientras su **{accesorio_humano}** resplandece por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El orco aplasta el t√≥rax humano mientras el humano atraviesa el coraz√≥n orco con precisi√≥n mortal.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_orco}/{hp_total_orco} vs {hp_final_humano}/{hp_total_humano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 10 - ORCO COMIENZA
    {
        "round1": "üëπ **El guerrero {titulo_orco}** aparece caminando lentamente mientras afila su **{arma_orco}** contra una piedra, creando chispas amenazantes que iluminan sus ojos sedientos de sangre.\n\nüëπ **Orco:** 'Escucha como mi hacha llora por tu sangre, humano.'\n‚öîÔ∏è **Humano:** 'El √∫nico llanto ser√° el tuyo cuando caigas derrotado.'\n\n‚ö° El orco lanza su arma en un arco mortal buscando seccionar la cabeza humana. El humano se agacha y contraataca con una estocada ascendente.\n\nü©∏ El **{titulo_orco}** logr√≥ cortar el hombro humano al pasar el arma. Sangre roja salpica mientras el humano grita de dolor.\n\nüëπ El orco recoge su arma mientras sonr√≠e al ver las primeras gotas de sangre humana.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",
        
        "round2": "‚öîÔ∏è **El {titulo_humano}** contraataca con precisi√≥n calculada pero la **{armadura_orco}** tiene refuerzos inesperados que desv√≠an la mayor√≠a de los golpes humanos.\n\n‚öîÔ∏è **Humano:** '¬°Imposible! ¬øC√≥mo puede ser tan resistente?'\nüëπ **Orco:** 'Cada placa fue ba√±ada en sangre humana para endurecerla.'\n\n‚ö° El humano busca desesperadamente grietas en la armadura mientras el orco se mantiene a la defensiva, confiando en su protecci√≥n.\n\nü©∏ La espada humana encuentra finalmente un punto d√©bil y penetra ligeramente en el costado orco.\n\n‚öîÔ∏è El humano se frustra al ver que sus mejores ataques apenas causan da√±o superficial.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un rugido primitivo. **{mascota_orco}** entra al campo de batalla y ataca ferozmente al humano que lucha por mantener la distancia. El **{mascota_humano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, ferocidad ancestral contra adiestramiento humano en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del orco y el humano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_orco}/{hp_total_orco} vs {hp_restante_humano}/{hp_total_humano}**",
        
        "round4": "üíÄ **¬°ROUND FINAL!** El humano decide poner fin a esta lucha.\n\n‚öîÔ∏è **Humano:** '¬°Aunque muera aqu√≠, otros continuar√°n la lucha!'\nüëπ **Orco:** '¬°No habr√° otros cuando termine con tu pat√©tica raza!'\n\n‚ö° Frotando su **{accesorio_humano}** se lanza contra el orco brutalmente. El orco lo mira fijamente y lanza su ataque mientras su **{accesorio_orco}** vibra por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El humano perfora el cr√°neo orco mientras el orco destroza la columna vertebral humana con sus garras.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_humano}/{hp_total_humano} vs {hp_final_orco}/{hp_total_orco}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 11 - HUMANO COMIENZA
    {
        "round1": "‚öîÔ∏è **El guerrero {titulo_humano}** entra en posici√≥n de guardia alta con su **{arma_humano}** resplandeciendo bajo la luz, irradiando confianza y orgullo.\n\n‚öîÔ∏è **Humano:** 'Tu sangre lavar√° las manchas que dejaste en nuestras tierras.'\nüëπ **Orco:** 'Las manchas apenas comienzan, tu reino ser√° cenizas.'\n\n‚ö° El humano ejecuta una combinaci√≥n de ataques elegantes buscando m√∫ltiples puntos vitales. El orco bloquea brutalmente y contraataca con fuerza primitiva.\n\nü©∏ El **{titulo_humano}** logr√≥ abrir una herida profunda en el brazo orco. Sangre verde se derrama copiosamente mientras el orco a√∫lla.\n\n‚öîÔ∏è El humano retrocede satisfecho viendo como su t√©cnica superior domina la brutalidad orca.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round2": "üëπ **El {titulo_orco}** contraataca con el brazo sangrando pero el **{armadura_humano}** crea un destello cegador que desorienta completamente al orco.\n\nüëπ **Orco:** '¬°Ese maldito brillo me est√° quemando los ojos!'\n‚öîÔ∏è **Humano:** 'La pureza del acero humano es t√≥xica para tu clase.'\n\n‚ö° El orco ataca desesperadamente mientras trata de proteger sus ojos del resplandor. El humano aprovecha la ceguera temporal para atacar sin resistencia.\n\nü©∏ El hacha orca falla completamente su objetivo y golpea el aire. El orco tropieza y casi cae al suelo.\n\nüëπ El orco parpadea furiosamente mientras l√°grimas de dolor brotan de sus ojos irritados.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un aullido vengativo. **{mascota_humano}** entra al campo de batalla y ataca ferozmente al orco que apenas puede defenderse. El **{mascota_orco}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, entrenamiento superior contra instinto primitivo en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del orco y el humano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_humano}/{hp_total_humano} vs {hp_restante_orco}/{hp_total_orco}**",
        
        "round4": "üíÄ **¬°ROUND FINAL!** El orco decide poner fin a esta lucha.\n\nüëπ **Orco:** '¬°Con mis √∫ltimas fuerzas te enviar√© al m√°s all√°!'\n‚öîÔ∏è **Humano:** '¬°La tenacidad humana nunca ser√° derrotada!'\n\n‚ö° Frotando su **{accesorio_orco}** se lanza contra el humano brutalmente. El humano lo mira fijamente y lanza su ataque mientras su **{accesorio_humano}** brilla por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El orco destroza el rostro humano con sus colmillos mientras el humano atraviesa el coraz√≥n orco limpiamente.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_orco}/{hp_total_orco} vs {hp_final_humano}/{hp_total_humano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 12 - ORCO COMIENZA
    {
        "round1": "üëπ **El guerrero {titulo_orco}** entra arrastrando los pies pesadamente mientras su **{arma_orco}** gotea una sustancia viscosa y maloliente.\n\nüëπ **Orco:** 'Cada gota de esta ponzo√±a ha matado cien humanos antes que t√∫.'\n‚öîÔ∏è **Humano:** 'Solo un cobarde necesita veneno para vencer.'\n\n‚ö° El orco realiza un ataque envenenado buscando cualquier corte en la piel humana. El humano esquiva por poco y contraataca con movimientos limpios.\n\nü©∏ El **{titulo_orco}** logr√≥ rozar el antebrazo humano con su arma envenenada. Sangre roja mezclada con veneno brota mientras el humano siente el ardor.\n\nüëπ El orco sonr√≠e mientras observa como el veneno comienza a hacer efecto en el cuerpo humano.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",

        "round2": "‚öîÔ∏è **El {titulo_humano}** contraataca luchando contra el veneno pero la **{armadura_orco}** tiene p√∫as venenosas que hacen peligroso cualquier contacto directo.\n\n‚öîÔ∏è **Humano:** '¬°Maldita armadura llena de trampas!'\nüëπ **Orco:** 'Cada p√∫a ha sido ba√±ada en el veneno m√°s mortal.'\n\n‚ö° El humano trata de atacar manteniendo distancia mientras siente como el veneno debilita sus fuerzas. El orco presiona su ventaja t√≥xica.\n\nü©∏ La espada humana logra golpear la armadura pero las p√∫as rasgan la mano humana, inyectando m√°s veneno.\n\n‚öîÔ∏è El humano retrocede jadeando mientras siente como el veneno se extiende por su torrente sangu√≠neo.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un rugido t√≥xico. **{mascota_orco}** entra al campo de batalla y ataca ferozmente al humano envenenado que lucha por mantenerse en pie. El **{mascota_humano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, toxicidad contra pureza en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del orco y el humano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_orco}/{hp_total_orco} vs {hp_restante_humano}/{hp_total_humano}**",
        
        "round4": "üíÄ **¬°ROUND FINAL!** El humano decide poner fin a esta lucha.\n\n‚öîÔ∏è **Humano:** '¬°Aunque el veneno me consuma, te llevar√© conmigo!'\nüëπ **Orco:** '¬°Tu agon√≠a apenas comienza, el veneno te torturar√° por horas!'\n\n‚ö° Frotando su **{accesorio_humano}** se lanza contra el orco brutalmente. El orco lo mira fijamente y lanza su ataque mientras su **{accesorio_orco}** pulsa por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El humano decapita al orco con su √∫ltimo aliento mientras el orco inyecta una dosis letal de veneno directo al coraz√≥n humano.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_humano}/{hp_total_humano} vs {hp_final_orco}/{hp_total_orco}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 13 - HUMANO COMIENZA
    {
        "round1": "‚öîÔ∏è **El guerrero {titulo_humano}** entra al campo de batalla caminando con paso ceremonial, portando su **{arma_humano}** como si fuera una reliquia sagrada.\n\n‚öîÔ∏è **Humano:** 'Este acero ha sido bendecido para exterminar tu especie.'\nüëπ **Orco:** 'Tu dios no tiene poder sobre la furia de la Horda.'\n\n‚ö° El humano ataca con movimientos ritualizados pero mortalmente efectivos. El orco responde con ataques salvajes y descontrolados.\n\nü©∏ El **{titulo_humano}** logr√≥ cortar limpiamente a trav√©s del pecho orco. Sangre verde brota mientras el orco ruge desafiante.\n\n‚öîÔ∏è El humano murmura una oraci√≥n mientras observa como la sangre orca mancha la tierra sagrada.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round2": "üëπ **El {titulo_orco}** contraataca con furia herida pero el **{armadura_humano}** parece irradiar una luz divina que debilita los ataques demon√≠acos.\n\nüëπ **Orco:** '¬°Esa luz maldita est√° quemando mi alma!'\n‚öîÔ∏è **Humano:** 'La Luz Sagrada purifica todo lo que toca.'\n\n‚ö° El orco ataca desesperadamente mientras la luz divina parece drenar sus fuerzas. El humano mantiene su posici√≥n confiando en su protecci√≥n sagrada.\n\nü©∏ El hacha orca golpea la armadura pero la luz divina neutraliza gran parte del impacto demon√≠aco.\n\nüëπ El orco retrocede mientras siente como la luz divina quema su esencia demon√≠aca.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un aullido bendito. **{mascota_humano}** entra al campo de batalla y ataca ferozmente al orco que retrocede ante la presencia sagrada. El **{mascota_orco}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, bendici√≥n divina contra maldici√≥n demon√≠aca en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del orco y el humano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_humano}/{hp_total_humano} vs {hp_restante_orco}/{hp_total_orco}**",
        
        "round4": "üíÄ **¬°ROUND FINAL!** El orco decide poner fin a esta lucha.\n\nüëπ **Orco:** '¬°Aunque la luz me queme, te arrastrar√© a la oscuridad!'\n‚öîÔ∏è **Humano:** '¬°La Luz Sagrada me dar√° fuerzas hasta el final!'\n\n‚ö° Frotando su **{accesorio_orco}** se lanza contra el humano brutalmente. El humano lo mira fijamente y lanza su ataque mientras su **{accesorio_humano}** resplandece por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El orco destroza el t√≥rax humano con sus garras mientras el humano purifica el alma orca con su toque divino.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_orco}/{hp_total_orco} vs {hp_final_humano}/{hp_total_humano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 14 - ORCO COMIENZA
    {
        "round1": "üëπ **El guerrero {titulo_orco}** entra al campo de batalla dando saltos amenazantes mientras hace girar su **{arma_orco}** creando un silbido mortal en el aire.\n\nüëπ **Orco:** 'El sonido de mi arma ser√° lo √∫ltimo que escuches.'\n‚öîÔ∏è **Humano:** 'El √∫nico sonido ser√° el de tu muerte agonizante.'\n\n‚ö° El orco lanza su arma en movimientos circulares impredecibles. El humano trata de predecir el patr√≥n mientras busca una apertura.\n\nü©∏ El **{titulo_orco}** logr√≥ golpear el costado humano con el mango de su arma. Sangre roja brota mientras el humano se dobla de dolor.\n\nüëπ El orco r√≠e mientras contin√∫a haciendo girar su arma de manera hipn√≥tica y amenazante.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",
        
        "round2": "‚öîÔ∏è **El {titulo_humano}** contraataca con determinaci√≥n f√©rrea pero la **{armadura_orco}** tiene placas m√≥viles que redirigen los ataques hacia puntos menos vitales.\n\n‚öîÔ∏è **Humano:** '¬°Es como atacar una fortaleza m√≥vil!'\nüëπ **Orco:** 'Cada placa se mueve independientemente para confundir a mis enemigos.'\n\n‚ö° El humano multiplica sus ataques tratando de encontrar un patr√≥n en el movimiento de las placas. El orco se mantiene en constante movimiento.\n\nü©∏ La espada humana logra penetrar entre las placas m√≥viles, causando una herida menor en el hombro orco.\n\n‚öîÔ∏è El humano se frustra al ver como la armadura parece tener vida propia.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un rugido mec√°nico. **{mascota_orco}** entra al campo de batalla y ataca ferozmente al humano que retrocede confundido. El **{mascota_humano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, tecnolog√≠a primitiva contra naturaleza pura en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del orco y el humano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_orco}/{hp_total_orco} vs {hp_restante_humano}/{hp_total_humano}**",
        
        "round4": "üíÄ **¬°ROUND FINAL!** El humano decide poner fin a esta lucha.\n\n‚öîÔ∏è **Humano:** '¬°Acabar√© con tus trucos sucios de una vez por todas!'\nüëπ **Orco:** '¬°Mis trucos te han llevado hasta aqu√≠, ahora morir√°s!'\n\n‚ö° Frotando su **{accesorio_humano}** se lanza contra el orco brutalmente. El orco lo mira fijamente y lanza su ataque mientras su **{accesorio_orco}** vibra por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El humano atraviesa el abdomen orco mientras el orco parte el cr√°neo humano con su arma giratoria.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_humano}/{hp_total_humano} vs {hp_final_orco}/{hp_total_orco}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 15 - HUMANO COMIENZA
    {
        "round1": "‚öîÔ∏è **El guerrero {titulo_humano}** entra al campo de batalla levantando su **{arma_humano}** hacia el cielo mientras invoca la bendici√≥n de los dioses humanos.\n\n‚öîÔ∏è **Humano:** 'Los dioses me han elegido para ser tu verdugo final.'\nüëπ **Orco:** 'Tus dioses son d√©biles ante el poder ancestral de la Horda.'\n\n‚ö° El humano desciende su arma con fuerza divina buscando partir al orco por la mitad. El orco bloquea con fuerza bruta y contraataca.\n\nü©∏ El **{titulo_humano}** logr√≥ cortar profundamente la pierna orca. Sangre verde se derrama mientras el orco cojea pero sigue luchando.\n\n‚öîÔ∏è El humano sonr√≠e confiado viendo como la bendici√≥n divina gu√≠a su arma hacia la victoria.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round2": "üëπ **El {titulo_orco}** contraataca cojeando pero el **{armadura_humano}** parece alimentarse de la luz solar, volvi√©ndose m√°s resistente a cada momento.\n\nüëπ **Orco:** '¬°Esa armadura se est√° volviendo m√°s fuerte!'\n‚öîÔ∏è **Humano:** 'La luz del d√≠a fortalece todo lo que es puro y justo.'\n\n‚ö° El orco ataca desesperadamente mientras nota como sus golpes cada vez causan menos efecto. El humano mantiene su posici√≥n confiado.\n\nü©∏ El hacha orca golpea la armadura pero rebota sin causar da√±o alguno, como si hubiera golpeado una monta√±a.\n\nüëπ El orco retrocede alarmado al ver como su arma m√°s poderosa resulta completamente in√∫til.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un canto celestial. **{mascota_humano}** entra al campo de batalla y ataca ferozmente al orco que siente como su fuerza se desvanece. El **{mascota_orco}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, poder celestial contra furia primitiva en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del orco y el humano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_humano}/{hp_total_humano} vs {hp_restante_orco}/{hp_total_orco}**",
        
        "round4": "üíÄ **¬°ROUND FINAL!** El orco decide poner fin a esta lucha.\n\nüëπ **Orco:** '¬°Si no puedo herirte, te arrastrar√© al inframundo conmigo!'\n‚öîÔ∏è **Humano:** '¬°La justicia divina prevalecer√° sobre tu maldad!'\n\n‚ö° Frotando su **{accesorio_orco}** se lanza contra el humano brutalmente. El humano lo mira fijamente y lanza su ataque mientras su **{accesorio_humano}** irradia poder divino por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El orco logra encontrar una grieta en la armadura divina mientras el humano purifica el alma orca con poder celestial.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_orco}/{hp_total_orco} vs {hp_final_humano}/{hp_total_humano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    }
],
    
    # ‚ô£‚úÖ ENANO VS ELFO - 15 NARRACIONES
    "enano_vs_elfo": [
    # NARRACION 2 - ELFO COMIENZA
    {
        "round1": "üßù **El guerrero {titulo_elfo}** ingresa con paso elegante y superior, brandiendo su **{arma_elfo}** con gracia milenaria.\n\nüßù **Elfo:** 'Tu sangre primitiva regar√° los bosques eternos esta noche.'\n‚öîÔ∏è **Enano:** 'Tu arrogancia ser√° tu perdici√≥n, orejudo pretencioso.'\n\n‚ö° El elfo lanza una estocada elegante directo al coraz√≥n enano. El enano bloquea brutalmente y contraataca con un hachazo devastador.\n\nü©∏ El **{titulo_elfo}** logr√≥ perforar el muslo enano. Sangre roja empapa el suelo mientras el enano gru√±e de dolor.\n\nüßù El elfo sonr√≠e con superioridad viendo la sangre enana manchar sus botas √©lficas.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round2": "‚öîÔ∏è **El {titulo_enano}** contraataca con resistencia f√©rrea pero su **{armadura_elfo}** m√°gica absorbe gran parte del impacto haciendo que el ataque enano sea menos efectivo.\n\n‚öîÔ∏è **Enano:** '¬°Maldita magia cobarde!'\nüßù **Elfo:** 'Milenios de sabidur√≠a forjaron esta protecci√≥n superior.'\n\n‚ö° El enano descarga golpes brutales buscando romper la defensa m√°gica √©lfica. El elfo mantiene su posici√≥n confiando en su superioridad.\n\nü©∏ El hacha enana logra golpear la armadura pero la magia √©lfica desv√≠a la mayor parte del da√±o. El elfo apenas se inmuta.\n\n‚öîÔ∏è El enano ruge frustrado mientras siente como su fuerza bruta es in√∫til contra la magia.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un aullido √©lfico. **{mascota_elfo}** entra al campo de batalla y ataca ferozmente al enano que se defiende valientemente. El **{mascota_enano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, gracia contra resistencia en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del elfo y el enano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_elfo}/{hp_total_elfo} vs {hp_restante_enano}/{hp_total_enano}**",
        
        "round4": "üíÄ **¬°ROUND FINAL!** El enano decide poner fin a esta lucha.\n\n‚öîÔ∏è **Enano:** '¬°Por el honor de los clanes! ¬°Tu superioridad es mentira!'\nüßù **Elfo:** '¬°La gracia √©lfica es eterna! ¬°Raza inferior como t√∫ no merece existir!'\n\n‚ö° Frotando su **{accesorio_enano}** se lanza contra el elfo brutalmente. El elfo lo mira fijamente y lanza su ataque mientras su **{accesorio_elfo}** late por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El enano parte el cr√°neo √©lfico con fuerza bruta mientras el elfo atraviesa el coraz√≥n enano con precisi√≥n.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_enano}/{hp_total_enano} vs {hp_final_elfo}/{hp_total_elfo}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 3 - ENANO COMIENZA
    {
        "round1": "‚öîÔ∏è **El guerrero {titulo_enano}** aparece en posici√≥n de combate con su **{arma_enano}** lista, irradiando honor y lealtad ancestral.\n\n‚öîÔ∏è **Enano:** 'La forja enana es superior a tu magia pretenciosa.'\nüßù **Elfo:** 'Tu barbarie no comprende la elegancia de siglos.'\n\n‚ö° El enano ejecuta ataques directos y honestos buscando perforar la defensa √©lfica. El elfo responde con movimientos gr√°ciles y superiores.\n\nü©∏ El **{titulo_enano}** logr√≥ cortar profundamente el abdomen √©lfico. Sangre dorada brota mientras el elfo retrocede con elegancia.\n\n‚öîÔ∏è El enano gru√±e satisfecho viendo como su fuerza supera la gracia √©lfica.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round2": "üßù **El {titulo_elfo}** contraataca con superioridad arrogante pero el **{armadura_enano}** forjada en las profundidades monta√±osas desv√≠a gran parte del golpe haciendo que el ataque √©lfico pierda efectividad.\n\nüßù **Elfo:** '¬°Imposible! ¬°Mi precisi√≥n es perfecta!'\n‚öîÔ∏è **Enano:** 'El metal de monta√±a es superior a tu t√©cnica cobarde.'\n\n‚ö° El elfo multiplica sus ataques elegantes buscando romper la defensa enana. El enano mantiene su posici√≥n confiando en su resistencia.\n\nü©∏ La espada √©lfica logra encontrar una junta en la armadura y penetra levemente, pero la resistencia enana absorbe gran parte del da√±o.\n\nüßù El elfo frunce el ce√±o al ver como su superioridad es in√∫til contra la terquedad enana.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un gru√±ido. **{mascota_enano}** entra al campo de batalla y ataca ferozmente al elfo que retrocede con desd√©n. El **{mascota_elfo}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, lealtad contra gracia en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del enano y el elfo contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_enano}/{hp_total_enano} vs {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round4": "üíÄ **¬°ROUND FINAL!** El elfo decide poner fin a esta lucha.\n\nüßù **Elfo:** '¬°Es hora de demostrar la superioridad √©lfica definitiva!'\n‚öîÔ∏è **Enano:** '¬°Por las forjas ancestrales! ¬°Tu raza no vale nada!'\n\n‚ö° Frotando su **{accesorio_elfo}** se lanza contra el enano brutalmente. El enano lo mira fijamente y lanza su ataque mientras su **{accesorio_enano}** brilla por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El elfo decapita al enano con un movimiento fluido mientras el enano destroza el pecho √©lfico con un golpe brutal.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_elfo}/{hp_total_elfo} vs {hp_final_enano}/{hp_total_enano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 4 - ELFO COMIENZA
    {
        "round1": "üßù **El guerrero {titulo_elfo}** emerge con gracia sobrenatural, elevando su **{arma_elfo}** mientras sus ojos brillan con superioridad milenaria.\n\nüßù **Elfo:** 'Milenios de sabidur√≠a contra a√±os de barbarie primitiva.'\n‚öîÔ∏è **Enano:** 'Tu sabidur√≠a no vale nada sin honor verdadero.'\n\n‚ö° El elfo ejecuta un ataque descendente √©lfico buscando partir al enano limpiamente. El enano rueda hacia un lado y ataca las piernas √©lficas.\n\nü©∏ El **{titulo_elfo}** logr√≥ abrir una herida profunda en el pecho enano. Sangre roja se derrama mientras el enano jadea de dolor.\n\nüßù El elfo observa con desd√©n como la sangre enana mancha el suelo sagrado.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round2": "‚öîÔ∏è **El {titulo_enano}** contraataca con honor inquebrantable pero la **{armadura_elfo}** tejida con magia ancestral es m√°s resistente de lo esperado, reduciendo significativamente el da√±o.\n\n‚öîÔ∏è **Enano:** '¬øC√≥mo puede ser tan resistente esa chatarra m√°gica?'\nüßù **Elfo:** 'Est√° imbuida con la esencia de los bosques eternos.'\n\n‚ö° El enano busca puntos d√©biles en la armadura m√°gica con golpes precisos. El elfo aprovecha para mantener distancia y atacar con superioridad.\n\nü©∏ El hacha enana encuentra una brecha en la magia y penetra, pero el elfo logra reducir el da√±o con gracia √©lfica.\n\n‚öîÔ∏è El enano escupe sangre mientras siente como la magia √©lfica drena sus fuerzas.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un canto √©lfico. **{mascota_elfo}** entra al campo de batalla y ataca ferozmente al enano que resiste con terquedad. El **{mascota_enano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, elegancia sobrenatural contra resistencia monta√±osa en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del elfo y el enano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_elfo}/{hp_total_elfo} vs {hp_restante_enano}/{hp_total_enano}**",
        
        "round4": "üíÄ **¬°ROUND FINAL!** El enano decide poner fin a esta lucha.\n\n‚öîÔ∏è **Enano:** '¬°Tu superioridad termina aqu√≠! ¬°Por los clanes de las monta√±as!'\nüßù **Elfo:** '¬°Raza inferior no merece respirar el mismo aire que los elfos!'\n\n‚ö° Frotando su **{accesorio_enano}** se lanza contra el elfo brutalmente. El elfo lo mira fijamente y lanza su ataque mientras su **{accesorio_elfo}** pulsa por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El enano tritura el cr√°neo √©lfico con fuerza bruta mientras el elfo perfora el coraz√≥n enano con precisi√≥n letal.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_enano}/{hp_total_enano} vs {hp_final_elfo}/{hp_total_elfo}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 5 - ENANO COMIENZA
    {
        "round1": "‚öîÔ∏è **El guerrero {titulo_enano}** se presenta con paso firme y decidido, sosteniendo su **{arma_enano}** mientras pronuncia un juramento de clan.\n\n‚öîÔ∏è **Enano:** 'En nombre de los hermanos ca√≠dos, tu sangre √©lfica pagar√°.'\nüßù **Elfo:** 'Tu raza primitiva fue creada para servir a los elfos.'\n\n‚ö° El enano carga con furia vengativa buscando atravesar el coraz√≥n √©lfico. El elfo se prepara para recibir el ataque y contraataca con superioridad.\n\nü©∏ El **{titulo_enano}** logr√≥ cortar profundamente el cuello √©lfico. Sangre dorada brota a borbotones mientras el elfo gorgotea con elegancia.\n\n‚öîÔ∏è El enano observa con satisfacci√≥n como la sangre √©lfica mancha sus botas de cuero.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round2": "üßù **El {titulo_elfo}** contraataca con el cuello sangrando pero el **{armadura_enano}** refleja la luz de las antorchas directamente a los ojos √©lficos, ceg√°ndolo moment√°neamente.\n\nüßù **Elfo:** '¬°Maldito metal tosco!'\n‚öîÔ∏è **Enano:** 'El brillo del acero enano ciega a los pretenciosos.'\n\n‚ö° El elfo ataca a ciegas con movimientos elegantes mientras la sangre sigue brotando de su cuello. El enano aprovecha la ceguera para atacar con brutalidad.\n\nü©∏ La espada √©lfica logra golpear el brazo enano, pero al estar cegado el golpe es d√©bil. La armadura absorbe la mayor parte del impacto.\n\nüßù El elfo parpadea furiosamente tratando de recuperar la visi√≥n perfecta.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un rugido monta√±oso. **{mascota_enano}** entra al campo de batalla y ataca ferozmente al elfo que a√∫n lucha por ver claramente. El **{mascota_elfo}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, lealtad de clan contra gracia superior en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del enano y el elfo contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_enano}/{hp_total_enano} vs {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round4": "üíÄ **¬°ROUND FINAL!** El elfo decide poner fin a esta lucha.\n\nüßù **Elfo:** '¬°Aunque muera, mi superioridad racial permanecer√° eterna!'\n‚öîÔ∏è **Enano:** '¬°Tu superioridad es mentira! ¬°Los enanos somos m√°s fuertes!'\n\n‚ö° Frotando su **{accesorio_elfo}** se lanza contra el enano brutalmente. El enano lo mira fijamente y lanza su ataque mientras su **{accesorio_enano}** resplandece por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El elfo destroza el cr√°neo enano con gracia mortal mientras el enano atraviesa completamente el torso √©lfico.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_elfo}/{hp_total_elfo} vs {hp_final_enano}/{hp_total_enano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 3 - ELFO COMIENZA
    {
        "round1": "üßù‚Äç‚ôÇÔ∏è **El guerrero {titulo_elfo}** entra al campo de batalla con movimientos gr√°ciles y superiores, empu√±ando su **{arma_elfo}** con elegancia ancestral.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Tu tosquedad enana ser√° purificada por mi superioridad √©lfica.'\n‚öîÔ∏è **Enano:** 'Maldito orejudo presumido, te har√© tragar tierra.'\n\n‚ö° El elfo lanza un ataque elegante directo al pecho del enano. El enano bloquea brutalmente y contraataca con un hachazo devastador.\n\nü©∏ El **{titulo_elfo}** logr√≥ cortar limpiamente el brazo enano. Sangre roja brota mientras el elfo observa con desd√©n la herida tosca.\n\nüßù‚Äç‚ôÇÔ∏è El elfo sonr√≠e con superioridad viendo como la sangre enana mancha su arma √©lfica.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round2": "‚öîÔ∏è **El {titulo_enano}** contraataca con furia f√©rrea pero la gracia del **{armadura_elfo}** √©lfica hace que el ataque bruto enano sea menos efectivo al deslizarse por la superficie elegante.\n\n‚öîÔ∏è **Enano:** '¬°Maldita armadura de danzar√≠n!'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'La tosquedad enana jam√°s penetrar√° la elegancia √©lfica.'\n\n‚ö° El enano descarga golpes brutales buscando romper la defensa gr√°cil del elfo. El elfo esquiva con movimientos fluidos aprovechando su agilidad superior.\n\nü©∏ El hacha enana logra golpear la armadura pero la gracia √©lfica desv√≠a la mayor parte del impacto. El elfo apenas se inmuta.\n\n‚öîÔ∏è El enano ruge frustrado mientras siente como su fuerza bruta es in√∫til contra la elegancia.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un canto melodioso. **{mascota_elfo}** entra al campo de batalla y ataca gr√°cilmente al enano que hierve en furia. El **{mascota_enano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, elegancia contra resistencia en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del elfo y el enano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_elfo}/{hp_total_elfo} vs {hp_restante_enano}/{hp_total_enano}**",
        
        "round4": "üßù‚Äç‚ôÇÔ∏è **¬°ROUND FINAL!** El enano decide poner fin a esta lucha.\n\n‚öîÔ∏è **Enano:** '¬°Por el orgullo de las monta√±as! ¬°Tu arrogancia √©lfica terminar√°!'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'La superioridad √©lfica prevalecer√° sobre la tosquedad enana.'\n\n‚ö° Frotando su **{accesorio_enano}** se lanza contra el elfo brutalmente. El elfo lo mira con desd√©n y lanza su ataque mientras su **{accesorio_elfo}** brilla por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El enano parte el cr√°neo √©lfico con fuerza bruta mientras el elfo atraviesa el coraz√≥n enano con precisi√≥n letal.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_enano}/{hp_total_enano} vs {hp_final_elfo}/{hp_total_elfo}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },

        # NARRACION 4 - ENANO COMIENZA
    {
        "round1": "‚öîÔ∏è **El guerrero {titulo_enano}** entra al campo de batalla con mirada de acero forjada en las profundidades de Moria, empu√±ando su **{arma_enano}** con el orgullo de Durin.\n\n‚öîÔ∏è **Enano:** 'Orejudo arrogante, tu sangre √©lfica regar√° la tierra como en los d√≠as de Khazad-d√ªm.'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'B√°rbaro de las cavernas, tu estirpe inferior ser√° exterminada.'\n\n‚ö° El enano lanza un hachazo brutal directo al cuello √©lfico. El elfo esquiva con gracia milenaria y contraataca con filo letal.\n\nü©∏ El **{titulo_enano}** logr√≥ cortar profundamente el muslo √©lfico. Sangre dorada brota mientras el elfo grita con dolor ancestral.\n\n‚öîÔ∏è El enano r√≠e salvajemente viendo como la perfecta sangre √©lfica mancha sus botas enanas.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round2": "üßù‚Äç‚ôÇÔ∏è **El {titulo_elfo}** contraataca con venganza milenaria pero el temple del **{armadura_enano}** forjada en las llamas del monte Erebor resiste la elegancia √©lfica haciendo que el ataque no penetre completamente.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°Maldito metal tosco de las profundidades!'\n‚öîÔ∏è **Enano:** 'El acero enano ha resistido dragones, no ser√° un orejudo quien lo rompa.'\n\n‚ö° El elfo descarga cortes precisos buscando las junturas de la armadura enana. El enano mantiene su posici√≥n confiando en la forja ancestral.\n\nü©∏ La espada √©lfica logra encontrar una hendidura pero el metal enano desv√≠a el filo mortal. El enano apenas siente el roce.\n\nüßù‚Äç‚ôÇÔ∏è El elfo retrocede frustrado mientras contempla como su perfecci√≥n es in√∫til contra la tosquedad enana.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un rugido de las monta√±as. **{mascota_enano}** entra al campo de batalla y ataca ferozmente al elfo que se defiende con desesperaci√≥n. El **{mascota_elfo}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, fiereza de las monta√±as contra gracia del bosque en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del enano y el elfo contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_enano}/{hp_total_enano} vs {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round4": "‚öîÔ∏è **¬°ROUND FINAL!** El elfo decide poner fin a esta lucha.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°Por la gloria de Rivendel! ¬°Tu linaje enano ser√° exterminado!'\n‚öîÔ∏è **Enano:** 'Los hijos de Aul√´ no conocen la derrota ante orejudos presumidos.'\n\n‚ö° Frotando su **{accesorio_elfo}** se lanza contra el enano brutalmente. El enano lo mira con desprecio y lanza su ataque mientras su **{accesorio_enano}** vibra por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El elfo atraviesa el pecho enano con precisi√≥n letal mientras el enano decapita al elfo con fuerza descomunal.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_elfo}/{hp_total_elfo} vs {hp_final_enano}/{hp_total_enano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },

        # NARRACION 5 - ELFO COMIENZA
    {
        "round1": "üßù‚Äç‚ôÇÔ∏è **El guerrero {titulo_elfo}** entra al campo de batalla con la gracia milenaria de Lothl√≥rien, empu√±ando su **{arma_elfo}** con la elegancia de los Primeros Nacidos.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Enano inmundo, tu raza inferior ser√° purificada por mi hoja √©lfica.'\n‚öîÔ∏è **Enano:** 'Orejudo maldito, har√© que tu sangre dorada se mezcle con el barro.'\n\n‚ö° El elfo lanza un corte preciso directo al coraz√≥n enano. El enano bloquea salvajemente y contraataca con brutalidad descomunal.\n\nü©∏ El **{titulo_elfo}** logr√≥ atravesar el hombro enano hasta el hueso. Sangre roja se derrama mientras el enano ruge de dolor y furia.\n\nüßù‚Äç‚ôÇÔ∏è El elfo contempla con satisfacci√≥n como la sangre tosca enana empapa su arma perfecta.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round2": "‚öîÔ∏è **El {titulo_enano}** contraataca con la furia de Khazad-d√ªm pero la ligereza del **{armadura_elfo}** forjada en Rivendel hace que el ataque bruto sea parcialmente desviado por la gracia ancestral.\n\n‚öîÔ∏è **Enano:** '¬°Maldita armadura de bailar√≠n!'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'La tosquedad enana jam√°s comprender√° la perfecci√≥n √©lfica.'\n\n‚ö° El enano descarga hachazos brutales buscando romper la defensa elegante del elfo. El elfo mantiene su postura gr√°cil confiando en su superioridad milenaria.\n\nü©∏ El hacha enana logra impactar la armadura √©lfica pero la perfecci√≥n del dise√±o absorbe gran parte del golpe. El elfo apenas retrocede.\n\n‚öîÔ∏è El enano escupe sangre frustrado mientras siente como su fuerza es insuficiente contra la elegancia.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un canto ancestral. **{mascota_elfo}** entra al campo de batalla y ataca gr√°cilmente al enano que se defiende con desesperaci√≥n. El **{mascota_enano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, elegancia del bosque contra fiereza de las monta√±as en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del elfo y el enano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_elfo}/{hp_total_elfo} vs {hp_restante_enano}/{hp_total_enano}**",
        
        "round4": "üßù‚Äç‚ôÇÔ∏è **¬°ROUND FINAL!** El enano decide poner fin a esta lucha.\n\n‚öîÔ∏è **Enano:** '¬°Por la barba de Durin! ¬°Tu arrogancia √©lfica ser√° aplastada!'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Los Primeros Nacidos no caer√°n ante la barbarie enana.'\n\n‚ö° Frotando su **{accesorio_enano}** se lanza contra el elfo brutalmente. El elfo lo observa con desd√©n y lanza su ataque mientras su **{accesorio_elfo}** resplandece por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El enano aplasta el cr√°neo √©lfico con fuerza descomunal mientras el elfo perfora el coraz√≥n enano con precisi√≥n mortal.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_enano}/{hp_total_enano} vs {hp_final_elfo}/{hp_total_elfo}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },

        # NARRACION 6 - ENANO COMIENZA
    {
        "round1": "‚öîÔ∏è **El guerrero {titulo_enano}** entra al campo de batalla con la resistencia inquebrantable del Pueblo de la Piedra, empu√±ando su **{arma_enano}** con el poder de los forjadores de Erebor.\n\n‚öîÔ∏è **Enano:** 'Orejudo despreciable, tu perfecci√≥n ser√° destrozada por el hierro enano.'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Criatura de las cavernas, tu existencia inferior terminar√° hoy.'\n\n‚ö° El enano lanza un martillazo devastador directo a las costillas √©lficas. El elfo esquiva con agilidad ancestral y contraataca con cortes letales.\n\nü©∏ El **{titulo_enano}** logr√≥ fracturar las costillas √©lficas con un golpe brutal. Sangre dorada brota mientras el elfo grita con dolor milenario.\n\n‚öîÔ∏è El enano gru√±e con satisfacci√≥n viendo como la perfecci√≥n √©lfica se quiebra bajo su fuerza.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round2": "üßù‚Äç‚ôÇÔ∏è **El {titulo_elfo}** contraataca con la venganza de Elrond pero la dureza del **{armadura_enano}** templada en las forjas de Moria resiste la gracia √©lfica haciendo que el ataque elegante sea inefectivo.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°Maldito metal tosco de las profundidades oscuras!'\n‚öîÔ∏è **Enano:** 'El acero enano ha soportado la ira de Smaug, no tememos a un orejudo.'\n\n‚ö° El elfo descarga una lluvia de cortes precisos buscando debilitar la defensa enana. El enano permanece inm√≥vil confiando en su armadura ancestral.\n\nü©∏ Las hojas √©lficas logran encontrar peque√±as hendiduras pero el temple enano rechaza los ataques elegantes. El enano apenas siente los golpes.\n\nüßù‚Äç‚ôÇÔ∏è El elfo retrocede desesperado mientras contempla como su perfecci√≥n es in√∫til contra la resistencia enana.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un rugido desde las profundidades. **{mascota_enano}** entra al campo de batalla y ataca salvajemente al elfo que se defiende con elegancia desesperada. El **{mascota_elfo}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, salvajismo de las monta√±as contra gracia del bosque en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del enano y el elfo contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_enano}/{hp_total_enano} vs {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round4": "‚öîÔ∏è **¬°ROUND FINAL!** El elfo decide poner fin a esta lucha.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°Por la gloria de Valinor! ¬°Tu linaje enano ser√° borrado!'\n‚öîÔ∏è **Enano:** 'Los hijos de las monta√±as no conocen la rendici√≥n ante orejudos arrogantes.'\n\n‚ö° Frotando su **{accesorio_elfo}** se lanza contra el enano brutalmente. El enano lo mira con desprecio absoluto y lanza su ataque mientras su **{accesorio_enano}** late por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El elfo atraviesa el cuello enano con precisi√≥n letal mientras el enano destroza el pecho √©lfico con fuerza apocal√≠ptica.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_elfo}/{hp_total_elfo} vs {hp_final_enano}/{hp_total_enano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },


        # NARRACION 7 - ELFO COMIENZA
    {
        "round1": "üßù‚Äç‚ôÇÔ∏è **El guerrero {titulo_elfo}** entra al campo de batalla con el desprecio ancestral de los Altos Elfos, empu√±ando su **{arma_elfo}** con la superioridad de los inmortales.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Rata de t√∫nel, tu especie inmunda ser√° exterminada como las alima√±as que son.'\n‚öîÔ∏è **Enano:** 'Orejudo presumido, arrancar√© esas orejas puntiagudas y las usar√© como trofeo.'\n\n‚ö° El elfo lanza un tajo mortal directo a la garganta enana. El enano bloquea brutalmente y contraataca con sa√±a descomunal.\n\nü©∏ El **{titulo_elfo}** logr√≥ abrir una herida profunda en el cuello enano. Sangre roja se derrama mientras el enano escupe sangre con furia.\n\nüßù‚Äç‚ôÇÔ∏è El elfo sonr√≠e con crueldad viendo como la sangre tosca enana mancha el suelo sagrado.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round2": "‚öîÔ∏è **El {titulo_enano}** contraataca con el odio de las Guerras de los Enanos pero la agilidad del **{armadura_elfo}** forjada por los Noldor hace que el ataque tosco sea desviado por la perfecci√≥n ancestral.\n\n‚öîÔ∏è **Enano:** '¬°Maldita armadura de marica √©lfica!'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'La barbarie enana jam√°s manchar√° la perfecci√≥n de los Primeros Nacidos.'\n\n‚ö° El enano descarga golpes salvajes buscando destrozar la elegancia √©lfica. El elfo mantiene su posici√≥n superior confiando en su gracia milenaria.\n\nü©∏ El hacha enana logra impactar pero la perfecci√≥n √©lfica absorbe el golpe tosco. El elfo apenas se inmuta ante la brutalidad inferior.\n\n‚öîÔ∏è El enano ruge con odio mientras siente como su fuerza es despreciada por la superioridad √©lfica.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un aullido √©lfico. **{mascota_elfo}** entra al campo de batalla y ataca con gracia letal al enano que se defiende como un animal acorralado. El **{mascota_enano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, elegancia superior contra salvajismo inferior en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del elfo y el enano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_elfo}/{hp_total_elfo} vs {hp_restante_enano}/{hp_total_enano}**",
        
        "round4": "üßù‚Äç‚ôÇÔ∏è **¬°ROUND FINAL!** El enano decide poner fin a esta lucha.\n\n‚öîÔ∏è **Enano:** '¬°Por las barbas de mis ancestros! ¬°Tu raza maldita ser√° borrada de la faz de la tierra!'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Los inmortales no caeremos ante la escoria de las cavernas.'\n\n‚ö° Frotando su **{accesorio_enano}** se lanza contra el elfo con odio puro. El elfo lo mira con asco absoluto y lanza su ataque mientras su **{accesorio_elfo}** brilla por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El enano aplasta la cabeza √©lfica como una nuez mientras el elfo atraviesa el coraz√≥n enano con precisi√≥n divina.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_enano}/{hp_total_enano} vs {hp_final_elfo}/{hp_total_elfo}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 8 - ENANO COMIENZA
    {
        "round1": "‚öîÔ∏è **El guerrero {titulo_enano}** entra al campo de batalla con el desprecio ancestral hacia los orejudos, empu√±ando su **{arma_enano}** con la furia de los Siete Padres de los Enanos.\n\n‚öîÔ∏è **Enano:** 'Orejudo asqueroso, har√© que tu sangre dorada se pudra en mis manos.'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Bestia de las profundidades, tu raza inferior ser√° purificada por mi hoja.'\n\n‚ö° El enano lanza un golpe devastador directo al rostro perfecto √©lfico. El elfo esquiva con arrogancia y contraataca con desprecio letal.\n\nü©∏ El **{titulo_enano}** logr√≥ destrozar la mejilla √©lfica dejando una cicatriz horrible. Sangre dorada brota mientras el elfo grita horrorizado por su belleza arruinada.\n\n‚öîÔ∏è El enano r√≠e salvajemente viendo como la perfecci√≥n √©lfica se convierte en fealdad bajo su fuerza.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round2": "üßù‚Äç‚ôÇÔ∏è **El {titulo_elfo}** contraataca con la ira de Gil-galad pero la robustez del **{armadura_enano}** forjada en el Khazad-d√ªm resiste la elegancia √©lfica haciendo que el ataque refinado sea in√∫til.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°Maldita armadura de gusano de t√∫nel!'\n‚öîÔ∏è **Enano:** 'El hierro enano ha resistido la ca√≠da de reinos, no tememos a orejudos llorones.'\n\n‚ö° El elfo descarga una serie de ataques desesperados buscando penetrar la defensa tosca enana. El enano se mantiene firme despreciando la debilidad √©lfica.\n\nü©∏ Las armas √©lficas logran rasgu√±ar la superficie pero el temple enano rechaza los golpes refinados. El enano escupe desprecio.\n\nüßù‚Äç‚ôÇÔ∏è El elfo retrocede horrorizado mientras contempla como su superioridad es humillada por la resistencia bruta.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un rugido desde las minas. **{mascota_enano}** entra al campo de batalla y ataca brutalmente al elfo que retrocede con horror. El **{mascota_elfo}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, ferocidad de las cavernas contra refinamiento del bosque en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del enano y el elfo contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_enano}/{hp_total_enano} vs {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round4": "‚öîÔ∏è **¬°ROUND FINAL!** El elfo decide poner fin a esta lucha.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°Por la luz de E√§rendil! ¬°Tu raza asquerosa ser√° exterminada!'\n‚öîÔ∏è **Enano:** 'Los enanos no nos rendimos ante orejudos presumidos y d√©biles.'\n\n‚ö° Frotando su **{accesorio_elfo}** se lanza contra el enano con desesperaci√≥n. El enano lo mira con asco puro y lanza su ataque mientras su **{accesorio_enano}** vibra por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El elfo perfora el abdomen enano con precisi√≥n mortal mientras el enano destroza el cr√°neo √©lfico con furia apocal√≠ptica.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_elfo}/{hp_total_elfo} vs {hp_final_enano}/{hp_total_enano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },

        # NARRACION 9 - ELFO COMIENZA
    {
        "round1": "üßù‚Äç‚ôÇÔ∏è **El guerrero {titulo_elfo}** entra al campo de batalla con la arrogancia de los Eldar, empu√±ando su **{arma_elfo}** con el desd√©n de los hijos de Il√∫vatar.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Escoria de las minas, tu sangre sucia ser√° derramada por mis manos perfectas.'\n‚öîÔ∏è **Enano:** 'Orejudo maldito, te har√© comer tierra hasta que supliques por muerte.'\n\n‚ö° El elfo lanza un corte letal directo al abdomen enano. El enano bloquea con furia y contraataca con sa√±a brutal.\n\nü©∏ El **{titulo_elfo}** logr√≥ abrir una herida profunda en el costado enano. Sangre roja se derrama mientras el enano ruge con dolor y odio.\n\nüßù‚Äç‚ôÇÔ∏è El elfo contempla con placer s√°dico como la sangre tosca enana mancha sus botas √©lficas.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round2": "‚öîÔ∏è **El {titulo_enano}** contraataca con el rencor de las Guerras del Beleriand pero la velocidad del **{armadura_elfo}** forjada en los talleres de Eregion hace que el ataque pesado sea esquivado por la agilidad ancestral.\n\n‚öîÔ∏è **Enano:** '¬°Maldita armadura de cobarde √©lfico!'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'La lentitud enana es pat√©tica ante la gracia de los inmortales.'\n\n‚ö° El enano descarga martillazos desesperados buscando aplastar la agilidad √©lfica. El elfo danza alrededor del enano burl√°ndose de su torpeza.\n\nü©∏ Los golpes enanos logran rozar la armadura pero la velocidad √©lfica evita el da√±o real. El elfo r√≠e con crueldad.\n\n‚öîÔ∏è El enano babea de rabia mientras siente como es humillado por la superioridad √©lfica.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un silbido √©lfico. **{mascota_elfo}** entra al campo de batalla y ataca con elegancia mortal al enano que lucha como una bestia. El **{mascota_enano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, refinamiento letal contra brutalidad primitiva en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del elfo y el enano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_elfo}/{hp_total_elfo} vs {hp_restante_enano}/{hp_total_enano}**",
        
        "round4": "üßù‚Äç‚ôÇÔ∏è **¬°ROUND FINAL!** El enano decide poner fin a esta lucha.\n\n‚öîÔ∏è **Enano:** '¬°Por el martillo de Aul√´! ¬°Tu arrogancia √©lfica ser√° aplastada como una cucaracha!'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Los Primeros Nacidos no caer√°n ante la suciedad de los t√∫neles.'\n\n‚ö° Frotando su **{accesorio_enano}** se lanza contra el elfo con odio ancestral. El elfo lo mira con repugnancia absoluta y lanza su ataque mientras su **{accesorio_elfo}** resplandece por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El enano destroza la espina dorsal √©lfica con fuerza bruta mientras el elfo decapita al enano con un corte perfecto.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_enano}/{hp_total_enano} vs {hp_final_elfo}/{hp_total_elfo}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 10 - ENANO COMIENZA
    {
        "round1": "‚öîÔ∏è **El guerrero {titulo_enano}** entra al campo de batalla con el odio milenario hacia los orejudos, empu√±ando su **{arma_enano}** con la brutalidad de los hijos de Aul√´.\n\n‚öîÔ∏è **Enano:** 'Orejudo pestilente, har√© que tu perfecci√≥n se convierta en horror.'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Gusano de las profundidades, tu raza inmunda ser√° purificada.'\n\n‚ö° El enano lanza un hachazo salvaje directo a la cara √©lfica. El elfo esquiva con horror y contraataca con furia desesperada.\n\nü©∏ El **{titulo_enano}** logr√≥ cortar la oreja izquierda del elfo de ra√≠z. Sangre dorada brota mientras el elfo grita horrorizado por su desfiguraci√≥n.\n\n‚öîÔ∏è El enano alza la oreja cortada como trofeo mientras r√≠e con sadismo puro.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round2": "üßù‚Äç‚ôÇÔ∏è **El {titulo_elfo}** contraataca con la venganza de Elendil pero la dureza del **{armadura_enano}** templada en las llamas de Khazad-d√ªm resiste la furia √©lfica haciendo que el ataque vengativo sea in√∫til.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°Maldita coraza de bestia subterr√°nea!'\n‚öîÔ∏è **Enano:** 'El acero enano ha resistido dragones, no tememos a orejudos mutilados.'\n\n‚ö° El elfo descarga una lluvia de golpes desesperados buscando vengar su desfiguraci√≥n. El enano permanece inm√≥vil ri√©ndose de la debilidad √©lfica.\n\nü©∏ Las armas √©lficas logran hacer ruido contra el metal pero el temple enano es inquebrantable. El enano escupe desprecio.\n\nüßù‚Äç‚ôÇÔ∏è El elfo llora l√°grimas de sangre mientras contempla como su venganza es humillada por la resistencia tosca.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un ladrido desde las minas. **{mascota_enano}** entra al campo de batalla y ataca ferozmente al elfo que retrocede con terror. El **{mascota_elfo}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, salvajismo subterr√°neo contra elegancia desesperada en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del enano y el elfo contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_enano}/{hp_total_enano} vs {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round4": "‚öîÔ∏è **¬°ROUND FINAL!** El elfo decide poner fin a esta lucha.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°Por mi oreja perdida! ¬°Tu muerte ser√° lenta y dolorosa!'\n‚öîÔ∏è **Enano:** 'Los enanos coleccionamos orejas √©lficas como trofeos de guerra.'\n\n‚ö° Frotando su **{accesorio_elfo}** se lanza contra el enano con sed de venganza. El enano lo mira con burla cruel y lanza su ataque mientras su **{accesorio_enano}** late por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El elfo atraviesa el pecho enano con toda su furia mientras el enano aplasta la cabeza √©lfica con sus manos desnudas.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_elfo}/{hp_total_elfo} vs {hp_final_enano}/{hp_total_enano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },



        # NARRACION 11 - ELFO COMIENZA
    {
        "round1": "üßù‚Äç‚ôÇÔ∏è **El guerrero {titulo_elfo}** entra al campo de batalla con el desprecio absoluto de los Noldor, empu√±ando su **{arma_elfo}** con la superioridad de los hijos de la luz.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Rata inmunda de alcantarilla, har√© que tu sangre sucia manche mis botas perfectas.'\n‚öîÔ∏è **Enano:** 'Orejudo marica, arrancar√© tus orejas y las colgar√© en mi cintur√≥n como adorno.'\n\n‚ö° El elfo lanza un tajo cruel directo a los ojos enanos. El enano bloquea escupiendo sangre y contraataca con odio puro.\n\nü©∏ El **{titulo_elfo}** logr√≥ cegar el ojo derecho del enano dej√°ndolo tuerto. Sangre roja brota mientras el enano ruge como una bestia herida.\n\nüßù‚Äç‚ôÇÔ∏è El elfo r√≠e con crueldad viendo como el enano se retuerce de dolor mientras sangra como un cerdo.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round2": "‚öîÔ∏è **El {titulo_enano}** contraataca con la furia de un oso herido pero la perfecci√≥n del **{armadura_elfo}** forjada en Valinor hace que el ataque bestial sea desviado por la gracia divina.\n\n‚öîÔ∏è **Enano:** '¬°Maldita armadura de bailarina √©lfica!'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'La torpeza de los ciegos es pat√©tica, bestia tuerta.'\n\n‚ö° El enano descarga golpes salvajes buscando destrozar al elfo burl√≥n. El elfo baila alrededor del enano ciego ri√©ndose de su desgracia.\n\nü©∏ Los golpes enanos fallan repetidamente mientras el elfo se burla. El enano tropieza con su propia sangre derramada.\n\n‚öîÔ∏è El enano babea de rabia mientras el elfo lo humilla p√∫blicamente con burlas crueles.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un canto burl√≥n. **{mascota_elfo}** entra al campo de batalla y ataca con gracia mortal al enano ciego que se defiende a ciegas. El **{mascota_enano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, elegancia burlona contra ferocidad ciega en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del elfo y el enano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_elfo}/{hp_total_elfo} vs {hp_restante_enano}/{hp_total_enano}**",
        
        "round4": "üßù‚Äç‚ôÇÔ∏è **¬°ROUND FINAL!** El enano decide poner fin a esta lucha.\n\n‚öîÔ∏è **Enano:** '¬°Por mi ojo perdido! ¬°Te har√© sufrir como nunca sufri√≥ orejudo alguno!'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Un enano ciego es tan in√∫til como un gusano aplastado.'\n\n‚ö° Frotando su **{accesorio_enano}** se lanza contra el elfo con furia ciega. El elfo lo mira con burla s√°dica y lanza su ataque mientras su **{accesorio_elfo}** brilla por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El enano agarra al elfo con sus manos y lo destroza como un mu√±eco mientras el elfo le arranca el coraz√≥n con sus u√±as.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_enano}/{hp_total_enano} vs {hp_final_elfo}/{hp_total_elfo}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 12 - ENANO COMIENZA
    {
        "round1": "‚öîÔ∏è **El guerrero {titulo_enano}** entra al campo de batalla con la resistencia inquebrantable de las monta√±as eternas, empu√±ando su **{arma_enano}** con el desprecio ancestral hacia los orejudos.\n\n‚öîÔ∏è **Enano:** 'Orejudo de mierda, har√© que tu sangre dorada se pudra como esti√©rcol.'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Escoria barbuda, tu raza asquerosa ser√° exterminada hasta el √∫ltimo.'\n\n‚ö° El enano lanza un martillazo devastador directo a las rodillas √©lficas. El elfo salta desesperadamente y contraataca con sa√±a mortal.\n\nü©∏ El **{titulo_enano}** logr√≥ fracturar ambas r√≥tulas √©lficas dej√°ndolo cojeando. Sangre dorada brota mientras el elfo grita de agon√≠a.\n\n‚öîÔ∏è El enano escupe en la cara del elfo ca√≠do mientras r√≠e viendo como la perfecci√≥n se convierte en invalidez.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round2": "üßù‚Äç‚ôÇÔ∏è **El {titulo_elfo}** contraataca cojeando con la desesperaci√≥n de los moribundos pero la resistencia del **{armadura_enano}** templada en el fuego del mundo hace que el ataque desesperado sea completamente in√∫til.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°Maldita coraza de demonio subterr√°neo!'\n‚öîÔ∏è **Enano:** 'Los enanos resistimos hasta que el mundo se acabe, orejudo inv√°lido.'\n\n‚ö° El elfo cojea desesperadamente intentando cortar la armadura enana. El enano se queda inm√≥vil burl√°ndose del pat√©tico intento.\n\nü©∏ Las armas √©lficas rebotan in√∫tilmente contra el acero enano. El enano ni siquiera se molesta en defenderse.\n\n‚öîÔ∏è El enano r√≠e a carcajadas mientras el elfo se agota golpeando su armadura indestructible.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un rugido burl√≥n. **{mascota_enano}** entra al campo de batalla y ataca salvajemente al elfo inv√°lido que apenas puede defenderse. El **{mascota_elfo}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, ferocidad burlona contra elegancia desesperada en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del enano y el elfo contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_enano}/{hp_total_enano} vs {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round4": "‚öîÔ∏è **¬°ROUND FINAL!** El elfo decide poner fin a esta lucha.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°Por mis rodillas destrozadas! ¬°Morir√© pero te llevar√© conmigo!'\n‚öîÔ∏è **Enano:** 'Los enanos enterramos orejudos inv√°lidos como t√∫ todos los d√≠as.'\n\n‚ö° Frotando su **{accesorio_elfo}** se lanza cojeando contra el enano con √∫ltimo aliento. El enano lo mira con l√°stima cruel y lanza su ataque mientras su **{accesorio_enano}** vibra por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El elfo clava su espada en el cuello enano con su √∫ltima fuerza mientras el enano le arranca la cabeza con sus manos desnudas.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_elfo}/{hp_total_elfo} vs {hp_final_enano}/{hp_total_enano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 13 - ELFO COMIENZA
    {
        "round1": "üßù‚Äç‚ôÇÔ∏è **El guerrero {titulo_elfo}** entra al campo de batalla con el asco absoluto hacia los enanos, empu√±ando su **{arma_elfo}** con la repugnancia de los seres superiores.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Bestia barbuda y apestosa, tu hedor contamina el aire puro.'\n‚öîÔ∏è **Enano:** 'Orejudo perfumado, te har√© comer tus propios dientes hasta que te ahogues.'\n\n‚ö° El elfo lanza un corte s√°dico directo a la barba sagrada enana. El enano ruge horrorizado y contraataca con furia genocida.\n\nü©∏ El **{titulo_elfo}** logr√≥ cortar la mitad de la barba enana dej√°ndola desigual. Sangre roja brota mientras el enano llora de humillaci√≥n.\n\nüßù‚Äç‚ôÇÔ∏è El elfo pisotea los pelos de barba cortados mientras se burla de la devastaci√≥n enana.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round2": "‚öîÔ∏è **El {titulo_enano}** contraataca con la furia de mil ancestros pero la velocidad del **{armadura_elfo}** bendecida por los Valar hace que el ataque vengativo sea esquivado por la gracia celestial.\n\n‚öîÔ∏è **Enano:** '¬°Mi barba sagrada! ¬°Pagar√°s con sangre esta profanaci√≥n!'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Tu barba asquerosa mejora el paisaje cortada, bestia deforme.'\n\n‚ö° El enano descarga golpes enloquecidos buscando vengar su barba mutilada. El elfo baila burlonamente alrededor del enano humillado.\n\nü©∏ Los golpes enanos fallan mientras el elfo se r√≠e de la barba desigual. El enano tropieza con l√°grimas de humillaci√≥n.\n\n‚öîÔ∏è El enano solloza de rabia mientras el elfo contin√∫a burl√°ndose de su desfiguraci√≥n sagrada.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha una risa cruel. **{mascota_elfo}** entra al campo de batalla y ataca burlonamente al enano humillado que lucha con desesperaci√≥n. El **{mascota_enano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, burla cruel contra desesperaci√≥n humillada en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del elfo y el enano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_elfo}/{hp_total_elfo} vs {hp_restante_enano}/{hp_total_enano}**",
        
        "round4": "üßù‚Äç‚ôÇÔ∏è **¬°ROUND FINAL!** El enano decide poner fin a esta lucha.\n\n‚öîÔ∏è **Enano:** '¬°Por mi barba sagrada! ¬°Te har√© pagar por esta humillaci√≥n eterna!'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Un enano sin barba es tan pat√©tico como un gusano pelado.'\n\n‚ö° Frotando su **{accesorio_enano}** se lanza contra el elfo con venganza sagrada. El elfo lo mira con burla infinita y lanza su ataque mientras su **{accesorio_elfo}** resplandece por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El enano estrangula al elfo con sus manos desnudas hasta quebrarle el cuello mientras el elfo le clava dagas en ambos ojos.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_enano}/{hp_total_enano} vs {hp_final_elfo}/{hp_total_elfo}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 14 - ENANO COMIENZA
    {
        "round1": "‚öîÔ∏è **El guerrero {titulo_enano}** entra al campo de batalla con la terquedad eterna de las piedras, empu√±ando su **{arma_enano}** con el rencor acumulado de milenios.\n\n‚öîÔ∏è **Enano:** 'Orejudo presumido, har√© que tu cara perfecta se convierta en pulpa sanguinolenta.'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Monstruo peludo, tu raza deforme ser√° borrada de la existencia.'\n\n‚ö° El enano lanza un pu√±etazo brutal directo a la nariz √©lfica perfecta. El elfo retrocede horrorizado y contraataca con elegancia desesperada.\n\nü©∏ El **{titulo_enano}** logr√≥ romper la nariz √©lfica dej√°ndola completamente desfigurada. Sangre dorada brota mientras el elfo grita horrorizado por su belleza arruinada.\n\n‚öîÔ∏è El enano r√≠e salvajemente viendo como la sangre √©lfica mancha la perfecci√≥n ancestral.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round2": "üßù‚Äç‚ôÇÔ∏è **El {titulo_elfo}** contraataca con la vanidad herida de los dioses pero la solidez del **{armadura_enano}** forjada en las entra√±as de la tierra hace que el ataque vengativo sea completamente absorbido.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°Mi rostro perfecto! ¬°Maldita armadura de troll!'\n‚öîÔ∏è **Enano:** 'Los enanos resistimos todo, incluso los lloriqueos de orejudos desfigurados.'\n\n‚ö° El elfo descarga ataques hist√©ricos buscando vengar su belleza perdida. El enano se mantiene firme ri√©ndose de la vanidad √©lfica.\n\nü©∏ Las armas √©lficas rebotan in√∫tilmente contra la resistencia enana. El enano ni siquiera se molesta en moverse.\n\n‚öîÔ∏è El enano se burla cruelmente mientras el elfo llora por su nariz rota y su belleza perdida.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha una carcajada cruel. **{mascota_enano}** entra al campo de batalla y ataca burlonamente al elfo desfigurado que llora su belleza perdida. El **{mascota_elfo}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, crueldad burlona contra vanidad destrozada en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del enano y el elfo contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_enano}/{hp_total_enano} vs {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round4": "‚öîÔ∏è **¬°ROUND FINAL!** El elfo decide poner fin a esta lucha.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°Por mi rostro arruinado! ¬°Te har√© sufrir por destronar mi perfecci√≥n!'\n‚öîÔ∏è **Enano:** 'Un orejudo feo es un orejudo honesto por primera vez en su vida.'\n\n‚ö° Frotando su **{accesorio_elfo}** se lanza contra el enano con vanidad herida. El enano lo mira con burla infinita y lanza su ataque mientras su **{accesorio_enano}** late por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El elfo perfora el abdomen enano con toda su vanidad herida mientras el enano le aplasta el cr√°neo con un martillo.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_elfo}/{hp_total_elfo} vs {hp_final_enano}/{hp_total_enano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 15 - ELFO COMIENZA (√öLTIMA)
    {
        "round1": "üßù‚Äç‚ôÇÔ∏è **El guerrero {titulo_elfo}** entra al campo de batalla con el odio purificador de los inmortales, empu√±ando su **{arma_elfo}** con la superioridad absoluta de los Primeros Nacidos.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Gusano barbudo de las cloacas, tu sangre infecta suciar√° mi hoja por √∫ltima vez.'\n‚öîÔ∏è **Enano:** 'Orejudo maldito, har√© que tu inmortalidad sea una maldici√≥n eterna de dolor.'\n\n‚ö° El elfo lanza un corte devastador directo al coraz√≥n enano. El enano bloquea con resistencia legendaria y contraataca con brutalidad final.\n\nü©∏ El **{titulo_elfo}** logr√≥ atravesar el pecho enano hasta tocar el coraz√≥n. Sangre roja brota a torrentes mientras el enano ruge desafiante.\n\nüßù‚Äç‚ôÇÔ∏è El elfo sonr√≠e con crueldad final viendo como la resistencia enana se desmorona bajo su superioridad.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round2": "‚öîÔ∏è **El {titulo_enano}** contraataca con la resistencia final de su raza pero la perfecci√≥n del **{armadura_elfo}** bendecida por Eru Il√∫vatar hace que el ataque mortal sea desviado por la gracia divina.\n\n‚öîÔ∏è **Enano:** '¬°Ni moribundo me rendir√© ante orejudos!'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'La resistencia enana es admirable pero in√∫til ante la perfecci√≥n √©lfica.'\n\n‚ö° El enano descarga sus √∫ltimas fuerzas buscando llevar al elfo con √©l. El elfo mantiene su superioridad final confiando en su bendici√≥n divina.\n\nü©∏ Los golpes enanos logran impactar pero la perfecci√≥n √©lfica absorbe el da√±o mortal. El elfo permanece intacto.\n\n‚öîÔ∏è El enano escupe sangre final mientras siente como su resistencia legendaria llega a su l√≠mite.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un lamento final. **{mascota_elfo}** entra al campo de batalla y ataca con gracia mortal al enano moribundo que lucha hasta el final. El **{mascota_enano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, gracia final contra resistencia legendaria en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del elfo y el enano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_elfo}/{hp_total_elfo} vs {hp_restante_enano}/{hp_total_enano}**",
        
        "round4": "üßù‚Äç‚ôÇÔ∏è **¬°ROUND FINAL!** El enano decide poner fin a esta lucha.\n\n‚öîÔ∏è **Enano:** '¬°Por todos los enanos ca√≠dos! ¬°Si muero, te llevo conmigo al infierno!'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Los inmortales presenciaremos la extinci√≥n final de tu raza inferior.'\n\n‚ö° Frotando su **{accesorio_enano}** se lanza contra el elfo con resistencia final. El elfo lo mira con superioridad absoluta y lanza su ataque mientras su **{accesorio_elfo}** brilla por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El enano abraza al elfo y explotan juntos en una bola de fuego mientras el elfo le atraviesa el alma con poder divino.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_enano}/{hp_total_enano} vs {hp_final_elfo}/{hp_total_elfo}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    }
],


# ‚ô£‚úÖ ORCO VS ENANO - 15 NARRACIONES
"orco_vs_enano": [
    # NARRACION 1 - ORCO COMIENZA
    {
        "round1": "üíÄ **El guerrero {titulo_orco}** entra al campo de batalla con la brutalidad salvaje de Mordor, empu√±ando su **{arma_orco}** con la sed de sangre de las huestes oscuras.\n\nüíÄ **Orco:** 'Enano podrido, har√© collares con tus dientes mientras devoro tu carne.'\n‚öîÔ∏è **Enano:** 'Escoria de Mordor, mi hacha probar√° tu sangre negra como en los d√≠as de Moria.'\n\n‚ö° El orco lanza un tajo salvaje directo al cuello enano. El enano bloquea con resistencia f√©rrea y contraataca con furia ancestral.\n\nü©∏ El **{titulo_orco}** logr√≥ abrir una herida profunda en el hombro enano. Sangre roja brota mientras el enano ruge con dolor y odio hacia la escoria √≥rquica.\n\nüíÄ El orco r√≠e salvajemente viendo como la sangre enana mancha sus garras mientras planea su pr√≥ximo ataque brutal.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round2": "‚öîÔ∏è **El {titulo_enano}** contraataca con la venganza de Khazad-d√ªm pero la ferocidad del **{armadura_orco}** forjada en los fuegos de Mordor hace que el ataque vengativo sea parcialmente absorbido por la maldad ancestral.\n\n‚öîÔ∏è **Enano:** '¬°Maldita armadura de demonio!'\nüíÄ **Orco:** 'El hierro de Mordor ha bebido sangre de mil razas, enano pat√©tico.'\n\n‚ö° El enano descarga hachazos brutales buscando partir al orco por la mitad. El orco mantiene su ferocidad confiando en su armadura maldita.\n\nü©∏ El hacha enana logra impactar la armadura √≥rquica pero la maldad absorbe gran parte del golpe. El orco apenas retrocede gru√±endo.\n\n‚öîÔ∏è El enano escupe con desprecio mientras siente como su fuerza choca contra la corrupci√≥n de Mordor.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un rugido bestial. **{mascota_orco}** entra al campo de batalla y ataca salvajemente al enano que se defiende con valor. El **{mascota_enano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, salvajismo de Mordor contra fiereza de las monta√±as en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del orco y el enano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_orco}/{hp_total_orco} vs {hp_restante_enano}/{hp_total_enano}**",
        
        "round4": "üíÄ **¬°ROUND FINAL!** El enano decide poner fin a esta lucha.\n\n‚öîÔ∏è **Enano:** '¬°Por los ca√≠dos en Moria! ¬°Tu sangre negra pagar√° por nuestros hermanos masacrados!'\nüíÄ **Orco:** 'Los orcos devoramos enanos como aperitivo, barbudo asqueroso.'\n\n‚ö° Frotando su **{accesorio_enano}** se lanza contra el orco con furia vengativa. El orco lo mira con hambre s√°dica y lanza su ataque mientras su **{accesorio_orco}** late por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El enano parte el cr√°neo √≥rquico con fuerza descomunal mientras el orco arranca el coraz√≥n enano con sus garras.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_enano}/{hp_total_enano} vs {hp_final_orco}/{hp_total_orco}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },

        # NARRACION 2 - ENANO COMIENZA
    {
        "round1": "‚öîÔ∏è **El guerrero {titulo_enano}** entra al campo de batalla con el honor de Forjaz, empu√±ando su **{arma_enano}** con la resistencia de los Martillo Salvaje.\n\n‚öîÔ∏è **Enano:** 'Verde asqueroso de la Horda, mi martillo probar√° tu sangre como en las guerras de Alterac.'\nüíÄ **Orco:** 'Enano pat√©tico de la Alianza, tus huesos adornar√°n mi choza en Orgrimmar.'\n\n‚ö° El enano lanza un martillazo devastador directo al pecho √≥rquico. El orco esquiva con agilidad salvaje y contraataca con brutalidad tribal.\n\nü©∏ El **{titulo_enano}** logr√≥ fracturar las costillas del orco con un golpe brutal. Sangre verde brota mientras el orco ruge con dolor y sed de venganza.\n\n‚öîÔ∏è El enano gru√±e con satisfacci√≥n viendo como la sangre verde mancha el suelo sagrado de la Alianza.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round2": "üíÄ **El {titulo_orco}** contraataca con la furia de Thrall pero la dureza del **{armadura_enano}** forjada en las llamas de Forjaz resiste el salvajismo √≥rquico haciendo que el ataque tribal sea menos efectivo.\n\nüíÄ **Orco:** '¬°Maldita armadura de rata de t√∫nel!'\n‚öîÔ∏è **Enano:** 'El acero de Forjaz ha resistido dragones, no tememos a verdes de la Horda.'\n\n‚ö° El orco descarga golpes salvajes buscando romper la defensa enana. El enano mantiene su posici√≥n confiando en la forja de sus ancestros.\n\nü©∏ Las armas √≥rquicas logran impactar pero el temple enano rechaza la brutalidad tribal. El enano apenas se inmuta.\n\nüíÄ El orco retrocede frustrado mientras contempla como su fuerza es in√∫til contra la resistencia enana.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un rugido de las monta√±as. **{mascota_enano}** entra al campo de batalla y ataca ferozmente al orco que se defiende salvajemente. El **{mascota_orco}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, fiereza de Dun Morogh contra salvajismo de Durotar en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del enano y el orco contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_enano}/{hp_total_enano} vs {hp_restante_orco}/{hp_total_orco}**",
        
        "round4": "‚öîÔ∏è **¬°ROUND FINAL!** El orco decide poner fin a esta lucha.\n\nüíÄ **Orco:** '¬°Por la gloria de la Horda! ¬°Tu cabeza decorar√° las picas de Orgrimmar!'\n‚öîÔ∏è **Enano:** 'Los hijos de Khaz no caer√°n ante la escoria verde de Draenor.'\n\n‚ö° Frotando su **{accesorio_orco}** se lanza contra el enano brutalmente. El enano lo mira con desprecio y lanza su ataque mientras su **{accesorio_enano}** vibra por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El orco destroza el cr√°neo enano con fuerza tribal mientras el enano atraviesa el coraz√≥n √≥rquico con precisi√≥n letal.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_orco}/{hp_total_orco} vs {hp_final_enano}/{hp_total_enano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },

        # NARRACION 3 - ORCO COMIENZA
    {
        "round1": "üíÄ **El guerrero {titulo_orco}** entra al campo de batalla con la brutalidad de los clanes de Draenor, empu√±ando su **{arma_orco}** con la sed de sangre de la Horda Verdadera.\n\nüíÄ **Orco:** 'Enano miserable de Forjaz, har√© sopa con tus huesos para alimentar a mis cachorros.'\n‚öîÔ∏è **Enano:** 'Verde inmundo, tu sangre regar√° las monta√±as como en las Guerras del Primer Portal Oscuro.'\n\n‚ö° El orco lanza un hachazo salvaje directo a la barba sagrada enana. El enano bloquea horrorizado y contraataca con furia ancestral.\n\nü©∏ El **{titulo_orco}** logr√≥ cortar mechones de la barba enana dej√°ndola desigual. Sangre roja brota mientras el enano llora de humillaci√≥n y rabia.\n\nüíÄ El orco r√≠e salvajemente viendo como pisotea los pelos sagrados de barba enana mientras planea m√°s humillaciones.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round2": "‚öîÔ∏è **El {titulo_enano}** contraataca con la furia de Magni Barbabronce pero la ferocidad del **{armadura_orco}** bendecida por los esp√≠ritus de Draenor hace que el ataque vengativo sea parcialmente desviado por la brutalidad ancestral.\n\n‚öîÔ∏è **Enano:** '¬°Mi barba sagrada! ¬°Pagar√°s con tu vida verde esta profanaci√≥n!'\nüíÄ **Orco:** 'Tu barba asquerosa mejora cortada, enano cobarde de t√∫neles.'\n\n‚ö° El enano descarga martillazos enloquecidos buscando vengar su barba mutilada. El orco mantiene su brutalidad confiando en su armadura tribal.\n\nü©∏ Los golpes enanos logran impactar pero la ferocidad √≥rquica absorbe gran parte del da√±o. El orco gru√±e con satisfacci√≥n.\n\n‚öîÔ∏è El enano solloza de rabia mientras siente como su venganza es insuficiente contra la brutalidad verde.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un aullido de lobo. **{mascota_orco}** entra al campo de batalla y ataca salvajemente al enano humillado que lucha con desesperaci√≥n. El **{mascota_enano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, salvajismo de las Cumbres Canto de Guerra contra orgullo herido de Dun Morogh en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del orco y el enano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_orco}/{hp_total_orco} vs {hp_restante_enano}/{hp_total_enano}**",
        
        "round4": "üíÄ **¬°ROUND FINAL!** El enano decide poner fin a esta lucha.\n\n‚öîÔ∏è **Enano:** '¬°Por mi barba sagrada! ¬°Tu sangre verde lavar√° esta humillaci√≥n!'\nüíÄ **Orco:** 'Los orcos usamos barbas enanas como trapos para limpiar nuestras armas.'\n\n‚ö° Frotando su **{accesorio_enano}** se lanza contra el orco con venganza sagrada. El orco lo mira con burla cruel y lanza su ataque mientras su **{accesorio_orco}** late por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El enano aplasta la cabeza √≥rquica con un martillo mientras el orco arranca la garganta enana con sus colmillos.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_enano}/{hp_total_enano} vs {hp_final_orco}/{hp_total_orco}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 4 - ENANO COMIENZA
    {
        "round1": "‚öîÔ∏è **El guerrero {titulo_enano}** entra al campo de batalla con el orgullo de los Tres Martillos, empu√±ando su **{arma_enano}** con la resistencia inquebrantable de Khaz Modan.\n\n‚öîÔ∏è **Enano:** 'Verde asqueroso de Kalimdor, tu sangre ser√° el combustible para las forjas de Forjaz.'\nüíÄ **Orco:** 'Enano raqu√≠tico, har√© tambores con tu piel para celebrar tu muerte.'\n\n‚ö° El enano lanza un pu√±etazo brutal directo a los colmillos √≥rquicos. El orco retrocede escupiendo sangre y contraataca con furia tribal.\n\nü©∏ El **{titulo_enano}** logr√≥ romper ambos colmillos del orco dej√°ndolo desfigurado. Sangre verde brota mientras el orco ruge horrorizado por su aspecto arruinado.\n\n‚öîÔ∏è El enano escupe en la cara del orco mientras alza los colmillos rotos como trofeos de guerra.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round2": "üíÄ **El {titulo_orco}** contraataca con la rabia de Grom Grito Infernal pero la solidez del **{armadura_enano}** templada en los volcanes de Forjaz resiste la furia √≥rquica haciendo que el ataque vengativo sea in√∫til.\n\nüíÄ **Orco:** '¬°Mis colmillos! ¬°Maldita armadura de gusano subterr√°neo!'\n‚öîÔ∏è **Enano:** 'El acero enano ha resistido a Ragnaros, no tememos a verdes desdentados.'\n\n‚ö° El orco descarga ataques desesperados buscando vengar sus colmillos perdidos. El enano permanece inm√≥vil burl√°ndose de la debilidad √≥rquica.\n\nü©∏ Las armas √≥rquicas rebotan in√∫tilmente contra la resistencia enana. El enano ni siquiera se molesta en defenderse.\n\nüíÄ El orco babea sangre verde mientras contempla como su venganza es humillada por la superioridad enana.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un rugido desde las minas. **{mascota_enano}** entra al campo de batalla y ataca burlonamente al orco desdentado que se defiende con desesperaci√≥n. El **{mascota_orco}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, orgullo de Forjaz contra humillaci√≥n de Orgrimmar en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del enano y el orco contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_enano}/{hp_total_enano} vs {hp_restante_orco}/{hp_total_orco}**",
        
        "round4": "‚öîÔ∏è **¬°ROUND FINAL!** El orco decide poner fin a esta lucha.\n\nüíÄ **Orco:** '¬°Por mis colmillos perdidos! ¬°Te har√© pagar por esta humillaci√≥n tribal!'\n‚öîÔ∏è **Enano:** 'Un orco sin colmillos es tan in√∫til como un lobo sin dientes.'\n\n‚ö° Frotando su **{accesorio_orco}** se lanza contra el enano con humillaci√≥n vengativa. El enano lo mira con burla infinita y lanza su ataque mientras su **{accesorio_enano}** vibra por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El orco perfora el abdomen enano con toda su humillaci√≥n mientras el enano le aplasta el cr√°neo con fuerza descomunal.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_orco}/{hp_total_orco} vs {hp_final_enano}/{hp_total_enano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 5 - ORCO COMIENZA
    {
        "round1": "üíÄ **El guerrero {titulo_orco}** entra al campo de batalla con la crueldad de los Pu√±o de Roca, empu√±ando su **{arma_orco}** con la brutalidad de los se√±ores de la guerra.\n\nüíÄ **Orco:** 'Enano cobarde, arrancar√© tu barba pelo por pelo antes de devorarte vivo.'\n‚öîÔ∏è **Enano:** 'Bestia verde, tu sangre manchar√° el honor de mis ancestros por √∫ltima vez.'\n\n‚ö° El orco lanza una garra cruel directo a los ojos enanos. El enano esquiva por poco y contraataca con furia defensiva.\n\nü©∏ El **{titulo_orco}** logr√≥ cegar el ojo izquierdo del enano dej√°ndolo tuerto. Sangre roja brota mientras el enano grita de dolor y humillaci√≥n.\n\nüíÄ El orco lame la sangre de sus garras mientras se regocija viendo al enano sufrir y sangrar.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round2": "‚öîÔ∏è **El {titulo_enano}** contraataca con la venganza de los Hierro Negro pero la brutalidad del **{armadura_orco}** empapada en sangre de mil batallas hace que el ataque ciego sea desviado por la crueldad ancestral.\n\n‚öîÔ∏è **Enano:** '¬°Mi ojo! ¬°Maldita armadura de carnicero!'\nüíÄ **Orco:** 'Un enano tuerto pelea como un topo ciego, pat√©tico.'\n\n‚ö° El enano descarga golpes a ciegas buscando vengar su ojo perdido. El orco baila alrededor del enano ciego ri√©ndose de su desgracia.\n\nü©∏ Los golpes enanos fallan repetidamente mientras el orco se burla. El enano tropieza con su propia sangre.\n\n‚öîÔ∏è El enano llora l√°grimas de sangre mientras siente como es humillado por la crueldad √≥rquica.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un gru√±ido cruel. **{mascota_orco}** entra al campo de batalla y ataca salvajemente al enano ciego que se defiende a tientas. El **{mascota_enano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, crueldad burlona contra ceguera desesperada en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del orco y el enano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_orco}/{hp_total_orco} vs {hp_restante_enano}/{hp_total_enano}**",
        
        "round4": "üíÄ **¬°ROUND FINAL!** El enano decide poner fin a esta lucha.\n\n‚öîÔ∏è **Enano:** '¬°Por mi ojo perdido! ¬°Si muero, te llevo conmigo al infierno!'\nüíÄ **Orco:** 'Un enano ciego es carne f√°cil para los carro√±eros de Durotar.'\n\n‚ö° Frotando su **{accesorio_enano}** se lanza contra el orco con furia ciega. El orco lo mira con crueldad s√°dica y lanza su ataque mientras su **{accesorio_orco}** resplandece por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El enano agarra al orco y explotan juntos en llamas mientras el orco le arranca el coraz√≥n con sus garras.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_enano}/{hp_total_enano} vs {hp_final_orco}/{hp_total_orco}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },


        # NARRACION 6 - ENANO COMIENZA
    {
        "round1": "‚öîÔ∏è **El guerrero {titulo_enano}** entra al campo de batalla con la burla eterna de Forjaz, empu√±ando su **{arma_enano}** con el valor inquebrantable de las monta√±as de Khaz Modan.\n\n‚öîÔ∏è **Enano:** 'Verde pat√©tico, ¬øeso es todo lo que pueden hacer los cachorritos de la Horda?'\nüíÄ **Orco:** 'Enano arrogante, har√© que tu burla se convierta en s√∫plica.'\n\n‚ö° El enano lanza un martillazo burl√≥n directo a las rodillas √≥rquicas. El orco salta furioso y contraataca con rabia tribal.\n\nü©∏ El **{titulo_enano}** logr√≥ fracturar la r√≥tula izquierda del orco dej√°ndolo cojeando. Sangre verde brota mientras el orco grita de dolor y humillaci√≥n.\n\n‚öîÔ∏è El enano r√≠e a carcajadas viendo como el orco cojea como un lobo herido mientras planea m√°s burlas crueles.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round2": "üíÄ **El {titulo_orco}** contraataca cojeando con la furia de Garrosh pero la resistencia del **{armadura_enano}** forjada con el valor de las monta√±as hace que el ataque vengativo rebote como piedras contra granito.\n\nüíÄ **Orco:** '¬°Maldita armadura de tortuga!'\n‚öîÔ∏è **Enano:** '¬°Ja! Los golpes √≥rquicos son como caricias de beb√© contra el acero de monta√±a.'\n\n‚ö° El orco descarga golpes desesperados buscando romper la defensa burlona. El enano se queda inm√≥vil ri√©ndose del pat√©tico esfuerzo.\n\nü©∏ Las armas √≥rquicas rebotan in√∫tilmente contra la resistencia enana. El enano ni siquiera se molesta en defenderse.\n\n‚öîÔ∏è El enano se burla cruelmente: '¬øYa te cansaste, verdecito? ¬°Mis nietos golpean m√°s fuerte!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha una carcajada monta√±esa. **{mascota_enano}** entra al campo de batalla y ataca burlonamente al orco cojeante que se defiende con desesperaci√≥n. El **{mascota_orco}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, burla monta√±esa contra humillaci√≥n tribal en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del enano y el orco contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_enano}/{hp_total_enano} vs {hp_restante_orco}/{hp_total_orco}**",
        
        "round4": "‚öîÔ∏è **¬°ROUND FINAL!** El orco decide poner fin a esta lucha.\n\nüíÄ **Orco:** '¬°Por mi rodilla destrozada! ¬°Acabar√© con tus burlas para siempre!'\n‚öîÔ∏è **Enano:** '¬°Ven aqu√≠, verdecito cojo! ¬°Te ense√±ar√© por qu√© los enanos somos superiores!'\n\n‚ö° Frotando su **{accesorio_orco}** se lanza cojeando contra el enano con humillaci√≥n vengativa. El enano lo mira con burla infinita y lanza su ataque mientras su **{accesorio_enano}** late por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El orco clava su hacha en el pecho enano con toda su humillaci√≥n mientras el enano le destroza la cabeza con un martillo.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_orco}/{hp_total_orco} vs {hp_final_enano}/{hp_total_enano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 7 - ORCO COMIENZA
    {
        "round1": "üíÄ **El guerrero {titulo_orco}** entra al campo de batalla con la sed de sangre de los Faucedragon, empu√±ando su **{arma_orco}** con la crueldad de los clanes de guerra.\n\nüíÄ **Orco:** 'Enano presumido, har√© que tu risa se convierta en llanto de dolor.'\n‚öîÔ∏è **Enano:** '¬°Ja! ¬øOtro verdecito que cree que puede con la resistencia enana?'\n\n‚ö° El orco lanza un corte salvaje directo al rostro burl√≥n enano. El enano apenas se mueve y contraataca con arrogancia monta√±esa.\n\nü©∏ El **{titulo_orco}** logr√≥ abrir una herida en la mejilla enana pero superficial. Sangre roja brota mientras el enano sigue ri√©ndose.\n\nüíÄ El orco gru√±e frustrado viendo como el enano trata su ataque como un juego infantil.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round2": "‚öîÔ∏è **El {titulo_enano}** contraataca con la burla de los Martillo de Hierro pero la ferocidad del **{armadura_orco}** empapada en sangre de batalla hace que el ataque burl√≥n sea parcialmente absorbido por la rabia acumulada.\n\n‚öîÔ∏è **Enano:** '¬°Eso fue apenas un rasgu√±o! ¬°Mi abuela pega m√°s fuerte que t√∫!'\nüíÄ **Orco:** 'Tu burla alimenta mi sed de sangre, enano arrogante.'\n\n‚ö° El enano descarga golpes burlones buscando humillar al orco. El orco mantiene su ferocidad absorbiendo los golpes con determinaci√≥n tribal.\n\nü©∏ Los golpes enanos logran impactar pero la rabia √≥rquica los absorbe. El orco gru√±e con m√°s determinaci√≥n.\n\n‚öîÔ∏è El enano contin√∫a burl√°ndose: '¬°Vamos, verdecito! ¬°Seguro puedes hacer algo mejor!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un rugido de guerra. **{mascota_orco}** entra al campo de batalla y ataca furiosamente al enano burl√≥n que se defiende ri√©ndose. El **{mascota_enano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, furia acumulada contra burla monta√±esa en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del orco y el enano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_orco}/{hp_total_orco} vs {hp_restante_enano}/{hp_total_enano}**",
        
        "round4": "üíÄ **¬°ROUND FINAL!** El enano decide poner fin a esta lucha.\n\n‚öîÔ∏è **Enano:** '¬°Basta de juegos! ¬°Te ense√±ar√© el verdadero poder de las monta√±as!'\nüíÄ **Orco:** 'Finalmente el enano muestra su verdadera fuerza, pero ser√° insuficiente.'\n\n‚ö° Frotando su **{accesorio_enano}** se lanza contra el orco con valor monta√±√©s. El orco lo mira con respeto salvaje y lanza su ataque mientras su **{accesorio_orco}** vibra por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El enano aplasta las costillas √≥rquicas con fuerza de monta√±a mientras el orco le arranca el brazo con sus colmillos.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_enano}/{hp_total_enano} vs {hp_final_orco}/{hp_total_orco}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 8 - ENANO COMIENZA
    {
        "round1": "‚öîÔ∏è **El guerrero {titulo_enano}** entra al campo de batalla con la resistencia legendaria de Dun Morogh, empu√±ando su **{arma_enano}** con el valor que construy√≥ imperios.\n\n‚öîÔ∏è **Enano:** 'Verde in√∫til, ven aqu√≠ y aprende por qu√© los enanos dominamos Azeroth.'\nüíÄ **Orco:** 'Enano soberbio, tu arrogancia ser√° tu perdici√≥n.'\n\n‚ö° El enano lanza un golpe devastador directo al est√≥mago √≥rquico. El orco se dobla de dolor y contraataca con desesperaci√≥n.\n\nü©∏ El **{titulo_enano}** logr√≥ hundir su pu√±o en el abdomen √≥rquico. Sangre verde brota mientras el orco vomita sangre y bilis.\n\n‚öîÔ∏è El enano se limpia la sangre verde de sus nudillos mientras r√≠e: '¬°Qu√© d√©biles son estos verdes!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round2": "üíÄ **El {titulo_orco}** contraataca doblado de dolor con la rabia de Thrall pero la solidez del **{armadura_enano}** templada con honor monta√±√©s hace que el ataque doloroso rebote como lluvia contra roca.\n\nüíÄ **Orco:** '¬°Maldita armadura de roca!'\n‚öîÔ∏è **Enano:** 'Los golpes √≥rquicos son como el viento contra la monta√±a, ¬°in√∫tiles!'\n\n‚ö° El orco descarga golpes d√©biles buscando hacer algo de da√±o. El enano se queda inm√≥vil burl√°ndose del esfuerzo pat√©tico.\n\nü©∏ Las armas √≥rquicas apenas rasgu√±an la superficie del acero enano. El enano bosteza de aburrimiento.\n\n‚öîÔ∏è El enano se burla: 'Mi armadura ha recibido peores golpes de ni√±os enanos en entrenamiento.'\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha una risa monta√±esa. **{mascota_enano}** entra al campo de batalla y ataca despreciativamente al orco herido que se defiende d√©bilmente. El **{mascota_orco}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, desprecio monta√±√©s contra debilidad herida en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del enano y el orco contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_enano}/{hp_total_enano} vs {hp_restante_orco}/{hp_total_orco}**",
        
        "round4": "‚öîÔ∏è **¬°ROUND FINAL!** El orco decide poner fin a esta lucha.\n\nüíÄ **Orco:** '¬°Por el honor de la Horda! ¬°No morir√© humillado por un enano!'\n‚öîÔ∏è **Enano:** '¬°Perfecto! ¬°Finalmente algo de diversi√≥n real!'\n\n‚ö° Frotando su **{accesorio_orco}** se lanza contra el enano con honor herido. El enano lo mira con diversi√≥n y lanza su ataque mientras su **{accesorio_enano}** resplandece por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El orco perfora el coraz√≥n enano con toda su dignidad mientras el enano le destroza el cr√°neo con un mazo.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_orco}/{hp_total_orco} vs {hp_final_enano}/{hp_total_enano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },


        # NARRACION 9 - ORCO COMIENZA
    {
        "round1": "üíÄ **El guerrero {titulo_orco}** entra al campo de batalla con la brutalidad primitiva de las tribus salvajes, empu√±ando su **{arma_orco}** con la sed de sangre de los b√°rbaros.\n\nüíÄ **Orco:** 'Enano inmundo, arrancar√© tu barba y la usar√© para limpiar mi trasero.'\n‚öîÔ∏è **Enano:** 'Bestia verde, tu sangre regar√° la tierra como esti√©rcol podrido.'\n\n‚ö° El orco lanza un hachazo salvaje directo a la garganta enana. El enano bloquea brutalmente y contraataca con odio visceral.\n\nü©∏ El **{titulo_orco}** logr√≥ cortar profundamente la garganta enana casi decapit√°ndolo. Sangre roja brota a torrentes mientras el enano se ahoga en su propia sangre.\n\nüíÄ El orco lame la sangre de su arma mientras se deleita viendo al enano morir lentamente.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round2": "‚öîÔ∏è **El {titulo_enano}** contraataca ahog√°ndose en sangre con la resistencia de las rocas eternas pero la crueldad del **{armadura_orco}** empapada en sangre de v√≠ctimas hace que el ataque desesperado sea absorbido por la maldad pura.\n\n‚öîÔ∏è **Enano:** '*gorgoteo de sangre* ¬°Maldita... armadura... de carnicero!'\nüíÄ **Orco:** 'Tu sangre sabe a victoria, enano moribundo.'\n\n‚ö° El enano descarga golpes desesperados mientras se desangra. El orco mantiene su crueldad saboreando la agon√≠a enana.\n\nü©∏ Los golpes enanos logran impactar pero la armadura √≥rquica absorbe todo mientras el enano se debilita por la p√©rdida de sangre.\n\n‚öîÔ∏è El enano cae de rodillas escupiendo sangre mientras el orco se burla de su agon√≠a.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un gru√±ido s√°dico. **{mascota_orco}** entra al campo de batalla y ataca cruelmente al enano moribundo que apenas puede defenderse. El **{mascota_enano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, crueldad s√°dica contra agon√≠a desesperada en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del orco y el enano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_orco}/{hp_total_orco} vs {hp_restante_enano}/{hp_total_enano}**",
        
        "round4": "üíÄ **¬°ROUND FINAL!** El enano decide poner fin a esta lucha.\n\n‚öîÔ∏è **Enano:** '*escupiendo sangre* ¬°Si muero... te llevo... conmigo... bestia!'\nüíÄ **Orco:** 'Muere como el gusano que eres, enano desangrado.'\n\n‚ö° Frotando su **{accesorio_enano}** se lanza contra el orco con √∫ltimas fuerzas. El orco lo mira con crueldad final y lanza su ataque mientras su **{accesorio_orco}** late por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El enano agarra al orco y explotan juntos en sangre mientras el orco le arranca la cabeza con sus manos desnudas.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_enano}/{hp_total_enano} vs {hp_final_orco}/{hp_total_orco}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 10 - ENANO COMIENZA
    {
        "round1": "‚öîÔ∏è **El guerrero {titulo_enano}** entra al campo de batalla con la terquedad de las monta√±as eternas, empu√±ando su **{arma_enano}** con el desprecio hacia las bestias verdes.\n\n‚öîÔ∏è **Enano:** 'Verde asqueroso, har√© que tu sangre manche mis botas como barro.'\nüíÄ **Orco:** 'Enano inmundo, arrancar√© tus tripas y me las comer√© calientes.'\n\n‚ö° El enano lanza un martillazo cruel directo a la entrepierna √≥rquica. El orco se dobla gritando y contraataca con furia castrada.\n\nü©∏ El **{titulo_enano}** logr√≥ aplastar los genitales √≥rquicos dej√°ndolo est√©ril. Sangre verde brota mientras el orco grita como una bestia castrada.\n\n‚öîÔ∏è El enano escupe en la cara del orco mientras r√≠e: '¬°Ahora eres una hembra verde, bestia!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round2": "üíÄ **El {titulo_orco}** contraataca castrado con la rabia de los mutilados pero la resistencia del **{armadura_enano}** templada en odio ancestral hace que el ataque eunuco sea completamente in√∫til.\n\nüíÄ **Orco:** '¬°Mis... mis partes! ¬°Maldito enano castrador!'\n‚öîÔ∏è **Enano:** 'Los eunucos no pueden luchar como machos, verde sin huevos.'\n\n‚ö° El orco descarga golpes desesperados buscando vengar su masculinidad perdida. El enano se mantiene inm√≥vil burl√°ndose del eunuco.\n\nü©∏ Las armas √≥rquicas rebotan pat√©ticamente contra la resistencia enana. El enano ni siquiera se molesta en defenderse.\n\n‚öîÔ∏è El enano se burla cruelmente: '¬øC√≥mo va a luchar un orco sin pelotas? ¬°Eres una hembra verde!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha una carcajada cruel. **{mascota_enano}** entra al campo de batalla y ataca burlonamente al orco castrado que se defiende sin dignidad. El **{mascota_orco}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, burla cruel contra humillaci√≥n castrada en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del enano y el orco contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_enano}/{hp_total_enano} vs {hp_restante_orco}/{hp_total_orco}**",
        
        "round4": "‚öîÔ∏è **¬°ROUND FINAL!** El orco decide poner fin a esta lucha.\n\nüíÄ **Orco:** '¬°Por mi masculinidad perdida! ¬°Te har√© pagar por esta mutilaci√≥n!'\n‚öîÔ∏è **Enano:** 'Un eunuco verde es tan in√∫til como un toro sin cuernos.'\n\n‚ö° Frotando su **{accesorio_orco}** se lanza contra el enano con humillaci√≥n vengativa. El enano lo mira con burla infinita y lanza su ataque mientras su **{accesorio_enano}** vibra por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El orco estrangula al enano con toda su humillaci√≥n mientras el enano le aplasta el cr√°neo con sus pu√±os.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_orco}/{hp_total_orco} vs {hp_final_enano}/{hp_total_enano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 11 - ORCO COMIENZA
    {
        "round1": "üíÄ **El guerrero {titulo_orco}** entra al campo de batalla con la brutalidad de las bestias primitivas, empu√±ando su **{arma_orco}** con la sed de carne de los can√≠bales.\n\nüíÄ **Orco:** 'Enano sabroso, arrancar√© tu carne a mordiscos mientras a√∫n respires.'\n‚öîÔ∏è **Enano:** 'Bestia can√≠bal, tu sangre podrida alimentar√° a los gusanos.'\n\n‚ö° El orco lanza un mordisco savage directo al brazo enano. El enano retrocede horrorizado y contraataca con asco visceral.\n\nü©∏ El **{titulo_orco}** logr√≥ arrancar un pedazo de carne del brazo enano mastic√°ndolo. Sangre roja brota mientras el enano grita horrorizado por el canibalismo.\n\nüíÄ El orco mastica la carne enana mientras sonr√≠e con sangre en los dientes.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round2": "‚öîÔ∏è **El {titulo_enano}** contraataca horrorizado con la repugnancia de los civilizados pero la hambre del **{armadura_orco}** alimentada con carne humana hace que el ataque repugnado sea absorbido por el apetito salvaje.\n\n‚öîÔ∏è **Enano:** '¬°Bestia can√≠bal asquerosa! ¬°C√≥mo puedes comer carne cruda!'\nüíÄ **Orco:** 'La carne enana sabe a cerdo tierno, deliciosa.'\n\n‚ö° El enano descarga golpes repugnados buscando alejar al can√≠bal. El orco mantiene su hambre saboreando el miedo enano.\n\nü©∏ Los golpes enanos logran impactar pero la hambre √≥rquica los absorbe mientras planea el pr√≥ximo bocado.\n\n‚öîÔ∏è El enano retrocede nauseado mientras el orco se relame los labios con sangre enana.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un gru√±ido hambriento. **{mascota_orco}** entra al campo de batalla y ataca con hambre al enano aterrorizado que se defiende con p√°nico. El **{mascota_enano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, hambre can√≠bal contra terror civilizado en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del orco y el enano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_orco}/{hp_total_orco} vs {hp_restante_enano}/{hp_total_enano}**",
        
        "round4": "üíÄ **¬°ROUND FINAL!** El enano decide poner fin a esta lucha.\n\n‚öîÔ∏è **Enano:** '¬°Basta de canibalismo! ¬°Te enviar√© al infierno donde perteneces!'\nüíÄ **Orco:** 'Tu coraz√≥n ser√° mi postre final, enano tembloroso.'\n\n‚ö° Frotando su **{accesorio_enano}** se lanza contra el orco con repugnancia total. El orco lo mira con hambre final y lanza su ataque mientras su **{accesorio_orco}** resplandece por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El enano atraviesa el pecho √≥rquico con asco absoluto mientras el orco le arranca el coraz√≥n con los dientes.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_enano}/{hp_total_enano} vs {hp_final_orco}/{hp_total_orco}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },

        # NARRACION 12 - ENANO COMIENZA
    {
        "round1": "‚öîÔ∏è **El guerrero {titulo_enano}** entra al campo de batalla con la resistencia de hierro forjado, empu√±ando su **{arma_enano}** con el desprecio hacia las bestias inmundas.\n\n‚öîÔ∏è **Enano:** 'Verde apestoso, har√© que tu sangre se congele de terror.'\nüíÄ **Orco:** 'Enano pat√©tico, beber√© tu sangre como vino dulce.'\n\n‚ö° El enano lanza un pu√±etazo devastador directo a la mand√≠bula √≥rquica. El orco escupe dientes rotos y contraataca con rabia bestial.\n\nü©∏ El **{titulo_enano}** logr√≥ romper la mand√≠bula del orco dej√°ndolo babeando sangre. Sangre verde brota mientras el orco gime de dolor imposibilitado de hablar.\n\n‚öîÔ∏è El enano recoge los dientes rotos del suelo y se los mete en los bolsillos como trofeos de guerra.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round2": "üíÄ **El {titulo_orco}** contraataca babeando sangre con la furia de los mudos pero la solidez del **{armadura_enano}** forjada en honor y gloria hace que el ataque silencioso sea completamente in√∫til.\n\nüíÄ **Orco:** '*gemidos ininteligibles de dolor*'\n‚öîÔ∏è **Enano:** '¬°Ja! ¬°Un orco mudo es un orco mejorado! ¬°Por fin no escucho tus gru√±idos!'\n\n‚ö° El orco descarga golpes desesperados sin poder hablar ni gritar. El enano se mantiene firme burl√°ndose del silencio forzado.\n\nü©∏ Las armas √≥rquicas rebotan pat√©ticamente contra la resistencia enana. El enano ni siquiera se inmuta ante los golpes mudos.\n\n‚öîÔ∏è El enano se burla: '¬°Qu√© silencioso est√°s ahora, bestia! ¬°Me gusta m√°s as√≠!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha una carcajada burlona. **{mascota_enano}** entra al campo de batalla y ataca despreciativamente al orco mudo que se defiende en silencio. El **{mascota_orco}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, burla despreciativa contra silencio desesperado en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del enano y el orco contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_enano}/{hp_total_enano} vs {hp_restante_orco}/{hp_total_orco}**",
        
        "round4": "‚öîÔ∏è **¬°ROUND FINAL!** El orco decide poner fin a esta lucha.\n\nüíÄ **Orco:** '*gemidos furiosos e ininteligibles*'\n‚öîÔ∏è **Enano:** '¬°Perfecto! ¬°Un orco mudo es m√°s f√°cil de matar!'\n\n‚ö° Frotando su **{accesorio_orco}** se lanza contra el enano con furia silenciosa. El enano lo mira con burla final y lanza su ataque mientras su **{accesorio_enano}** late por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El orco clava su arma en el coraz√≥n enano sin poder gritar victoria mientras el enano le destroza el cr√°neo con un martillo.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_orco}/{hp_total_orco} vs {hp_final_enano}/{hp_total_enano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 13 - ORCO COMIENZA
    {
        "round1": "üíÄ **El guerrero {titulo_orco}** entra al campo de batalla con la crueldad primitiva de las bestias, empu√±ando su **{arma_orco}** con la sed de tortura de los salvajes.\n\nüíÄ **Orco:** 'Enano inmundo, te despellejar√© vivo y usar√© tu piel como manta.'\n‚öîÔ∏è **Enano:** 'Bestia asquerosa, tu cabeza decorar√° mi hacha como trofeo.'\n\n‚ö° El orco lanza un corte s√°dico directo a los tendones enanos. El enano tropieza herido y contraataca con furia vengativa.\n\nü©∏ El **{titulo_orco}** logr√≥ cortar los tendones del pie enano dej√°ndolo cojo. Sangre roja brota mientras el enano cojea como un animal herido.\n\nüíÄ El orco r√≠e salvajemente viendo como el enano cojea pat√©ticamente mientras planea m√°s mutilaciones.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round2": "‚öîÔ∏è **El {titulo_enano}** contraataca cojeando con la resistencia de los lisiados pero la crueldad del **{armadura_orco}** empapada en sufrimiento ajeno hace que el ataque cojo sea parcialmente absorbido por la maldad acumulada.\n\n‚öîÔ∏è **Enano:** '¬°Mis tendones! ¬°Maldita armadura de torturador!'\nüíÄ **Orco:** 'Un enano cojo lucha como un perro herido, pat√©tico.'\n\n‚ö° El enano descarga golpes cojeando buscando venganza por su mutilaci√≥n. El orco mantiene su crueldad saboreando la discapacidad enana.\n\nü©∏ Los golpes enanos logran impactar pero la crueldad √≥rquica los absorbe mientras disfruta del sufrimiento.\n\n‚öîÔ∏è El enano llora de frustraci√≥n mientras cojea in√∫tilmente tratando de alcanzar al orco burl√≥n.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha una risa cruel. **{mascota_orco}** entra al campo de batalla y ataca s√°dicamente al enano cojo que se defiende como puede. El **{mascota_enano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, crueldad s√°dica contra discapacidad forzada en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del orco y el enano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_orco}/{hp_total_orco} vs {hp_restante_enano}/{hp_total_enano}**",
        
        "round4": "üíÄ **¬°ROUND FINAL!** El enano decide poner fin a esta lucha.\n\n‚öîÔ∏è **Enano:** '¬°Por mis tendones cortados! ¬°Si muero, te arrastro al infierno conmigo!'\nüíÄ **Orco:** 'Muere cojeando como el perro lisiado que eres.'\n\n‚ö° Frotando su **{accesorio_enano}** se lanza cojeando contra el orco con venganza lisiada. El orco lo mira con crueldad final y lanza su ataque mientras su **{accesorio_orco}** vibra por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El enano agarra al orco y ambos caen juntos en un charco de sangre mientras el orco le arranca la espina dorsal.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_enano}/{hp_total_enano} vs {hp_final_orco}/{hp_total_orco}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 14 - ENANO COMIENZA
    {
        "round1": "‚öîÔ∏è **El guerrero {titulo_enano}** entra al campo de batalla con la terquedad de las rocas milenarias, empu√±ando su **{arma_enano}** con el orgullo inquebrantable de su raza.\n\n‚öîÔ∏è **Enano:** 'Verde maldito, tu sangre ser√° el precio por existir.'\nüíÄ **Orco:** 'Enano arrogante, arrancar√© tu barba con mis dientes.'\n\n‚ö° El enano lanza un hachazo brutal directo al brazo √≥rquico. El orco grita de dolor y contraataca con furia mutilada.\n\nü©∏ El **{titulo_enano}** logr√≥ cortar el brazo derecho del orco de ra√≠z. Sangre verde brota a torrentes mientras el orco grita horrorizado viendo su extremidad en el suelo.\n\n‚öîÔ∏è El enano patea el brazo cortado como una pelota mientras se burla del orco manco.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round2": "üíÄ **El {titulo_orco}** contraataca manco con la desesperaci√≥n de los mutilados pero la resistencia del **{armadura_enano}** templada en superioridad racial hace que el ataque manco sea completamente pat√©tico.\n\nüíÄ **Orco:** '¬°Mi brazo! ¬°Maldita armadura de demonio!'\n‚öîÔ∏è **Enano:** '¬°Un orco manco es tan √∫til como un √°rbol sin ramas!'\n\n‚ö° El orco descarga golpes d√©biles con su brazo restante. El enano se mantiene inm√≥vil ri√©ndose del esfuerzo pat√©tico del manco.\n\nü©∏ Los golpes √≥rquicos son tan d√©biles que ni siquiera rasgu√±an la armadura enana. El enano bosteza de aburrimiento.\n\n‚öîÔ∏è El enano se burla: '¬øEso es todo lo que puede hacer un orco manco? ¬°Mis hijos pegan m√°s fuerte!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha una risa despectiva. **{mascota_enano}** entra al campo de batalla y ataca burlonamente al orco manco que se defiende con un solo brazo. El **{mascota_orco}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, burla despectiva contra desesperaci√≥n manca en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del enano y el orco contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_enano}/{hp_total_enano} vs {hp_restante_orco}/{hp_total_orco}**",
        
        "round4": "‚öîÔ∏è **¬°ROUND FINAL!** El orco decide poner fin a esta lucha.\n\nüíÄ **Orco:** '¬°Por mi brazo perdido! ¬°No morir√© humillado por un enano!'\n‚öîÔ∏è **Enano:** 'Un orco manco es tan in√∫til como un soldado sin espada.'\n\n‚ö° Frotando su **{accesorio_orco}** se lanza contra el enano con humillaci√≥n vengativa. El enano lo mira con burla infinita y lanza su ataque mientras su **{accesorio_enano}** resplandece por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El orco clava su arma en el abdomen enano con su √∫nico brazo mientras el enano le aplasta la cabeza con fuerza descomunal.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_orco}/{hp_total_orco} vs {hp_final_enano}/{hp_total_enano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },

    # NARRACION 15 - ORCO COMIENZA (√öLTIMA)
    {
        "round1": "üíÄ **El guerrero {titulo_orco}** entra al campo de batalla con la brutalidad final de las bestias, empu√±ando su **{arma_orco}** con la sed de exterminio total.\n\nüíÄ **Orco:** 'Enano maldito, esta ser√° la √∫ltima vez que respires aire puro.'\n‚öîÔ∏è **Enano:** 'Verde asqueroso, tu muerte ser√° lenta y dolorosa.'\n\n‚ö° El orco lanza un ataque devastador directo al coraz√≥n enano. El enano bloquea con resistencia final y contraataca con furia terminal.\n\nü©∏ El **{titulo_orco}** logr√≥ atravesar el pecho enano tocando el coraz√≥n. Sangre roja brota a torrentes mientras el enano siente como la vida se escapa.\n\nüíÄ El orco sonr√≠e con crueldad final viendo como la resistencia enana se desmorona bajo su brutalidad suprema.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round2": "‚öîÔ∏è **El {titulo_enano}** contraataca moribundo con la resistencia final de su raza pero la brutalidad del **{armadura_orco}** empapada en sangre de mil enemigos hace que el ataque terminal sea absorbido por la maldad absoluta.\n\n‚öîÔ∏è **Enano:** '*escupiendo sangre* ¬°No... caer√©... ante... bestias!'\nüíÄ **Orco:** 'Tu resistencia alimenta mi placer, enano moribundo.'\n\n‚ö° El enano descarga sus √∫ltimas fuerzas buscando llevar al orco con √©l. El orco mantiene su brutalidad saboreando la agon√≠a final.\n\nü©∏ Los golpes enanos logran impactar pero la maldad √≥rquica los absorbe mientras disfruta de la muerte lenta.\n\n‚öîÔ∏è El enano cae de rodillas escupiendo sangre mientras el orco se deleita con su agon√≠a final.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un rugido final. **{mascota_orco}** entra al campo de batalla y ataca cruelmente al enano moribundo que apenas puede mantenerse en pie. El **{mascota_enano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, crueldad final contra resistencia moribunda en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del orco y el enano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_orco}/{hp_total_orco} vs {hp_restante_enano}/{hp_total_enano}**",
        
        "round4": "üíÄ **¬°ROUND FINAL!** El enano decide poner fin a esta lucha.\n\n‚öîÔ∏è **Enano:** '¬°Si muero... te llevo... al infierno... conmigo!'\nüíÄ **Orco:** 'Muere como el gusano que siempre fuiste, enano pat√©tico.'\n\n‚ö° Frotando su **{accesorio_enano}** se lanza contra el orco con √∫ltimas fuerzas. El orco lo mira con crueldad suprema y lanza su ataque mientras su **{accesorio_orco}** late por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El enano abraza al orco y explotan juntos en una bola de fuego y sangre mientras el orco le arranca el alma con sus garras.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_enano}/{hp_total_enano} vs {hp_final_orco}/{hp_total_orco}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    }
],


    
# ‚ô£‚úÖ NO MUERTO VS HUMANO - 15 NARRACIONES
"no_muerto_vs_humano": [
    # NARRACION 1 - NO MUERTO COMIENZA
    {
        "round1": "üíÄ **El guerrero {titulo_no_muerto}** entra al campo de batalla con movimientos espectrales y silenciosos, empu√±ando su **{arma_no_muerto}** con la frialdad de la muerte misma.\n\nüíÄ **No Muerto:** '...'\n‚öîÔ∏è **Humano:** 'Abominaci√≥n maldita, tu existencia antinatural terminar√° por mi espada.'\n\n‚ö° El no muerto lanza garras necr√≥ticas directo al coraz√≥n humano. El humano bloquea valientemente y contraataca con determinaci√≥n mortal.\n\nü©∏ El **{titulo_no_muerto}** logr√≥ drenar parte de la energ√≠a vital humana. Sangre roja brota mientras el humano siente como su fuerza se desvanece lentamente.\n\nüíÄ El no muerto permanece en silencio mientras observa como la vida humana se marchita bajo su toque necr√≥tico.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",
        
        "round2": "‚öîÔ∏è **El {titulo_humano}** contraataca con el valor de los vivos pero la resistencia del **{armadura_no_muerto}** imbuida con energ√≠as necr√≥ticas hace que el ataque heroico sea parcialmente absorbido por las sombras.\n\n‚öîÔ∏è **Humano:** '¬°Maldita armadura de las tinieblas!'\nüíÄ **No Muerto:** '...'\n\n‚ö° El humano descarga golpes valientes buscando purificar al no muerto. El no muerto mantiene su posici√≥n espectral confiando en su protecci√≥n necrom√°ntica.\n\nü©∏ La espada humana logra impactar pero las energ√≠as necr√≥ticas desv√≠an gran parte del da√±o sagrado. El no muerto apenas se inmuta.\n\n‚öîÔ∏è El humano retrocede frustrado mientras siente como su valor choca contra la frialdad de la muerte.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un gemido espectral. **{mascota_no_muerto}** entra al campo de batalla y ataca necr√≥ticamente al humano que se defiende con coraje. El **{mascota_humano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, frialdad necr√≥tica contra valor viviente en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del no muerto y el humano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_no_muerto}/{hp_total_no_muerto} vs {hp_restante_humano}/{hp_total_humano}**",
        
        "round4": "üíÄ **¬°ROUND FINAL!** El humano decide poner fin a esta lucha.\n\n‚öîÔ∏è **Humano:** '¬°Por la luz de los vivos! ¬°Tu maldici√≥n terminar√° aqu√≠ y ahora!'\nüíÄ **No Muerto:** '...'\n\n‚ö° Frotando su **{accesorio_humano}** se lanza contra el no muerto con valor heroico. El no muerto lo mira fijamente y lanza su ataque mientras su **{accesorio_no_muerto}** late por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El humano atraviesa el coraz√≥n necr√≥tico con luz sagrada mientras el no muerto drena el alma humana con garras espectrales.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_humano}/{hp_total_humano} vs {hp_final_no_muerto}/{hp_total_no_muerto}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },

        # NARRACION 2 - HUMANO COMIENZA
    {
        "round1": "‚öîÔ∏è **El guerrero {titulo_humano}** entra al campo de batalla con el valor de Ventormenta, empu√±ando su **{arma_humano}** con la determinaci√≥n de los supervivientes de Lordaeron.\n\n‚öîÔ∏è **Humano:** 'Maldito Renegado, vengar√© a todos mis hermanos que masacraste en Lordaeron.'\nüíÄ **No Muerto:** '...'\n\n‚ö° El humano lanza un corte sagrado directo al cuello necr√≥tico. El no muerto esquiva espectralmente y contraataca con frialdad asesina.\n\nü©∏ El **{titulo_humano}** logr√≥ abrir una herida en el torso del no muerto. Icor negro brota mientras el no muerto permanece imperturbable ante el dolor.\n\n‚öîÔ∏è El humano grita con satisfacci√≥n viendo como el icor maldito mancha su espada sagrada.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round2": "üíÄ **El {titulo_no_muerto}** contraataca con la frialdad de la Plaga pero la fe del **{armadura_humano}** bendecida por la Luz Sagrada hace que el ataque necr√≥tico sea parcialmente purificado por la bendici√≥n divina.\n\nüíÄ **No Muerto:** '...'\n‚öîÔ∏è **Humano:** 'La Luz protege a los justos contra las abominaciones como t√∫.'\n\n‚ö° El no muerto descarga ataques necr√≥ticos buscando corromper al humano. El humano mantiene su fe confiando en la protecci√≥n de la Luz.\n\nü©∏ Las garras necr√≥ticas logran impactar pero la luz sagrada purifica parte del da√±o. El humano apenas retrocede.\n\nüíÄ El no muerto permanece silencioso mientras contempla como su corrupci√≥n es rechazada por la fe humana.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un ladrido valiente. **{mascota_humano}** entra al campo de batalla y ataca heroicamente al no muerto que se defiende espectralmente. El **{mascota_no_muerto}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, lealtad viviente contra frialdad espectral en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del humano y el no muerto contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_humano}/{hp_total_humano} vs {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round4": "‚öîÔ∏è **¬°ROUND FINAL!** El no muerto decide poner fin a esta lucha.\n\nüíÄ **No Muerto:** '...'\n‚öîÔ∏è **Humano:** 'Por todos los ca√≠dos en la Plaga, tu maldici√≥n terminar√°.'\n\n‚ö° Frotando su **{accesorio_no_muerto}** se lanza contra el humano silenciosamente. El humano lo mira con determinaci√≥n sagrada y lanza su ataque mientras su **{accesorio_humano}** resplandece por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El no muerto drena el alma humana con garras espectrales mientras el humano purifica el coraz√≥n necr√≥tico con luz sagrada.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_no_muerto}/{hp_total_no_muerto} vs {hp_final_humano}/{hp_total_humano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 3 - NO MUERTO COMIENZA
    {
        "round1": "üíÄ **El guerrero {titulo_no_muerto}** entra al campo de batalla con la experiencia de mil asesinatos, empu√±ando su **{arma_no_muerto}** empapada en sangre de humanos inocentes.\n\nüíÄ **No Muerto:** '...'\n‚öîÔ∏è **Humano:** 'Monstruo sin alma, cu√°ntos de mis hermanos has masacrado en Tirisfal.'\n\n‚ö° El no muerto lanza un ataque letal directo al coraz√≥n humano. El humano bloquea desesperadamente y contraataca con venganza desesperada.\n\nü©∏ El **{titulo_no_muerto}** logr√≥ perforar el pulm√≥n humano con precisi√≥n asesina. Sangre roja brota mientras el humano se ahoga en su propia sangre.\n\nüíÄ El no muerto permanece impasible mientras observa como el humano sufre la misma agon√≠a que sus v√≠ctimas anteriores.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",
        
        "round2": "‚öîÔ∏è **El {titulo_humano}** contraataca ahog√°ndose en sangre con la desesperaci√≥n de los vengadores pero la experiencia del **{armadura_no_muerto}** templada en mil asesinatos hace que el ataque vengativo sea f√°cilmente anticipado.\n\n‚öîÔ∏è **Humano:** '*tosiendo sangre* ¬°Por... por todos... los inocentes!'\nüíÄ **No Muerto:** '...'\n\n‚ö° El humano descarga golpes desesperados mientras se desangra. El no muerto mantiene su posici√≥n calculada anticipando cada movimiento.\n\nü©∏ Los golpes humanos logran impactar pero la experiencia asesina del no muerto minimiza el da√±o. El no muerto apenas se mueve.\n\n‚öîÔ∏è El humano cae de rodillas escupiendo sangre mientras el no muerto lo observa morir lentamente como tantos otros.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un gemido necr√≥tico. **{mascota_no_muerto}** entra al campo de batalla y ataca cruelmente al humano moribundo que se defiende con √∫ltimas fuerzas. El **{mascota_humano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, crueldad experimentada contra desesperaci√≥n moribunda en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del no muerto y el humano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_no_muerto}/{hp_total_no_muerto} vs {hp_restante_humano}/{hp_total_humano}**",
        
        "round4": "üíÄ **¬°ROUND FINAL!** El humano decide poner fin a esta lucha.\n\n‚öîÔ∏è **Humano:** '*escupiendo sangre* Si muero... al menos... un monstruo menos...'\nüíÄ **No Muerto:** '...'\n\n‚ö° Frotando su **{accesorio_humano}** se lanza contra el no muerto con √∫ltimas fuerzas. El no muerto lo mira fr√≠amente y lanza su ataque mientras su **{accesorio_no_muerto}** late por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El humano clava su espada en el coraz√≥n necr√≥tico con sus √∫ltimas fuerzas mientras el no muerto le arranca la garganta con precisi√≥n letal.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_humano}/{hp_total_humano} vs {hp_final_no_muerto}/{hp_total_no_muerto}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 4 - HUMANO COMIENZA
    {
        "round1": "‚öîÔ∏è **El guerrero {titulo_humano}** entra al campo de batalla con la sed de venganza de Ventormenta, empu√±ando su **{arma_humano}** con el odio hacia los Renegados asesinos.\n\n‚öîÔ∏è **Humano:** 'Renegado maldito, tu existencia es una burla a todos los que asesinaste.'\nüíÄ **No Muerto:** '...'\n\n‚ö° El humano lanza un corte vengativo directo a la cabeza del no muerto. El no muerto esquiva espectralmente y contraataca con frialdad asesina.\n\nü©∏ El **{titulo_humano}** logr√≥ cortar la oreja izquierda del no muerto de ra√≠z. Icor negro brota mientras el no muerto permanece indiferente ante la mutilaci√≥n.\n\n‚öîÔ∏è El humano grita con satisfacci√≥n viendo como la oreja podrida cae al suelo mientras planea m√°s mutilaciones.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round2": "üíÄ **El {titulo_no_muerto}** contraataca mutilado con la experiencia de Sylvanas pero la determinaci√≥n del **{armadura_humano}** forjada en el dolor de los supervivientes hace que el ataque experimentado sea resistido por la venganza pura.\n\nüíÄ **No Muerto:** '...'\n‚öîÔ∏è **Humano:** 'Tu silencio no esconder√° los gritos de tus v√≠ctimas.'\n\n‚ö° El no muerto descarga ataques calculados buscando silenciar al vengador. El humano mantiene su determinaci√≥n alimentada por el odio hacia los asesinos.\n\nü©∏ Las garras necr√≥ticas logran impactar pero la venganza humana absorbe el dolor. El humano apenas retrocede.\n\nüíÄ El no muerto permanece silencioso mientras contempla como su experiencia asesina choca contra la venganza implacable.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un ladrido vengativo. **{mascota_humano}** entra al campo de batalla y ataca furiosamente al no muerto mutilado que se defiende fr√≠amente. El **{mascota_no_muerto}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, furia vengativa contra frialdad asesina en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del humano y el no muerto contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_humano}/{hp_total_humano} vs {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round4": "‚öîÔ∏è **¬°ROUND FINAL!** El no muerto decide poner fin a esta lucha.\n\nüíÄ **No Muerto:** '...'\n‚öîÔ∏è **Humano:** 'Morir√© sabiendo que al menos te mutil√©, monstruo.'\n\n‚ö° Frotando su **{accesorio_no_muerto}** se lanza contra el humano silenciosamente. El humano lo mira con satisfacci√≥n vengativa y lanza su ataque mientras su **{accesorio_humano}** vibra por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El no muerto perfora el coraz√≥n humano con precisi√≥n letal mientras el humano le arranca el ojo derecho con sus u√±as.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_no_muerto}/{hp_total_no_muerto} vs {hp_final_humano}/{hp_total_humano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },


        # NARRACION 5 - NO MUERTO COMIENZA
    {
        "round1": "üíÄ **El guerrero {titulo_no_muerto}** entra al campo de batalla con la frialdad de los Renegados, empu√±ando su **{arma_no_muerto}** ba√±ada en sangre de familias enteras de Lordaeron.\n\nüíÄ **No Muerto:** '...'\n‚öîÔ∏è **Humano:** 'Asesino silencioso, cu√°ntos ni√±os has masacrado sin mostrar piedad.'\n\n‚ö° El no muerto lanza garras necr√≥ticas directo a los ojos humanos. El humano retrocede horrorizado y contraataca con furia protectora.\n\nü©∏ El **{titulo_no_muerto}** logr√≥ cegar el ojo izquierdo del humano arranc√°ndolo de ra√≠z. Sangre roja brota mientras el humano grita horrorizado por su mutilaci√≥n.\n\nüíÄ El no muerto sostiene el ojo arrancado mientras lo observa fr√≠amente antes de aplastarlo bajo su pie.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",
        
        "round2": "‚öîÔ∏è **El {titulo_humano}** contraataca tuerto con la desesperaci√≥n de los mutilados pero la experiencia del **{armadura_no_muerto}** empapada en l√°grimas de viudas hace que el ataque ciego sea f√°cilmente evitado.\n\n‚öîÔ∏è **Humano:** '¬°Mi ojo! ¬°Maldito carnicero de inocentes!'\nüíÄ **No Muerto:** '...'\n\n‚ö° El humano descarga golpes a ciegas buscando venganza por su ojo perdido. El no muerto mantiene su posici√≥n calculada esquivando los ataques ciegos.\n\nü©∏ Los golpes humanos fallan repetidamente mientras el no muerto observa la pat√©tica lucha del tuerto. El humano tropieza con su propia sangre.\n\n‚öîÔ∏è El humano llora l√°grimas de sangre mientras siente como es humillado por el asesino silencioso.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un lamento espectral. **{mascota_no_muerto}** entra al campo de batalla y ataca cruelmente al humano ciego que se defiende a tientas. El **{mascota_humano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, crueldad calculada contra ceguera desesperada en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del no muerto y el humano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_no_muerto}/{hp_total_no_muerto} vs {hp_restante_humano}/{hp_total_humano}**",
        
        "round4": "üíÄ **¬°ROUND FINAL!** El humano decide poner fin a esta lucha.\n\n‚öîÔ∏è **Humano:** '¬°Por mi ojo perdido! ¬°Si muero, te llevo conmigo al infierno!'\nüíÄ **No Muerto:** '...'\n\n‚ö° Frotando su **{accesorio_humano}** se lanza contra el no muerto con furia ciega. El no muerto lo mira fr√≠amente y lanza su ataque mientras su **{accesorio_no_muerto}** resplandece por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El humano agarra al no muerto y explotan juntos en llamas sagradas mientras el no muerto le drena el alma completamente.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_humano}/{hp_total_humano} vs {hp_final_no_muerto}/{hp_total_no_muerto}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 6 - HUMANO COMIENZA
    {
        "round1": "‚öîÔ∏è **El guerrero {titulo_humano}** entra al campo de batalla con la determinaci√≥n de los supervivientes, empu√±ando su **{arma_humano}** con el dolor de los hu√©rfanos de la Plaga.\n\n‚öîÔ∏è **Humano:** 'Monstruo sin coraz√≥n, pagar√°s por cada l√°grima derramada en Lordaeron.'\nüíÄ **No Muerto:** '...'\n\n‚ö° El humano lanza un golpe vengativo directo al pecho necr√≥tico. El no muerto bloquea espectralmente y contraataca con frialdad asesina.\n\nü©∏ El **{titulo_humano}** logr√≥ fracturar las costillas del no muerto con fuerza vengativa. Icor negro brota mientras el no muerto permanece indiferente al dolor.\n\n‚öîÔ∏è El humano grita con satisfacci√≥n viendo como el icor maldito se derrama por el suelo sagrado.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round2": "üíÄ **El {titulo_no_muerto}** contraataca herido con la paciencia de los eternos pero la furia del **{armadura_humano}** forjada en el dolor de los supervivientes hace que el ataque paciente sea resistido por la ira vengativa.\n\nüíÄ **No Muerto:** '...'\n‚öîÔ∏è **Humano:** 'Tu silencio no borrar√° los gritos de agon√≠a que causaste.'\n\n‚ö° El no muerto descarga ataques met√≥dicos buscando silenciar la venganza humana. El humano mantiene su furia alimentada por el recuerdo de los ca√≠dos.\n\nü©∏ Las garras necr√≥ticas logran impactar pero la furia vengativa absorbe el da√±o necr√≥tico. El humano apenas retrocede.\n\nüíÄ El no muerto permanece silencioso mientras contempla como su paciencia eterna choca contra la furia humana.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un ladrido determinado. **{mascota_humano}** entra al campo de batalla y ataca valientemente al no muerto herido que se defiende espectralmente. El **{mascota_no_muerto}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, valent√≠a determinada contra frialdad espectral en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del humano y el no muerto contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_humano}/{hp_total_humano} vs {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round4": "‚öîÔ∏è **¬°ROUND FINAL!** El no muerto decide poner fin a esta lucha.\n\nüíÄ **No Muerto:** '...'\n‚öîÔ∏è **Humano:** 'Al menos morir√© luchando contra el mal que destruy√≥ mi hogar.'\n\n‚ö° Frotando su **{accesorio_no_muerto}** se lanza contra el humano silenciosamente. El humano lo mira con determinaci√≥n final y lanza su ataque mientras su **{accesorio_humano}** late por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El no muerto atraviesa el coraz√≥n humano con garras espectrales mientras el humano le clava una daga bendita en el cr√°neo.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_no_muerto}/{hp_total_no_muerto} vs {hp_final_humano}/{hp_total_humano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 7 - NO MUERTO COMIENZA
    {
        "round1": "üíÄ **El guerrero {titulo_no_muerto}** entra al campo de batalla con la experiencia de genocidios completos, empu√±ando su **{arma_no_muerto}** que ha segado miles de vidas humanas.\n\nüíÄ **No Muerto:** '...'\n‚öîÔ∏è **Humano:** 'Exterminador silencioso, cu√°ntas aldeas has despoblado sin mostrar remordimiento.'\n\n‚ö° El no muerto lanza un ataque letal directo a la garganta humana. El humano esquiva por poco y contraataca con terror desesperado.\n\nü©∏ El **{titulo_no_muerto}** logr√≥ cortar la garganta humana parcialmente. Sangre roja brota a borbotones mientras el humano se ahoga en su propia sangre.\n\nüíÄ El no muerto observa impasible como el humano se desangra lentamente, igual que todas sus v√≠ctimas anteriores.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",
        
        "round2": "‚öîÔ∏è **El {titulo_humano}** contraataca ahog√°ndose con la desesperaci√≥n de las v√≠ctimas pero la metodolog√≠a del **{armadura_no_muerto}** perfeccionada en mil masacres hace que el ataque desesperado sea f√°cilmente anticipado.\n\n‚öîÔ∏è **Humano:** '*gorgoteando sangre* ¬°Por... todos... los... masacrados!'\nüíÄ **No Muerto:** '...'\n\n‚ö° El humano descarga golpes ahog√°ndose mientras se desangra. El no muerto mantiene su posici√≥n metodical anticipando cada movimiento desesperado.\n\nü©∏ Los golpes humanos logran impactar d√©bilmente pero la experiencia genocida minimiza todo da√±o. El no muerto apenas se inmuta.\n\n‚öîÔ∏è El humano cae de rodillas ahog√°ndose en sangre mientras el no muerto observa otra muerte m√°s en su larga lista.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un susurro necr√≥tico. **{mascota_no_muerto}** entra al campo de batalla y ataca met√≥dicamente al humano ahog√°ndose que se defiende con √∫ltimos estertores. El **{mascota_humano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, metodolog√≠a genocida contra agon√≠a desesperada en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del no muerto y el humano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_no_muerto}/{hp_total_no_muerto} vs {hp_restante_humano}/{hp_total_humano}**",
        
        "round4": "üíÄ **¬°ROUND FINAL!** El humano decide poner fin a esta lucha.\n\n‚öîÔ∏è **Humano:** '*ahog√°ndose* Si muero... al menos... uno menos...'\nüíÄ **No Muerto:** '...'\n\n‚ö° Frotando su **{accesorio_humano}** se lanza contra el no muerto con √∫ltimos estertores. El no muerto lo mira fr√≠amente y lanza su ataque mientras su **{accesorio_no_muerto}** vibra por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El humano clava su arma en el pecho necr√≥tico con sus √∫ltimas fuerzas mientras el no muerto le arranca la cabeza completamente.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_humano}/{hp_total_humano} vs {hp_final_no_muerto}/{hp_total_no_muerto}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 8 - HUMANO COMIENZA
    {
        "round1": "‚öîÔ∏è **El guerrero {titulo_humano}** entra al campo de batalla con el valor de los justos, empu√±ando su **{arma_humano}** con la esperanza de los √∫ltimos supervivientes.\n\n‚öîÔ∏è **Humano:** 'Abominaci√≥n genocida, tu reino de terror terminar√° por mi espada.'\nüíÄ **No Muerto:** '...'\n\n‚ö° El humano lanza un corte heroico directo al brazo necr√≥tico. El no muerto bloquea espectralmente y contraataca con experiencia letal.\n\nü©∏ El **{titulo_humano}** logr√≥ cortar la mano izquierda del no muerto de ra√≠z. Icor negro brota mientras el no muerto observa su extremidad ca√≠da con indiferencia.\n\n‚öîÔ∏è El humano grita triunfante viendo como la mano asesina cae al suelo inerte.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round2": "üíÄ **El {titulo_no_muerto}** contraataca manco con la adaptabilidad de los veteranos pero la esperanza del **{armadura_humano}** forjada en la fe de los supervivientes hace que el ataque manco sea resistido por la determinaci√≥n sagrada.\n\nüíÄ **No Muerto:** '...'\n‚öîÔ∏è **Humano:** 'Un asesino manco es menos peligroso para los inocentes.'\n\n‚ö° El no muerto descarga ataques con su brazo restante buscando compensar su minusval√≠a. El humano mantiene su esperanza confiando en la justicia divina.\n\nü©∏ Las garras necr√≥ticas logran impactar d√©bilmente pero la esperanza humana resiste el da√±o. El humano apenas retrocede.\n\nüíÄ El no muerto permanece silencioso mientras contempla como su experiencia se ve limitada por su mutilaci√≥n.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un ladrido esperanzado. **{mascota_humano}** entra al campo de batalla y ataca valientemente al no muerto manco que se defiende con dificultad. El **{mascota_no_muerto}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, esperanza valiente contra experiencia limitada en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del humano y el no muerto contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_humano}/{hp_total_humano} vs {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round4": "‚öîÔ∏è **¬°ROUND FINAL!** El no muerto decide poner fin a esta lucha.\n\nüíÄ **No Muerto:** '...'\n‚öîÔ∏è **Humano:** 'Al menos logr√© mutilarte, monstruo. Eso es m√°s que muchos.'\n\n‚ö° Frotando su **{accesorio_no_muerto}** se lanza contra el humano con su brazo restante. El humano lo mira con satisfacci√≥n y lanza su ataque mientras su **{accesorio_humano}** resplandece por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El no muerto perfora el abdomen humano con su garra restante mientras el humano le clava una estaca bendita en el coraz√≥n.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_no_muerto}/{hp_total_no_muerto} vs {hp_final_humano}/{hp_total_humano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },

        # NARRACION 9 - NO MUERTO COMIENZA
    {
        "round1": "üíÄ **El guerrero {titulo_no_muerto}** entra al campo de batalla con la frialdad de un veterano de mil guerras, empu√±ando su **{arma_no_muerto}** que ha cosechado almas humanas por d√©cadas.\n\nüíÄ **No Muerto:** '...'\n‚öîÔ∏è **Humano:** 'Soldado ca√≠do, una vez fuiste como yo pero ahora eres solo una sombra corrupta.'\n\n‚ö° El no muerto lanza un ataque calculado directo al coraz√≥n humano. El humano bloquea con t√©cnica militar y contraataca con precisi√≥n de soldado.\n\nü©∏ El **{titulo_no_muerto}** logr√≥ atravesar el hombro humano con precisi√≥n quir√∫rgica. Sangre roja brota mientras el humano grita de dolor pero mantiene su posici√≥n.\n\nüíÄ El no muerto observa silenciosamente como el humano sangra, recordando vagamente cuando √©l mismo era vulnerable.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",
        
        "round2": "‚öîÔ∏è **El {titulo_humano}** contraataca herido con la disciplina militar pero la experiencia del **{armadura_no_muerto}** forjada en incontables batallas hace que el ataque disciplinado sea anticipado por la veteran√≠a eterna.\n\n‚öîÔ∏è **Humano:** '¬°Tu experiencia no compensar√° tu alma perdida!'\nüíÄ **No Muerto:** '...'\n\n‚ö° El humano descarga ataques t√©cnicos buscando superar la experiencia del veterano ca√≠do. El no muerto mantiene su posici√≥n defensiva anticipando cada movimiento militar.\n\nü©∏ Los golpes humanos logran impactar pero la experiencia de guerra absorbe gran parte del da√±o. El no muerto apenas retrocede.\n\n‚öîÔ∏è El humano retrocede frustrado mientras siente como su entrenamiento militar es insuficiente contra la veteran√≠a eterna.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un gemido espectral. **{mascota_no_muerto}** entra al campo de batalla y ataca t√°cticamente al humano herido que se defiende con disciplina. El **{mascota_humano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, t√°ctica espectral contra disciplina militar en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del no muerto y el humano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_no_muerto}/{hp_total_no_muerto} vs {hp_restante_humano}/{hp_total_humano}**",
        
        "round4": "üíÄ **¬°ROUND FINAL!** El humano decide poner fin a esta lucha.\n\n‚öîÔ∏è **Humano:** '¬°Por todos los soldados ca√≠dos! ¬°Te liberar√© de esta maldici√≥n!'\nüíÄ **No Muerto:** '...'\n\n‚ö° Frotando su **{accesorio_humano}** se lanza contra el no muerto con honor militar. El no muerto lo mira con respeto silencioso y lanza su ataque mientras su **{accesorio_no_muerto}** late por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El humano clava su espada en el pecho necr√≥tico con honor mientras el no muerto le perfora el coraz√≥n con precisi√≥n letal.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_humano}/{hp_total_humano} vs {hp_final_no_muerto}/{hp_total_no_muerto}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 10 - HUMANO COMIENZA
    {
        "round1": "‚öîÔ∏è **El guerrero {titulo_humano}** entra al campo de batalla con la determinaci√≥n de los vivos, empu√±ando su **{arma_humano}** con la fuerza de la vida que late en sus venas.\n\n‚öîÔ∏è **Humano:** 'Soldado perdido, te dar√© el descanso que mereces en esta batalla.'\nüíÄ **No Muerto:** '...'\n\n‚ö° El humano lanza un golpe misericordioso directo al cuello necr√≥tico. El no muerto esquiva espectralmente y contraataca con frialdad militar.\n\nü©∏ El **{titulo_humano}** logr√≥ cortar profundamente el brazo del no muerto casi cercen√°ndolo. Icor negro brota mientras el no muerto observa su extremidad colgando.\n\n‚öîÔ∏è El humano suspira con tristeza viendo como debe mutilar a quien una vez fue su hermano de armas.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round2": "üíÄ **El {titulo_no_muerto}** contraataca mutilado con la determinaci√≥n de los ca√≠dos pero la vitalidad del **{armadura_humano}** imbuida con energ√≠a vital hace que el ataque necr√≥tico sea purificado por la fuerza de la vida.\n\nüíÄ **No Muerto:** '...'\n‚öîÔ∏è **Humano:** 'Tu silencio dice m√°s que mil palabras, hermano ca√≠do.'\n\n‚ö° El no muerto descarga ataques con su brazo sano buscando igualar el combate. El humano mantiene su vitalidad confiando en la fuerza de los vivos.\n\nü©∏ Las garras necr√≥ticas logran impactar pero la energ√≠a vital purifica parte del da√±o. El humano retrocede ligeramente.\n\nüíÄ El no muerto permanece silencioso mientras contempla como su condici√≥n lo limita contra la vitalidad pura.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un ladrido vital. **{mascota_humano}** entra al campo de batalla y ataca vigorosamente al no muerto mutilado que se defiende como puede. El **{mascota_no_muerto}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, vigor vital contra determinaci√≥n necr√≥tica en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del humano y el no muerto contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_humano}/{hp_total_humano} vs {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round4": "‚öîÔ∏è **¬°ROUND FINAL!** El no muerto decide poner fin a esta lucha.\n\nüíÄ **No Muerto:** '...'\n‚öîÔ∏è **Humano:** 'Descansa en paz, hermano. Tu lucha ha terminado.'\n\n‚ö° Frotando su **{accesorio_no_muerto}** se lanza contra el humano con determinaci√≥n final. El humano lo mira con compasi√≥n y lanza su ataque mientras su **{accesorio_humano}** vibra por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El no muerto clava su garra en el coraz√≥n humano con precisi√≥n mientras el humano le corta la cabeza con un golpe misericordioso.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_no_muerto}/{hp_total_no_muerto} vs {hp_final_humano}/{hp_total_humano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 11 - NO MUERTO COMIENZA
    {
        "round1": "üíÄ **El guerrero {titulo_no_muerto}** entra al campo de batalla con movimientos mec√°nicos y precisos, empu√±ando su **{arma_no_muerto}** con la eficiencia de una m√°quina de matar.\n\nüíÄ **No Muerto:** '...'\n‚öîÔ∏è **Humano:** 'Aut√≥mata sin alma, tu existencia es una ofensa a los ca√≠dos con honor.'\n\n‚ö° El no muerto lanza un ataque sistem√°tico directo a los tendones humanos. El humano salta desesperadamente y contraataca con furia viviente.\n\nü©∏ El **{titulo_no_muerto}** logr√≥ cortar los tendones del pie derecho humano dej√°ndolo cojo. Sangre roja brota mientras el humano cojea tratando de mantener el equilibrio.\n\nüíÄ El no muerto observa impasible como el humano lucha por mantenerse en pie, calculando su pr√≥ximo movimiento.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",
        
        "round2": "‚öîÔ∏è **El {titulo_humano}** contraataca cojeando con la desesperaci√≥n de los heridos pero la precisi√≥n del **{armadura_no_muerto}** calibrada para m√°xima eficiencia hace que el ataque cojo sea f√°cilmente predicho.\n\n‚öîÔ∏è **Humano:** '¬°Maldita m√°quina sin emociones!'\nüíÄ **No Muerto:** '...'\n\n‚ö° El humano descarga golpes cojeando buscando superar la eficiencia mec√°nica. El no muerto mantiene su precisi√≥n calculando cada movimiento limitado.\n\nü©∏ Los golpes humanos logran impactar d√©bilmente pero la eficiencia mec√°nica minimiza todo da√±o. El no muerto ajusta su posici√≥n autom√°ticamente.\n\n‚öîÔ∏è El humano llora de frustraci√≥n mientras cojea in√∫tilmente contra la m√°quina de guerra perfecta.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un clic mec√°nico. **{mascota_no_muerto}** entra al campo de batalla y ataca sistem√°ticamente al humano cojo que se defiende como puede. El **{mascota_humano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, eficiencia sistem√°tica contra desesperaci√≥n cojeante en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del no muerto y el humano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_no_muerto}/{hp_total_no_muerto} vs {hp_restante_humano}/{hp_total_humano}**",
        
        "round4": "üíÄ **¬°ROUND FINAL!** El humano decide poner fin a esta lucha.\n\n‚öîÔ∏è **Humano:** '¬°Si muero, al menos ser√° con alma intacta!'\nüíÄ **No Muerto:** '...'\n\n‚ö° Frotando su **{accesorio_humano}** se lanza cojeando contra el no muerto con alma desesperada. El no muerto lo mira fr√≠amente y lanza su ataque mientras su **{accesorio_no_muerto}** resplandece por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El humano abraza al no muerto y explotan juntos mientras el no muerto le perfora el cerebro con precisi√≥n quir√∫rgica.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_humano}/{hp_total_humano} vs {hp_final_no_muerto}/{hp_total_no_muerto}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 12 - HUMANO COMIENZA
    {
        "round1": "‚öîÔ∏è **El guerrero {titulo_humano}** entra al campo de batalla con la pasi√≥n de los vivos, empu√±ando su **{arma_humano}** con el fuego de las emociones humanas.\n\n‚öîÔ∏è **Humano:** 'C√°scara vac√≠a, te mostrar√© lo que significa sentir verdadero dolor.'\nüíÄ **No Muerto:** '...'\n\n‚ö° El humano lanza un golpe furioso directo al rostro necr√≥tico. El no muerto bloquea mec√°nicamente y contraataca con frialdad autom√°tica.\n\nü©∏ El **{titulo_humano}** logr√≥ destrozar la mand√≠bula del no muerto dej√°ndola colgando. Icor negro brota mientras el no muerto trata de reposicionar su mand√≠bula rota.\n\n‚öîÔ∏è El humano grita con satisfacci√≥n viendo como la cara perfecta mec√°nica se convierte en una mueca horrible.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round2": "üíÄ **El {titulo_no_muerto}** contraataca desfigurado con la adaptabilidad de las m√°quinas pero la pasi√≥n del **{armadura_humano}** forjada en emociones puras hace que el ataque mec√°nico sea resistido por la fuerza emocional.\n\nüíÄ **No Muerto:** '...'\n‚öîÔ∏è **Humano:** '¬°Ni desfigurado puedes sentir el dolor que causas!'\n\n‚ö° El no muerto descarga ataques sistem√°ticos buscando compensar su desfiguraci√≥n. El humano mantiene su pasi√≥n alimentada por la satisfacci√≥n de la mutilaci√≥n.\n\nü©∏ Las garras necr√≥ticas logran impactar pero la pasi√≥n humana absorbe el da√±o fr√≠o. El humano apenas retrocede.\n\nüíÄ El no muerto permanece silencioso mientras contempla como su eficiencia se ve comprometida por los da√±os.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un ladrido emocional. **{mascota_humano}** entra al campo de batalla y ataca apasionadamente al no muerto desfigurado que se defiende mec√°nicamente. El **{mascota_no_muerto}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, pasi√≥n emocional contra eficiencia da√±ada en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del humano y el no muerto contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_humano}/{hp_total_humano} vs {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round4": "‚öîÔ∏è **¬°ROUND FINAL!** El no muerto decide poner fin a esta lucha.\n\nüíÄ **No Muerto:** '...'\n‚öîÔ∏è **Humano:** 'Al menos logr√© arruinar tu cara perfecta, m√°quina.'\n\n‚ö° Frotando su **{accesorio_no_muerto}** se lanza contra el humano con eficiencia da√±ada. El humano lo mira con satisfacci√≥n cruel y lanza su ataque mientras su **{accesorio_humano}** late por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El no muerto perfora el coraz√≥n humano con precisi√≥n limitada mientras el humano le aplasta el cr√°neo con furia emocional.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_no_muerto}/{hp_total_no_muerto} vs {hp_final_humano}/{hp_total_humano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 13 - NO MUERTO COMIENZA
    {
        "round1": "üíÄ **El guerrero {titulo_no_muerto}** entra al campo de batalla con la inevitabilidad de la muerte misma, empu√±ando su **{arma_no_muerto}** como representante del fin de todas las cosas.\n\nüíÄ **No Muerto:** '...'\n‚öîÔ∏è **Humano:** 'Heraldo de la muerte, representas todo lo que los vivos tememos.'\n\n‚ö° El no muerto lanza un ataque final directo al alma humana. El humano se defiende desesperadamente y contraataca con la fuerza de la vida.\n\nü©∏ El **{titulo_no_muerto}** logr√≥ drenar parte del alma humana dej√°ndolo debilitado. Sangre roja brota mientras el humano siente como su esencia vital se desvanece.\n\nüíÄ El no muerto permanece silencioso mientras observa como la vida humana se marchita lentamente bajo su toque mortal.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",
        
        "round2": "‚öîÔ∏è **El {titulo_humano}** contraataca debilitado con la resistencia vital pero la inevitabilidad del **{armadura_no_muerto}** imbuida con el poder de la muerte hace que el ataque vital sea absorbido por la fatalidad.\n\n‚öîÔ∏è **Humano:** '¬°No sucumbir√© ante tu toque mortal!'\nüíÄ **No Muerto:** '...'\n\n‚ö° El humano descarga golpes desesperados buscando resistir el drenaje de su alma. El no muerto mantiene su presencia inevitable absorbiendo cada intento de resistencia.\n\nü©∏ Los golpes humanos logran impactar pero la inevitabilidad de la muerte los neutraliza. El humano se debilita m√°s con cada ataque.\n\n‚öîÔ∏è El humano cae de rodillas sintiendo como su alma es drenada inexorablemente por la presencia de la muerte.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un susurro mortal. **{mascota_no_muerto}** entra al campo de batalla y ataca inevitablemente al humano debilitado que se defiende con √∫ltimas fuerzas. El **{mascota_humano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, inevitabilidad mortal contra resistencia vital en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del no muerto y el humano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_no_muerto}/{hp_total_no_muerto} vs {hp_restante_humano}/{hp_total_humano}**",
        
        "round4": "üíÄ **¬°ROUND FINAL!** El humano decide poner fin a esta lucha.\n\n‚öîÔ∏è **Humano:** '¬°Prefiero morir luchando que vivir como t√∫!'\nüíÄ **No Muerto:** '...'\n\n‚ö° Frotando su **{accesorio_humano}** se lanza contra el no muerto con resistencia final. El no muerto lo mira con inevitabilidad y lanza su ataque mientras su **{accesorio_no_muerto}** vibra por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El humano clava su arma en el coraz√≥n necr√≥tico con √∫ltimas fuerzas mientras el no muerto drena completamente su alma.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_humano}/{hp_total_humano} vs {hp_final_no_muerto}/{hp_total_no_muerto}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 14 - HUMANO COMIENZA
    {
        "round1": "‚öîÔ∏è **El guerrero {titulo_humano}** entra al campo de batalla con la llama eterna de la esperanza, empu√±ando su **{arma_humano}** como √∫ltimo basti√≥n contra las tinieblas.\n\n‚öîÔ∏è **Humano:** 'Sombra de la desesperaci√≥n, mientras quede un humano vivo, la esperanza prevalecer√°.'\nüíÄ **No Muerto:** '...'\n\n‚ö° El humano lanza un golpe lleno de esperanza directo al pecho necr√≥tico. El no muerto bloquea espectralmente y contraataca con desesperaci√≥n eterna.\n\nü©∏ El **{titulo_humano}** logr√≥ abrir una grieta en el pecho del no muerto donde brilla una luz tenue. Icor negro brota mientras el no muerto observa la luz con curiosidad.\n\n‚öîÔ∏è El humano sonr√≠e viendo como una peque√±a luz persiste en el coraz√≥n muerto del no muerto.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round2": "üíÄ **El {titulo_no_muerto}** contraataca confundido con la curiosidad de los perdidos pero la esperanza del **{armadura_humano}** brillando con luz propia hace que el ataque confuso sea purificado por la luz interior.\n\nüíÄ **No Muerto:** '...'\n‚öîÔ∏è **Humano:** 'A√∫n queda algo de ti ah√≠ dentro, puedo verlo.'\n\n‚ö° El no muerto descarga ataques confusos mientras observa la luz en su pecho. El humano mantiene su esperanza alimentando la peque√±a llama de humanidad.\n\nü©∏ Las garras necr√≥ticas logran impactar pero la luz esperanzadora purifica el da√±o. El humano mantiene su sonrisa.\n\nüíÄ El no muerto permanece silencioso mientras contempla la luz en su pecho con algo parecido a la curiosidad.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un ladrido esperanzador. **{mascota_humano}** entra al campo de batalla y ataca luminosamente al no muerto confundido que se defiende distra√≠damente. El **{mascota_no_muerto}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, luz esperanzadora contra confusi√≥n curiosa en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del humano y el no muerto contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_humano}/{hp_total_humano} vs {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round4": "‚öîÔ∏è **¬°ROUND FINAL!** El no muerto decide poner fin a esta lucha.\n\nüíÄ **No Muerto:** '...'\n‚öîÔ∏è **Humano:** 'Gracias por mostrarme que a√∫n hay esperanza, incluso en ti.'\n\n‚ö° Frotando su **{accesorio_no_muerto}** se lanza contra el humano con confusi√≥n final. El humano lo mira con comprensi√≥n y lanza su ataque mientras su **{accesorio_humano}** resplandece por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El no muerto perfora el coraz√≥n humano con confusi√≥n mientras el humano alimenta la luz en el pecho necr√≥tico hasta que explota en purificaci√≥n.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_no_muerto}/{hp_total_no_muerto} vs {hp_final_humano}/{hp_total_humano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 15 - NO MUERTO COMIENZA (√öLTIMA)
    {
        "round1": "üíÄ **El guerrero {titulo_no_muerto}** entra al campo de batalla con la finalidad absoluta, empu√±ando su **{arma_no_muerto}** como juez final entre vida y muerte.\n\nüíÄ **No Muerto:** '...'\n‚öîÔ∏è **Humano:** 'Juez de los destinos, decidamos qui√©n merece prevalecer.'\n\n‚ö° El no muerto lanza un ataque definitivo directo al destino humano. El humano lo recibe valientemente y contraataca con determinaci√≥n final.\n\nü©∏ El **{titulo_no_muerto}** logr√≥ drenar gran parte de la fuerza vital humana. Sangre roja brota mientras el humano siente como su destino se decide en esta batalla.\n\nüíÄ El no muerto observa silenciosamente como el humano lucha contra su propio destino con determinaci√≥n admirable.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",
        
        "round2": "‚öîÔ∏è **El {titulo_humano}** contraataca debilitado con la determinaci√≥n final pero la inevitabilidad del **{armadura_no_muerto}** forjada en destinos cumplidos hace que el ataque determinado sea absorbido por la fatalidad del destino.\n\n‚öîÔ∏è **Humano:** '¬°Forjar√© mi propio destino hasta el final!'\nüíÄ **No Muerto:** '...'\n\n‚ö° El humano descarga golpes finales buscando cambiar su destino. El no muerto mantiene su inevitabilidad como representante del destino mismo.\n\nü©∏ Los golpes humanos logran impactar pero el destino los absorbe como parte del plan final. El humano se debilita m√°s.\n\n‚öîÔ∏è El humano cae pero se levanta una vez m√°s, desafiando su destino hasta el √∫ltimo aliento.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un eco del destino. **{mascota_no_muerto}** entra al campo de batalla y ataca fatalmente al humano que se defiende desafiando su destino. El **{mascota_humano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, fatalidad del destino contra desaf√≠o final en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del no muerto y el humano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_no_muerto}/{hp_total_no_muerto} vs {hp_restante_humano}/{hp_total_humano}**",
        
        "round4": "üíÄ **¬°ROUND FINAL!** El humano decide poner fin a esta lucha.\n\n‚öîÔ∏è **Humano:** '¬°Que el destino decida, pero luchar√© hasta el final!'\nüíÄ **No Muerto:** '...'\n\n‚ö° Frotando su **{accesorio_humano}** se lanza contra el no muerto desafiando el destino. El no muerto lo mira con respeto silencioso y lanza su ataque mientras su **{accesorio_no_muerto}** late por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El humano abraza al no muerto y ambos se desvanecen juntos en una explosi√≥n final mientras el destino se cumple para ambos.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_humano}/{hp_total_humano} vs {hp_final_no_muerto}/{hp_total_no_muerto}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    }
],

    
# ‚ô£‚úÖ ELFO VS NO MUERTO - 15 NARRACIONES
"elfo_vs_no_muerto": [
    # NARRACION 1 - ELFO COMIENZA
    {
        "round1": "üßù‚Äç‚ôÇÔ∏è **El guerrero {titulo_elfo}** entra al campo de batalla con la arrogancia milenaria de los inmortales puros, empu√±ando su **{arma_elfo}** con el desprecio hacia las abominaciones corrompidas.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Cad√°ver andante, tu existencia putrefacta es una burla a la verdadera inmortalidad.'\nüíÄ **No Muerto:** '...'\n\n‚ö° El elfo lanza un corte despreciativo directo al cuello necr√≥tico. El no muerto esquiva espectralmente y contraataca con frialdad corrupta.\n\nü©∏ El **{titulo_elfo}** logr√≥ abrir una herida profunda en el pecho del no muerto. Icor negro brota mientras el no muerto permanece impasible ante el dolor.\n\nüßù‚Äç‚ôÇÔ∏è El elfo r√≠e con crueldad viendo como la icorosa sangre maldita mancha sus botas perfectas.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round2": "üíÄ **El {titulo_no_muerto}** contraataca herido con la paciencia de los eternos pero la gracia del **{armadura_elfo}** forjada en la perfecci√≥n ancestral hace que el ataque corrupto sea desviado por la elegancia pura.\n\nüíÄ **No Muerto:** '...'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Tu silencio pat√©tico demuestra lo inferior que es tu falsa inmortalidad.'\n\n‚ö° El no muerto descarga ataques necr√≥ticos buscando corromper la perfecci√≥n √©lfica. El elfo mantiene su gracia burl√°ndose de la torpeza cadav√©rica.\n\nü©∏ Las garras necr√≥ticas logran impactar pero la perfecci√≥n √©lfica purifica gran parte del da√±o. El elfo apenas se inmuta.\n\nüíÄ El no muerto permanece silencioso mientras contempla como su corrupci√≥n es rechazada por la superioridad √©lfica.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un canto burl√≥n. **{mascota_elfo}** entra al campo de batalla y ataca gr√°cilmente al no muerto herido que se defiende espectralmente. El **{mascota_no_muerto}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, gracia burlona contra frialdad espectral en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del elfo y el no muerto contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_elfo}/{hp_total_elfo} vs {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round4": "üßù‚Äç‚ôÇÔ∏è **¬°ROUND FINAL!** El no muerto decide poner fin a esta lucha.\n\nüíÄ **No Muerto:** '...'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Perfecto, es hora de purificar esta abominaci√≥n de la existencia.'\n\n‚ö° Frotando su **{accesorio_no_muerto}** se lanza contra el elfo silenciosamente. El elfo lo mira con desprecio absoluto y lanza su ataque mientras su **{accesorio_elfo}** resplandece por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El no muerto drena parte del alma √©lfica con garras espectrales mientras el elfo le atraviesa el coraz√≥n necr√≥tico con luz purificadora.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_no_muerto}/{hp_total_no_muerto} vs {hp_final_elfo}/{hp_total_elfo}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 2 - NO MUERTO COMIENZA
    {
        "round1": "üíÄ **El guerrero {titulo_no_muerto}** entra al campo de batalla con la experiencia de milenios de sufrimiento, empu√±ando su **{arma_no_muerto}** empapada en sangre de seres perfectos.\n\nüíÄ **No Muerto:** '...'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Sombra putrefacta, tu mera presencia contamina el aire que respiro.'\n\n‚ö° El no muerto lanza garras necr√≥ticas directo al rostro perfecto √©lfico. El elfo esquiva con arrogancia y contraataca con desprecio letal.\n\nü©∏ El **{titulo_no_muerto}** logr√≥ cortar la mejilla √©lfica dejando una cicatriz horrible. Sangre dorada brota mientras el elfo grita horrorizado por su belleza arruinada.\n\nüíÄ El no muerto observa impasible como la perfecci√≥n √©lfica se convierte en fealdad bajo su toque corrupto.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round2": "üßù‚Äç‚ôÇÔ∏è **El {titulo_elfo}** contraataca desfigurado con la vanidad herida pero la resistencia del **{armadura_no_muerto}** templada en corrupci√≥n eterna hace que el ataque vengativo sea absorbido por la maldad acumulada.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°Mi rostro perfecto! ¬°Maldita armadura de carro√±a!'\nüíÄ **No Muerto:** '...'\n\n‚ö° El elfo descarga ataques hist√©ricos buscando vengar su belleza perdida. El no muerto mantiene su posici√≥n corrupta absorbiendo la vanidad herida.\n\nü©∏ Las armas √©lficas logran impactar pero la corrupci√≥n necr√≥tica neutraliza gran parte del da√±o. El no muerto apenas se mueve.\n\nüßù‚Äç‚ôÇÔ∏è El elfo llora l√°grimas doradas mientras contempla como su venganza es in√∫til contra la maldad absoluta.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un lamento espectral. **{mascota_no_muerto}** entra al campo de batalla y ataca necr√≥ticamente al elfo desfigurado que se defiende con vanidad herida. El **{mascota_elfo}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, frialdad necr√≥tica contra vanidad desesperada en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del no muerto y el elfo contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_no_muerto}/{hp_total_no_muerto} vs {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round4": "üíÄ **¬°ROUND FINAL!** El elfo decide poner fin a esta lucha.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°Por mi belleza arruinada! ¬°Te har√© pagar por esta profanaci√≥n!'\nüíÄ **No Muerto:** '...'\n\n‚ö° Frotando su **{accesorio_elfo}** se lanza contra el no muerto con vanidad vengativa. El no muerto lo mira fr√≠amente y lanza su ataque mientras su **{accesorio_no_muerto}** late por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El elfo perfora el cr√°neo necr√≥tico con furia vanidosa mientras el no muerto le arranca el ojo izquierdo con sus garras.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_elfo}/{hp_total_elfo} vs {hp_final_no_muerto}/{hp_total_no_muerto}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 3 - ELFO COMIENZA
    {
        "round1": "üßù‚Äç‚ôÇÔ∏è **El guerrero {titulo_elfo}** entra al campo de batalla con la burla eterna de los perfectos, empu√±ando su **{arma_elfo}** con el desprecio hacia las imitaciones baratas de inmortalidad.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Imitaci√≥n pat√©tica, tu falsa eternidad es una burla a los verdaderos inmortales.'\nüíÄ **No Muerto:** '...'\n\n‚ö° El elfo lanza un corte burl√≥n directo a la garganta necr√≥tica. El no muerto bloquea espectralmente y contraataca con experiencia milenaria.\n\nü©∏ El **{titulo_elfo}** logr√≥ decapitar parcialmente al no muerto dejando la cabeza colgando. Icor negro brota a torrentes mientras el no muerto trata de reposicionar su cabeza.\n\nüßù‚Äç‚ôÇÔ∏è El elfo r√≠e a carcajadas viendo como el no muerto lucha por mantener su cabeza en su lugar.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round2": "üíÄ **El {titulo_no_muerto}** contraataca sosteniendo su cabeza con la determinaci√≥n de los malditos pero la elegancia del **{armadura_elfo}** bendecida por la perfecci√≥n hace que el ataque grotesco sea esquivado por la gracia superior.\n\nüíÄ **No Muerto:** '...'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°Qu√© pat√©tico! ¬°Ni siquiera puedes mantener tu cabeza en su sitio!'\n\n‚ö° El no muerto descarga ataques sosteniendo su cabeza buscando compensar su grotesca situaci√≥n. El elfo baila alrededor burl√°ndose de la torpeza.\n\nü©∏ Las garras necr√≥ticas fallan repetidamente mientras el elfo se burla. El no muerto tropieza tratando de coordinar sus movimientos.\n\nüßù‚Äç‚ôÇÔ∏è El elfo contin√∫a ri√©ndose: '¬°Un no muerto decapitado es a√∫n m√°s in√∫til de lo normal!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha una carcajada cruel. **{mascota_elfo}** entra al campo de batalla y ataca burlonamente al no muerto decapitado que se defiende grotescamente. El **{mascota_no_muerto}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, burla cruel contra grotesca desesperaci√≥n en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del elfo y el no muerto contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_elfo}/{hp_total_elfo} vs {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round4": "üßù‚Äç‚ôÇÔ∏è **¬°ROUND FINAL!** El no muerto decide poner fin a esta lucha.\n\nüíÄ **No Muerto:** '...'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°Perfecto! ¬°Es hora de terminar con esta farsa grotesca!'\n\n‚ö° Frotando su **{accesorio_no_muerto}** se lanza contra el elfo sosteniendo su cabeza. El elfo lo mira con diversi√≥n infinita y lanza su ataque mientras su **{accesorio_elfo}** vibra por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El no muerto clava su cabeza desprendida en el pecho √©lfico mientras el elfo le destroza el torso con elegancia letal.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_no_muerto}/{hp_total_no_muerto} vs {hp_final_elfo}/{hp_total_elfo}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },


        # NARRACION 4 - NO MUERTO COMIENZA
    {
        "round1": "üíÄ **El guerrero {titulo_no_muerto}** entra al campo de batalla con la paciencia infinita de los condenados, empu√±ando su **{arma_no_muerto}** ba√±ada en l√°grimas de seres perfectos.\n\nüíÄ **No Muerto:** '...'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Sombra silenciosa, tu mutismo demuestra lo vac√≠a que est√° tu existencia.'\n\n‚ö° El no muerto lanza un ataque calculado directo a la oreja puntiaguda √©lfica. El elfo retrocede horrorizado y contraataca con elegancia desesperada.\n\nü©∏ El **{titulo_no_muerto}** logr√≥ cortar la oreja derecha del elfo de ra√≠z. Sangre dorada brota mientras el elfo grita horrorizado por su desfiguraci√≥n.\n\nüíÄ El no muerto sostiene la oreja cortada mientras la observa con curiosidad antes de aplastarla lentamente.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round2": "üßù‚Äç‚ôÇÔ∏è **El {titulo_elfo}** contraataca desfigurado con la histeria de los vanidosos pero la experiencia del **{armadura_no_muerto}** forjada en siglos de tortura hace que el ataque hist√©rico sea f√°cilmente anticipado.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°Mi oreja perfecta! ¬°Maldita armadura de torturador!'\nüíÄ **No Muerto:** '...'\n\n‚ö° El elfo descarga ataques enloquecidos buscando vengar su desfiguraci√≥n. El no muerto mantiene su posici√≥n met√≥dica anticipando cada movimiento hist√©rico.\n\nü©∏ Las armas √©lficas logran impactar d√©bilmente pero la experiencia en tortura minimiza todo da√±o. El no muerto apenas se inmuta.\n\nüßù‚Äç‚ôÇÔ∏è El elfo solloza de rabia mientras contempla como su venganza es humillada por la metodolog√≠a del torturador.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un susurro siniestro. **{mascota_no_muerto}** entra al campo de batalla y ataca met√≥dicamente al elfo desfigurado que se defiende hist√©ricamente. El **{mascota_elfo}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, metodolog√≠a siniestra contra histeria vanidosa en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del no muerto y el elfo contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_no_muerto}/{hp_total_no_muerto} vs {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round4": "üíÄ **¬°ROUND FINAL!** El elfo decide poner fin a esta lucha.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°Por mi oreja perdida! ¬°Te har√© sufrir como yo he sufrido!'\nüíÄ **No Muerto:** '...'\n\n‚ö° Frotando su **{accesorio_elfo}** se lanza contra el no muerto con vanidad herida. El no muerto lo mira con metodolog√≠a fr√≠a y lanza su ataque mientras su **{accesorio_no_muerto}** resplandece por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El elfo atraviesa el abdomen necr√≥tico con furia vanidosa mientras el no muerto le arranca la otra oreja completamente.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_elfo}/{hp_total_elfo} vs {hp_final_no_muerto}/{hp_total_no_muerto}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 5 - ELFO COMIENZA
    {
        "round1": "üßù‚Äç‚ôÇÔ∏è **El guerrero {titulo_elfo}** entra al campo de batalla con la superioridad de los Primeros Nacidos, empu√±ando su **{arma_elfo}** con el asco hacia las imitaciones necr√≥ticas.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Remedo putrefacto, tu existencia es una parodia grotesca de la verdadera eternidad.'\nüíÄ **No Muerto:** '...'\n\n‚ö° El elfo lanza un corte despectivo directo al brazo necr√≥tico. El no muerto bloquea espectralmente y contraataca con frialdad absoluta.\n\nü©∏ El **{titulo_elfo}** logr√≥ cortar el brazo izquierdo del no muerto completamente. Icor negro brota mientras el no muerto observa su extremidad ca√≠da con indiferencia.\n\nüßù‚Äç‚ôÇÔ∏è El elfo patea el brazo cortado como basura mientras se burla: '¬°Ni siquiera sientes dolor, pat√©tico!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round2": "üíÄ **El {titulo_no_muerto}** contraataca manco con la adaptabilidad de los malditos pero la velocidad del **{armadura_elfo}** imbuida con gracia divina hace que el ataque manco sea esquivado por la agilidad perfecta.\n\nüíÄ **No Muerto:** '...'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Un no muerto manco es a√∫n m√°s in√∫til de lo que ya eras.'\n\n‚ö° El no muerto descarga ataques con su brazo restante buscando compensar su minusval√≠a. El elfo baila alrededor del manco burl√°ndose de su torpeza.\n\nü©∏ Las garras necr√≥ticas fallan repetidamente mientras el elfo se r√≠e. El no muerto lucha por mantener el equilibrio.\n\nüßù‚Äç‚ôÇÔ∏è El elfo contin√∫a burl√°ndose: '¬øC√≥mo va a luchar un cad√°ver manco? ¬°Eres m√°s pat√©tico que antes!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha una risa despreciativa. **{mascota_elfo}** entra al campo de batalla y ataca burlonamente al no muerto manco que se defiende con dificultad. El **{mascota_no_muerto}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, burla despreciativa contra dificultad manca en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del elfo y el no muerto contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_elfo}/{hp_total_elfo} vs {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round4": "üßù‚Äç‚ôÇÔ∏è **¬°ROUND FINAL!** El no muerto decide poner fin a esta lucha.\n\nüíÄ **No Muerto:** '...'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Perfecto, es hora de terminar con esta farsa manca.'\n\n‚ö° Frotando su **{accesorio_no_muerto}** se lanza contra el elfo con su brazo restante. El elfo lo mira con burla infinita y lanza su ataque mientras su **{accesorio_elfo}** late por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El no muerto clava su garra restante en el coraz√≥n √©lfico mientras el elfo le decapita completamente con un corte perfecto.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_no_muerto}/{hp_total_no_muerto} vs {hp_final_elfo}/{hp_total_elfo}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 6 - NO MUERTO COMIENZA
    {
        "round1": "üíÄ **El guerrero {titulo_no_muerto}** entra al campo de batalla con la inevitabilidad de la corrupci√≥n, empu√±ando su **{arma_no_muerto}** que ha manchado la pureza de mil seres perfectos.\n\nüíÄ **No Muerto:** '...'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Plaga andante, tu sola presencia contamina la perfecci√≥n del aire.'\n\n‚ö° El no muerto lanza garras corruptas directo al rostro perfecto √©lfico. El elfo esquiva con horror y contraataca con repugnancia absoluta.\n\nü©∏ El **{titulo_no_muerto}** logr√≥ corromper parcialmente la piel √©lfica dej√°ndola gris y putrefacta. Sangre dorada brota mientras el elfo grita horrorizado por su corrupci√≥n.\n\nüíÄ El no muerto observa impasible como la perfecci√≥n √©lfica se pudre lentamente bajo su toque maldito.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round2": "üßù‚Äç‚ôÇÔ∏è **El {titulo_elfo}** contraataca corrompido con la desesperaci√≥n de los contaminados pero la inevitabilidad del **{armadura_no_muerto}** empapada en corrupci√≥n pura hace que el ataque desesperado sea absorbido por la maldad absoluta.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°Mi piel perfecta se pudre! ¬°Maldita armadura de pestilencia!'\nüíÄ **No Muerto:** '...'\n\n‚ö° El elfo descarga ataques desesperados buscando purificar su corrupci√≥n. El no muerto mantiene su inevitabilidad extendiendo la podredumbre con cada contacto.\n\nü©∏ Las armas √©lficas logran impactar pero la corrupci√≥n neutraliza todo da√±o mientras se extiende m√°s. El elfo se contamina m√°s con cada golpe.\n\nüßù‚Äç‚ôÇÔ∏è El elfo llora l√°grimas corrompidas mientras contempla como su pureza se desvanece inexorablemente.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un gemido putrefacto. **{mascota_no_muerto}** entra al campo de batalla y ataca corruptamente al elfo contaminado que se defiende con repugnancia. El **{mascota_elfo}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, corrupci√≥n inevitable contra repugnancia desesperada en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del no muerto y el elfo contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_no_muerto}/{hp_total_no_muerto} vs {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round4": "üíÄ **¬°ROUND FINAL!** El elfo decide poner fin a esta lucha.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°Antes de corromperme completamente, te destruir√©!'\nüíÄ **No Muerto:** '...'\n\n‚ö° Frotando su **{accesorio_elfo}** se lanza contra el no muerto con pureza desesperada. El no muerto lo mira con inevitabilidad y lanza su ataque mientras su **{accesorio_no_muerto}** vibra por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El elfo purifica el coraz√≥n necr√≥tico con sus √∫ltimas fuerzas mientras el no muerto corrompe completamente el alma √©lfica.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_elfo}/{hp_total_elfo} vs {hp_final_no_muerto}/{hp_total_no_muerto}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 7 - ELFO COMIENZA
    {
        "round1": "üßù‚Äç‚ôÇÔ∏è **El guerrero {titulo_elfo}** entra al campo de batalla con la arrogancia de los inmortales puros, empu√±ando su **{arma_elfo}** con el desprecio hacia las abominaciones silenciosas.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Espectro mudo, al menos cuando mueras no tendr√© que escuchar tus gemidos.'\nüíÄ **No Muerto:** '...'\n\n‚ö° El elfo lanza un corte cruel directo a las piernas necr√≥ticas. El no muerto tambalea y contraataca con determinaci√≥n silenciosa.\n\nü©∏ El **{titulo_elfo}** logr√≥ cortar ambos tendones de las piernas del no muerto dej√°ndolo arrastr√°ndose. Icor negro brota mientras el no muerto se arrastra por el suelo.\n\nüßù‚Äç‚ôÇÔ∏è El elfo r√≠e con crueldad viendo como el no muerto se arrastra como un gusano mientras planea m√°s humillaciones.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round2": "üíÄ **El {titulo_no_muerto}** contraataca arrastr√°ndose con la determinaci√≥n de los malditos pero la agilidad del **{armadura_elfo}** bendecida por los dioses hace que el ataque rastrero sea esquivado por la gracia celestial.\n\nüíÄ **No Muerto:** '...'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°Qu√© pat√©tico! ¬°Un gusano arrastr√°ndose es m√°s digno que t√∫!'\n\n‚ö° El no muerto descarga ataques desde el suelo buscando derribar al elfo. El elfo salta alrededor del rastrero burl√°ndose de su situaci√≥n.\n\nü©∏ Las garras necr√≥ticas apenas alcanzan los tobillos √©lficos. El elfo baila sobre el no muerto arrastr√°ndose.\n\nüßù‚Äç‚ôÇÔ∏è El elfo contin√∫a burl√°ndose: '¬°Mira c√≥mo se arrastra el gran no muerto! ¬°Qu√© espect√°culo m√°s lamentable!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha una carcajada s√°dica. **{mascota_elfo}** entra al campo de batalla y ataca burlonamente al no muerto que se arrastra que se defiende desde el suelo. El **{mascota_no_muerto}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, burla s√°dica contra determinaci√≥n rastrera en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del elfo y el no muerto contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_elfo}/{hp_total_elfo} vs {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round4": "üßù‚Äç‚ôÇÔ∏è **¬°ROUND FINAL!** El no muerto decide poner fin a esta lucha.\n\nüíÄ **No Muerto:** '...'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°Perfecto! ¬°Es hora de terminar con este gusano rastrero!'\n\n‚ö° Frotando su **{accesorio_no_muerto}** se arrastra contra el elfo con determinaci√≥n final. El elfo lo mira con diversi√≥n cruel y lanza su ataque mientras su **{accesorio_elfo}** resplandece por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El no muerto agarra al elfo desde el suelo y lo arrastra consigo mientras el elfo le aplasta el cr√°neo con sus botas.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_no_muerto}/{hp_total_no_muerto} vs {hp_final_elfo}/{hp_total_elfo}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },


        # NARRACION 8 - NO MUERTO COMIENZA
    {
        "round1": "üíÄ **El guerrero {titulo_no_muerto}** entra al campo de batalla con la sed de almas perfectas, empu√±ando su **{arma_no_muerto}** que vibra con hambre por el alma √©lfica pura.\n\nüíÄ **No Muerto:** '...'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Cosechador de almas, jam√°s tocar√°s mi esencia inmortal con tus garras malditas.'\n\n‚ö° El no muerto lanza garras espectrales directo al alma √©lfica. El elfo retrocede aterrorizado y contraataca con desesperaci√≥n sagrada.\n\nü©∏ El **{titulo_no_muerto}** logr√≥ tocar el alma √©lfica parcialmente dren√°ndola. Sangre dorada brota mientras el elfo siente como su esencia se desvanece lentamente.\n\nüíÄ El no muerto saborea la esencia √©lfica drenada mientras planea arrastrar el alma perfecta al abismo eterno.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round2": "üßù‚Äç‚ôÇÔ∏è **El {titulo_elfo}** contraataca con el alma parcialmente drenada con la desesperaci√≥n de los condenados pero la hambre del **{armadura_no_muerto}** alimentada con almas robadas hace que el ataque desesperado sea absorbido por la colecci√≥n de esencias.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°Mi alma! ¬°Maldito ladr√≥n de esencias!'\nüíÄ **No Muerto:** '...'\n\n‚ö° El elfo descarga ataques desesperados buscando recuperar su alma robada. El no muerto mantiene su hambre saboreando la esencia √©lfica mientras planea el robo completo.\n\nü©∏ Las armas √©lficas logran impactar pero la colecci√≥n de almas protege al ladr√≥n. El elfo se debilita m√°s con cada segundo.\n\nüßù‚Äç‚ôÇÔ∏è El elfo llora desesperadamente mientras siente como su alma es devorada lentamente por el cosechador.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un susurro del abismo. **{mascota_no_muerto}** entra al campo de batalla y ataca hambrientamente al elfo con el alma drenada que se defiende d√©bilmente. El **{mascota_elfo}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, hambre abismal contra debilidad espiritual en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del no muerto y el elfo contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_no_muerto}/{hp_total_no_muerto} vs {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round4": "üíÄ **¬°ROUND FINAL!** El elfo decide poner fin a esta lucha.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°Antes de que robes mi alma completamente, te llevar√© conmigo!'\nüíÄ **No Muerto:** '...'\n\n‚ö° Frotando su **{accesorio_elfo}** se lanza contra el no muerto con alma desesperada. El no muerto lo mira con hambre infinita y lanza su ataque mientras su **{accesorio_no_muerto}** late por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El elfo purifica el coraz√≥n necr√≥tico con sus √∫ltimas fuerzas mientras el no muerto drena completamente su alma y la arrastra al infierno.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_elfo}/{hp_total_elfo} vs {hp_final_no_muerto}/{hp_total_no_muerto}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 9 - ELFO COMIENZA
    {
        "round1": "üßù‚Äç‚ôÇÔ∏è **El guerrero {titulo_elfo}** entra al campo de batalla con la pureza de los inmortales sagrados, empu√±ando su **{arma_elfo}** con la luz que repele las sombras del abismo.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Demonio silencioso, mi alma pura es demasiado brillante para tus garras infernales.'\nüíÄ **No Muerto:** '...'\n\n‚ö° El elfo lanza un corte purificador directo al pecho necr√≥tico. El no muerto bloquea espectralmente y contraataca con hambre abismal.\n\nü©∏ El **{titulo_elfo}** logr√≥ abrir una grieta purificadora en el torso del no muerto. Icor negro brota mientras el no muerto observa como la luz lo quema internamente.\n\nüßù‚Äç‚ôÇÔ∏è El elfo sonr√≠e con superioridad viendo como su pureza da√±a al cazador de almas mientras planea m√°s purificaci√≥n.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round2": "üíÄ **El {titulo_no_muerto}** contraataca quem√°ndose con la determinaci√≥n de los condenados pero la pureza del **{armadura_elfo}** imbuida con luz sagrada hace que el ataque abismal sea purificado por la santidad ancestral.\n\nüíÄ **No Muerto:** '...'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Mi pureza quema tu esencia maldita, ¬øverdad, cosechador pat√©tico?'\n\n‚ö° El no muerto descarga ataques necr√≥ticos buscando contaminar la pureza √©lfica. El elfo mantiene su santidad purificando cada ataque con luz sagrada.\n\nü©∏ Las garras necr√≥ticas logran impactar pero la luz purificadora neutraliza toda corrupci√≥n. El no muerto se quema m√°s con cada contacto.\n\nüíÄ El no muerto retrocede humeando mientras contempla como su hambre de almas es rechazada por la pureza perfecta.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un canto purificador. **{mascota_elfo}** entra al campo de batalla y ataca luminosamente al no muerto quem√°ndose que se defiende humeando. El **{mascota_no_muerto}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, luz purificadora contra hambre humeante en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del elfo y el no muerto contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_elfo}/{hp_total_elfo} vs {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round4": "üßù‚Äç‚ôÇÔ∏è **¬°ROUND FINAL!** El no muerto decide poner fin a esta lucha.\n\nüíÄ **No Muerto:** '...'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Perfecto, es hora de purificar completamente esta abominaci√≥n.'\n\n‚ö° Frotando su **{accesorio_no_muerto}** se lanza contra el elfo con hambre desesperada. El elfo lo mira con pureza absoluta y lanza su ataque mientras su **{accesorio_elfo}** vibra por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El no muerto logra tocar el alma √©lfica con sus √∫ltimas fuerzas mientras el elfo lo purifica completamente con luz sagrada.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_no_muerto}/{hp_total_no_muerto} vs {hp_final_elfo}/{hp_total_elfo}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 10 - NO MUERTO COMIENZA
    {
        "round1": "üíÄ **El guerrero {titulo_no_muerto}** entra al campo de batalla con la inevitabilidad del infierno, empu√±ando su **{arma_no_muerto}** que susurra promesas de condenaci√≥n eterna.\n\nüíÄ **No Muerto:** '...'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Heraldo del abismo, mi alma inmortal jam√°s conocer√° las llamas infernales.'\n\n‚ö° El no muerto lanza cadenas espectrales directo al alma √©lfica. El elfo lucha desesperadamente y contraataca con terror sagrado.\n\nü©∏ El **{titulo_no_muerto}** logr√≥ encadenar parcialmente el alma √©lfica al abismo. Sangre dorada brota mientras el elfo siente como es arrastrado hacia la condenaci√≥n.\n\nüíÄ El no muerto sonr√≠e silenciosamente viendo como las cadenas infernales se enredan alrededor del alma perfecta.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round2": "üßù‚Äç‚ôÇÔ∏è **El {titulo_elfo}** contraataca encadenado con la desesperaci√≥n de los condenados pero la inevitabilidad del **{armadura_no_muerto}** forjada en las llamas del infierno hace que el ataque desesperado sea absorbido por la condenaci√≥n eterna.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°Las cadenas del infierno! ¬°No puedo... liberarme!'\nüíÄ **No Muerto:** '...'\n\n‚ö° El elfo descarga ataques desesperados buscando romper las cadenas infernales. El no muerto mantiene su inevitabilidad tirando del alma hacia el abismo.\n\nü©∏ Las armas √©lficas logran impactar pero las cadenas se fortalecen con cada golpe. El elfo es arrastrado m√°s cerca del infierno.\n\nüßù‚Äç‚ôÇÔ∏è El elfo grita de terror mientras siente como su alma es arrastrada inexorablemente hacia la condenaci√≥n eterna.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un eco del infierno. **{mascota_no_muerto}** entra al campo de batalla y ataca infernalmente al elfo encadenado que se defiende con terror. El **{mascota_elfo}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, inevitabilidad infernal contra terror encadenado en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del no muerto y el elfo contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_no_muerto}/{hp_total_no_muerto} vs {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round4": "üíÄ **¬°ROUND FINAL!** El elfo decide poner fin a esta lucha.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°Prefiero morir libre que vivir encadenado al infierno!'\nüíÄ **No Muerto:** '...'\n\n‚ö° Frotando su **{accesorio_elfo}** se lanza contra el no muerto con libertad desesperada. El no muerto lo mira con inevitabilidad final y lanza su ataque mientras su **{accesorio_no_muerto}** resplandece por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El elfo purifica las cadenas infernales con sus √∫ltimas fuerzas mientras el no muerto arrastra su alma completamente al abismo.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_elfo}/{hp_total_elfo} vs {hp_final_no_muerto}/{hp_total_no_muerto}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 11 - ELFO COMIENZA
    {
        "round1": "üßù‚Äç‚ôÇÔ∏è **El guerrero {titulo_elfo}** entra al campo de batalla con la resistencia de los inmortales libres, empu√±ando su **{arma_elfo}** con la determinaci√≥n de mantener su alma pura.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Carcelero de almas, mi esp√≠ritu libre jam√°s conocer√° las cadenas de tu infierno.'\nüíÄ **No Muerto:** '...'\n\n‚ö° El elfo lanza un corte liberador directo a las cadenas espectrales del no muerto. El no muerto bloquea infernalmente y contraataca con hambre de esclavitud.\n\nü©∏ El **{titulo_elfo}** logr√≥ cortar varias cadenas espectrales del no muerto liber√°ndolas. Icor negro brota mientras el no muerto observa como sus herramientas de esclavitud se rompen.\n\nüßù‚Äç‚ôÇÔ∏è El elfo sonr√≠e triunfante viendo como las cadenas rotas se desvanecen mientras planea m√°s liberaci√≥n.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round2": "üíÄ **El {titulo_no_muerto}** contraataca con cadenas rotas con la furia de los carceleros pero la libertad del **{armadura_elfo}** bendecida con independencia hace que el ataque esclavizador sea resistido por la autonom√≠a sagrada.\n\nüíÄ **No Muerto:** '...'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Sin tus cadenas eres solo otro cad√°ver pat√©tico.'\n\n‚ö° El no muerto descarga ataques infernales buscando forjar nuevas cadenas de esclavitud. El elfo mantiene su libertad resistiendo cada intento de esclavizaci√≥n.\n\nü©∏ Las garras necr√≥ticas logran impactar pero la libertad √©lfica las repele. El no muerto lucha por crear nuevas cadenas.\n\nüíÄ El no muerto permanece silencioso mientras contempla como su poder de esclavizaci√≥n es neutralizado por la libertad pura.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un canto de libertad. **{mascota_elfo}** entra al campo de batalla y ataca libremente al no muerto sin cadenas que se defiende limitadamente. El **{mascota_no_muerto}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, libertad cantarina contra limitaci√≥n sin cadenas en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del elfo y el no muerto contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_elfo}/{hp_total_elfo} vs {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round4": "üßù‚Äç‚ôÇÔ∏è **¬°ROUND FINAL!** El no muerto decide poner fin a esta lucha.\n\nüíÄ **No Muerto:** '...'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Es hora de liberar definitivamente el mundo de tu presencia esclavizadora.'\n\n‚ö° Frotando su **{accesorio_no_muerto}** se lanza contra el elfo con hambre final. El elfo lo mira con libertad absoluta y lanza su ataque mientras su **{accesorio_elfo}** late por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El no muerto logra tocar el alma √©lfica con sus √∫ltimas cadenas mientras el elfo lo libera definitivamente con luz purificadora.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_no_muerto}/{hp_total_no_muerto} vs {hp_final_elfo}/{hp_total_elfo}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },


        # NARRACION 12 - NO MUERTO COMIENZA
    {
        "round1": "üíÄ **El guerrero {titulo_no_muerto}** entra al campo de batalla con la sed eterna de perfecci√≥n, empu√±ando su **{arma_no_muerto}** que anhela corromper la belleza inmaculada.\n\nüíÄ **No Muerto:** '...'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Corrompedor de belleza, jam√°s manchar√°s mi perfecci√≥n con tu toque putrefacto.'\n\n‚ö° El no muerto lanza garras corruptoras directo al rostro perfecto √©lfico. El elfo esquiva horrorizado y contraataca con vanidad desesperada.\n\nü©∏ El **{titulo_no_muerto}** logr√≥ corromper parcialmente el cabello √©lfico volvi√©ndolo gris y quebradizo. Sangre dorada brota mientras el elfo grita por su belleza arruinada.\n\nüíÄ El no muerto observa con satisfacci√≥n como los mechones perfectos se convierten en hebras muertas y quebradizas.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round2": "üßù‚Äç‚ôÇÔ∏è **El {titulo_elfo}** contraataca con el cabello corrompido con la histeria de los desfigurados pero la corrupci√≥n del **{armadura_no_muerto}** alimentada con belleza robada hace que el ataque hist√©rico sea absorbido por la colecci√≥n de perfecci√≥n.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°Mi cabello perfecto! ¬°Maldito ladr√≥n de belleza!'\nüíÄ **No Muerto:** '...'\n\n‚ö° El elfo descarga ataques enloquecidos buscando recuperar su belleza perdida. El no muerto mantiene su corrupci√≥n extendiendo la fealdad con cada contacto.\n\nü©∏ Las armas √©lficas logran impactar pero la corrupci√≥n se extiende m√°s. El elfo se desfigura m√°s con cada segundo.\n\nüßù‚Äç‚ôÇÔ∏è El elfo llora desesperadamente mientras contempla como su perfecci√≥n se marchita bajo el toque maldito.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un susurro corrompedor. **{mascota_no_muerto}** entra al campo de batalla y ataca corruptivamente al elfo desfigurado que se defiende vanidosamente. El **{mascota_elfo}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, corrupci√≥n extensiva contra vanidad desesperada en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del no muerto y el elfo contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_no_muerto}/{hp_total_no_muerto} vs {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round4": "üíÄ **¬°ROUND FINAL!** El elfo decide poner fin a esta lucha.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°Antes de que corrompas toda mi belleza, te enviar√© al abismo!'\nüíÄ **No Muerto:** '...'\n\n‚ö° Frotando su **{accesorio_elfo}** se lanza contra el no muerto con vanidad final. El no muerto lo mira con hambre de perfecci√≥n y lanza su ataque mientras su **{accesorio_no_muerto}** vibra por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El elfo purifica el coraz√≥n necr√≥tico con sus √∫ltimas fuerzas mientras el no muerto corrompe completamente su belleza y arrastra su alma al infierno.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_elfo}/{hp_total_elfo} vs {hp_final_no_muerto}/{hp_total_no_muerto}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 13 - ELFO COMIENZA
    {
        "round1": "üßù‚Äç‚ôÇÔ∏è **El guerrero {titulo_elfo}** entra al campo de batalla con la luminosidad de los seres celestiales, empu√±ando su **{arma_elfo}** que irradia luz purificadora contra las tinieblas.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Sombra del abismo, mi luz celestial quemar√° tu esencia maldita hasta las cenizas.'\nüíÄ **No Muerto:** '...'\n\n‚ö° El elfo lanza rayos de luz pura directo al coraz√≥n necr√≥tico. El no muerto se protege espectralmente y contraataca con tinieblas absorbentes.\n\nü©∏ El **{titulo_elfo}** logr√≥ quemar parcialmente el torso del no muerto con luz sagrada. Icor negro brota mientras el no muerto humea bajo la luz purificadora.\n\nüßù‚Äç‚ôÇÔ∏è El elfo sonr√≠e con superioridad viendo como su luz celestial hace que el no muerto se retuerza humeando.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round2": "üíÄ **El {titulo_no_muerto}** contraataca humeando con la resistencia de las tinieblas pero la luminosidad del **{armadura_elfo}** forjada en luz pura hace que el ataque tenebroso sea disipado por la brillantez celestial.\n\nüíÄ **No Muerto:** '...'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Las tinieblas se desvanecen ante mi brillantez, criatura del abismo.'\n\n‚ö° El no muerto descarga ataques sombr√≠os buscando apagar la luz √©lfica. El elfo mantiene su luminosidad irradiando pureza con cada movimiento.\n\nü©∏ Las garras necr√≥ticas logran impactar pero la luz las purifica al contacto. El no muerto se quema m√°s con cada ataque.\n\nüíÄ El no muerto retrocede humeando mientras contempla como las tinieblas son rechazadas por la luz implacable.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un himno celestial. **{mascota_elfo}** entra al campo de batalla y ataca luminosamente al no muerto humeante que se defiende en las sombras. El **{mascota_no_muerto}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, luminosidad celestial contra resistencia sombr√≠a en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del elfo y el no muerto contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_elfo}/{hp_total_elfo} vs {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round4": "üßù‚Äç‚ôÇÔ∏è **¬°ROUND FINAL!** El no muerto decide poner fin a esta lucha.\n\nüíÄ **No Muerto:** '...'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Es hora de purificar definitivamente esta mancha en la existencia.'\n\n‚ö° Frotando su **{accesorio_no_muerto}** se lanza contra el elfo con tinieblas desesperadas. El elfo lo mira con luz absoluta y lanza su ataque mientras su **{accesorio_elfo}** resplandece por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El no muerto logra envolver al elfo en tinieblas absolutas mientras el elfo explota en luz purificadora que desintegra ambos.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_no_muerto}/{hp_total_no_muerto} vs {hp_final_elfo}/{hp_total_elfo}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 14 - NO MUERTO COMIENZA
    {
        "round1": "üíÄ **El guerrero {titulo_no_muerto}** entra al campo de batalla con la inevitabilidad del fin, empu√±ando su **{arma_no_muerto}** que representa el destino final de toda belleza.\n\nüíÄ **No Muerto:** '...'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Heraldo del fin, mi inmortalidad desaf√≠a tu supuesta inevitabilidad.'\n\n‚ö° El no muerto lanza un ataque del destino directo a la inmortalidad √©lfica. El elfo resiste eternamente y contraataca con persistencia infinita.\n\nü©∏ El **{titulo_no_muerto}** logr√≥ drenar parte de la inmortalidad √©lfica envejeci√©ndolo. Sangre dorada brota mientras el elfo siente como los milenios pesan sobre √©l.\n\nüíÄ El no muerto observa impasible como la juventud eterna se marchita bajo el peso del tiempo acelerado.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round2": "üßù‚Äç‚ôÇÔ∏è **El {titulo_elfo}** contraataca envejecido con la desesperaci√≥n de los mortalizados pero la inevitabilidad del **{armadura_no_muerto}** imbuida con el poder del fin hace que el ataque desesperado sea absorbido por la finalidad absoluta.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°Mi juventud eterna! ¬°Siento el peso de los siglos!'\nüíÄ **No Muerto:** '...'\n\n‚ö° El elfo descarga ataques desesperados buscando recuperar su inmortalidad perdida. El no muerto mantiene su inevitabilidad acelerando el envejecimiento con cada contacto.\n\nü©∏ Las armas √©lficas logran impactar pero el tiempo se acelera m√°s. El elfo envejece m√°s con cada segundo.\n\nüßù‚Äç‚ôÇÔ∏è El elfo llora l√°grimas seniles mientras contempla como su eternidad se desvanece bajo el poder del fin.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha el tic-tac del tiempo. **{mascota_no_muerto}** entra al campo de batalla y ataca temporalmente al elfo envejecido que se defiende d√©bilmente. El **{mascota_elfo}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, inevitabilidad temporal contra debilidad senil en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del no muerto y el elfo contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_no_muerto}/{hp_total_no_muerto} vs {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round4": "üíÄ **¬°ROUND FINAL!** El elfo decide poner fin a esta lucha.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°Antes de que me conviertas en polvo, te llevar√© conmigo!'\nüíÄ **No Muerto:** '...'\n\n‚ö° Frotando su **{accesorio_elfo}** se lanza contra el no muerto con eternidad desesperada. El no muerto lo mira con inevitabilidad final y lanza su ataque mientras su **{accesorio_no_muerto}** late por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El elfo agarra al no muerto y ambos se desintegran juntos mientras el tiempo los consume a ambos.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_elfo}/{hp_total_elfo} vs {hp_final_no_muerto}/{hp_total_no_muerto}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 15 - ELFO COMIENZA (√öLTIMA)
    {
        "round1": "üßù‚Äç‚ôÇÔ∏è **El guerrero {titulo_elfo}** entra al campo de batalla con la perfecci√≥n absoluta de los inmortales, empu√±ando su **{arma_elfo}** con la supremac√≠a eterna sobre todas las formas de existencia.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Abominaci√≥n final, esta batalla decidir√° cual inmortalidad merece prevalecer.'\nüíÄ **No Muerto:** '...'\n\n‚ö° El elfo lanza un ataque de supremac√≠a directo a la existencia necr√≥tica. El no muerto bloquea espectralmente y contraataca con hambre eterna.\n\nü©∏ El **{titulo_elfo}** logr√≥ agrietar la esencia del no muerto con poder supremo. Icor negro brota mientras el no muerto siente como su existencia se tambalea.\n\nüßù‚Äç‚ôÇÔ∏è El elfo sonr√≠e con superioridad final viendo como su perfecci√≥n suprema supera la corrupci√≥n eterna.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round2": "üíÄ **El {titulo_no_muerto}** contraataca tambaleante con la determinaci√≥n eterna pero la supremac√≠a del **{armadura_elfo}** forjada en perfecci√≥n absoluta hace que el ataque eterno sea superado por la excelencia inigualable.\n\nüíÄ **No Muerto:** '...'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Incluso tu eternidad corrupta es inferior a mi perfecci√≥n inmaculada.'\n\n‚ö° El no muerto descarga ataques eternos buscando igualar la supremac√≠a √©lfica. El elfo mantiene su perfecci√≥n demostrando superioridad en cada movimiento.\n\nü©∏ Las garras necr√≥ticas logran impactar pero la supremac√≠a las supera completamente. El no muerto se tambalea m√°s.\n\nüíÄ El no muerto permanece silencioso mientras contempla como su eternidad corrupta es superada por la perfecci√≥n pura.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un coro de supremac√≠a. **{mascota_elfo}** entra al campo de batalla y ataca supremamente al no muerto tambaleante que se defiende eternamente. El **{mascota_no_muerto}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, supremac√≠a perfecta contra eternidad tambaleante en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del elfo y el no muerto contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_elfo}/{hp_total_elfo} vs {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round4": "üßù‚Äç‚ôÇÔ∏è **¬°ROUND FINAL!** El no muerto decide poner fin a esta lucha.\n\nüíÄ **No Muerto:** '...'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Finalmente, la supremac√≠a perfecta prevalecer√° sobre la corrupci√≥n eterna.'\n\n‚ö° Frotando su **{accesorio_no_muerto}** se lanza contra el elfo con eternidad final. El elfo lo mira con supremac√≠a absoluta y lanza su ataque mientras su **{accesorio_elfo}** vibra por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El no muerto abraza al elfo y ambos explotan en una batalla final entre perfecci√≥n y corrupci√≥n que trasciende la existencia misma.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_no_muerto}/{hp_total_no_muerto} vs {hp_final_elfo}/{hp_total_elfo}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    }
],

    
# ‚ô£‚úÖ ENANO VS HUMANO - 15 NARRACIONES
"enano_vs_humano": [
    # NARRACION 1 - ENANO COMIENZA
    {
        "round1": "‚öîÔ∏è **El guerrero {titulo_enano}** entra al campo de batalla con la resistencia inquebrantable de las monta√±as eternas, empu√±ando su **{arma_enano}** con el desprecio hacia la debilidad humana.\n\n‚öîÔ∏è **Enano:** 'Humano d√©bil, tu fragilidad mortal ser√° aplastada como una ramita bajo mis botas.'\nüë® **Humano:** 'Enano terco, mi adaptabilidad superar√° tu resistencia primitiva.'\n\n‚ö° El enano lanza un martillazo devastador directo al pecho humano. El humano esquiva √°gilmente y contraataca con velocidad desesperada.\n\nü©∏ El **{titulo_enano}** logr√≥ fracturar las costillas humanas con fuerza descomunal. Sangre roja brota mientras el humano jadea con dolor pero mantiene su determinaci√≥n.\n\n‚öîÔ∏è El enano gru√±e con satisfacci√≥n viendo como la fragilidad humana se quiebra bajo su fuerza de monta√±a.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",
        
        "round2": "üë® **El {titulo_humano}** contraataca herido con la adaptabilidad de los supervivientes pero la resistencia del **{armadura_enano}** forjada en el coraz√≥n de las monta√±as hace que el ataque adaptativo sea absorbido por la solidez ancestral.\n\nüë® **Humano:** '¬°Maldita armadura de roca viviente!'\n‚öîÔ∏è **Enano:** 'La fragilidad humana jam√°s penetrar√° el acero de mis ancestros.'\n\n‚ö° El humano descarga ataques r√°pidos buscando encontrar un punto d√©bil en la defensa enana. El enano mantiene su posici√≥n confiando en su resistencia legendaria.\n\nü©∏ Los golpes humanos logran impactar pero la resistencia enana los absorbe como lluvia contra granito. El enano apenas se inmuta.\n\nüë® El humano retrocede frustrado mientras siente como su agilidad es in√∫til contra la resistencia de monta√±a.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un rugido monta√±√©s. **{mascota_enano}** entra al campo de batalla y ataca ferozmente al humano herido que se defiende √°gilmente. El **{mascota_humano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, ferocidad monta√±esa contra agilidad desesperada en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del enano y el humano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_enano}/{hp_total_enano} vs {hp_restante_humano}/{hp_total_humano}**",
        
        "round4": "‚öîÔ∏è **¬°ROUND FINAL!** El humano decide poner fin a esta lucha.\n\nüë® **Humano:** '¬°Por la adaptabilidad humana! ¬°Encontrar√© la manera de superarte!'\n‚öîÔ∏è **Enano:** 'Los humanos siempre subestiman la resistencia de las monta√±as.'\n\n‚ö° Frotando su **{accesorio_humano}** se lanza contra el enano con determinaci√≥n adaptativa. El enano lo mira con desprecio y lanza su ataque mientras su **{accesorio_enano}** vibra por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El humano encuentra un punto d√©bil y perfora el coraz√≥n enano mientras el enano le aplasta el cr√°neo con fuerza descomunal.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_humano}/{hp_total_humano} vs {hp_final_enano}/{hp_total_enano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },

        # NARRACION 2 - HUMANO COMIENZA
    {
        "round1": "üë® **El guerrero {titulo_humano}** entra al campo de batalla con el orgullo de los conquistadores, empu√±ando su **{arma_humano}** con la arrogancia de quien domina el mundo.\n\nüë® **Humano:** 'Enano primitivo, nosotros los humanos hemos conquistado reinos mientras ustedes se esconden en t√∫neles.'\n‚öîÔ∏è **Enano:** 'Humano arrogante, nuestro orgullo es m√°s antiguo que toda tu civilizaci√≥n.'\n\n‚ö° El humano lanza un corte despectivo directo al rostro enano. El enano bloquea con indignaci√≥n y contraataca con furia ancestral.\n\nü©∏ El **{titulo_humano}** logr√≥ cortar la barba enana parcialmente dej√°ndola desigual. Sangre roja brota mientras el enano ruge de humillaci√≥n y rabia.\n\nüë® El humano r√≠e con arrogancia viendo como ha herido el orgullo m√°s sagrado del enano.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round2": "‚öîÔ∏è **El {titulo_enano}** contraataca humillado con la furia del orgullo herido pero la versatilidad del **{armadura_humano}** forjada en mil conquistas hace que el ataque orgulloso sea desviado por la experiencia conquistadora.\n\n‚öîÔ∏è **Enano:** '¬°Mi barba sagrada! ¬°Pagar√°s por esta profanaci√≥n, conquistador de pacotilla!'\nüë® **Humano:** 'Los enanos y su obsesi√≥n pat√©tica con pelos faciales.'\n\n‚ö° El enano descarga golpes enloquecidos buscando vengar su orgullo mutilado. El humano mantiene su versatilidad esquivando con experiencia de guerras.\n\nü©∏ Los golpes enanos logran impactar pero la experiencia humana minimiza el da√±o. El humano sonr√≠e burlonamente.\n\n‚öîÔ∏è El enano solloza de rabia mientras el humano se burla de su dolor sagrado con arrogancia conquistadora.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha una risa arrogante. **{mascota_humano}** entra al campo de batalla y ataca despectivamente al enano humillado que se defiende con orgullo herido. El **{mascota_enano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, arrogancia conquistadora contra orgullo herido en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del humano y el enano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_humano}/{hp_total_humano} vs {hp_restante_enano}/{hp_total_enano}**",
        
        "round4": "üë® **¬°ROUND FINAL!** El enano decide poner fin a esta lucha.\n\n‚öîÔ∏è **Enano:** '¬°Por mi barba sagrada! ¬°Tu arrogancia humana ser√° aplastada!'\nüë® **Humano:** 'El orgullo enano es tan fr√°gil como su barba cortada.'\n\n‚ö° Frotando su **{accesorio_enano}** se lanza contra el humano con orgullo vengativo. El humano lo mira con arrogancia suprema y lanza su ataque mientras su **{accesorio_humano}** resplandece por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El enano aplasta el pecho humano con fuerza vengativa mientras el humano le perfora el coraz√≥n con precisi√≥n conquistadora.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_enano}/{hp_total_enano} vs {hp_final_humano}/{hp_total_humano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 3 - ENANO COMIENZA
    {
        "round1": "‚öîÔ∏è **El guerrero {titulo_enano}** entra al campo de batalla con el orgullo milenario de los forjadores, empu√±ando su **{arma_enano}** con la soberbia de quien forja civilizaciones.\n\n‚öîÔ∏è **Enano:** 'Humano presuntuoso, nuestro orgullo forj√≥ las armas con las que conquistaste el mundo.'\nüë® **Humano:** 'Enano obsoleto, hemos superado a sus maestros con nuestra ambici√≥n.'\n\n‚ö° El enano lanza un pu√±etazo orgulloso directo a la mand√≠bula humana. El humano tambalea y contraataca con arrogancia herida.\n\nü©∏ El **{titulo_enano}** logr√≥ romper varios dientes humanos con su pu√±o de hierro. Sangre roja brota mientras el humano escupe dientes rotos con humillaci√≥n.\n\n‚öîÔ∏è El enano recoge los dientes y se los mete en el bolsillo mientras se burla del orgullo humano quebrado.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",
        
        "round2": "üë® **El {titulo_humano}** contraataca desdentado con la arrogancia de los humillados pero la solidez del **{armadura_enano}** templada en orgullo ancestral hace que el ataque vengativo sea absorbido por la soberbia milenaria.\n\nüë® **Humano:** '¬°Mis dientes! ¬°Maldita armadura de artesano obsoleto!'\n‚öîÔ∏è **Enano:** 'Un humano desdentado habla con menos arrogancia.'\n\n‚ö° El humano descarga ataques desesperados buscando vengar su orgullo dental. El enano mantiene su soberbia confiando en su superioridad artesanal.\n\nü©∏ Los golpes humanos rebotan in√∫tilmente contra la soberbia enana. El enano ni siquiera se molesta en defenderse.\n\nüë® El humano babea sangre mientras siente como su arrogancia conquistadora es humillada por la soberbia artesanal.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha una carcajada soberbia. **{mascota_enano}** entra al campo de batalla y ataca burlonamente al humano desdentado que se defiende con arrogancia rota. El **{mascota_humano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, soberbia artesanal contra arrogancia quebrada en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del enano y el humano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_enano}/{hp_total_enano} vs {hp_restante_humano}/{hp_total_humano}**",
        
        "round4": "‚öîÔ∏è **¬°ROUND FINAL!** El humano decide poner fin a esta lucha.\n\nüë® **Humano:** '¬°Por mi orgullo dental! ¬°Te har√© pagar por esta humillaci√≥n!'\n‚öîÔ∏è **Enano:** 'Un humano sin dientes es tan in√∫til como un conquistador sin ej√©rcito.'\n\n‚ö° Frotando su **{accesorio_humano}** se lanza contra el enano con arrogancia desesperada. El enano lo mira con soberbia infinita y lanza su ataque mientras su **{accesorio_enano}** late por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El humano perfora el abdomen enano con arrogancia vengativa mientras el enano le aplasta la cabeza con un martillo.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_humano}/{hp_total_humano} vs {hp_final_enano}/{hp_total_enano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 4 - HUMANO COMIENZA
    {
        "round1": "üë® **El guerrero {titulo_humano}** entra al campo de batalla con la ambici√≥n de los dominadores del mundo, empu√±ando su **{arma_humano}** con el orgullo de la raza superior.\n\nüë® **Humano:** 'Enano anticuado, mientras ustedes se escond√≠an en cuevas, nosotros conquistamos continentes.'\n‚öîÔ∏è **Enano:** 'Humano prepotente, tu orgullo es tan fr√°gil como tu carne mortal.'\n\n‚ö° El humano lanza un corte altivo directo al hombro enano. El enano gru√±e indignado y contraataca con terquedad ofendida.\n\nü©∏ El **{titulo_humano}** logr√≥ cortar profundamente el hombro enano hasta el hueso. Sangre roja brota mientras el enano ruge de dolor y orgullo herido.\n\nüë® El humano sonr√≠e con superioridad viendo como la sangre enana mancha su espada conquistadora.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round2": "‚öîÔ∏è **El {titulo_enano}** contraataca sangrando con la terquedad del orgullo ancestral pero la ambici√≥n del **{armadura_humano}** forjada en conquistas globales hace que el ataque terco sea desviado por la superioridad mundial.\n\n‚öîÔ∏è **Enano:** '¬°Conquistador de pacotilla! ¬°Tu armadura no resistir√° el orgullo de las monta√±as!'\nüë® **Humano:** 'La terquedad enana es pintoresca pero in√∫til ante la ambici√≥n humana.'\n\n‚ö° El enano descarga golpes tercos buscando quebrar la arrogancia humana. El humano mantiene su ambici√≥n confiando en su superioridad conquistadora.\n\nü©∏ Los golpes enanos logran impactar pero la ambici√≥n humana los absorbe como costos de conquista. El humano apenas retrocede.\n\n‚öîÔ∏è El enano se frustra mientras contempla como su terquedad es superada por la ambici√≥n desmedida.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha una risa ambiciosa. **{mascota_humano}** entra al campo de batalla y ataca superiormente al enano sangrante que se defiende tercamente. El **{mascota_enano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, ambici√≥n superior contra terquedad sangrante en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del humano y el enano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_humano}/{hp_total_humano} vs {hp_restante_enano}/{hp_total_enano}**",
        
        "round4": "üë® **¬°ROUND FINAL!** El enano decide poner fin a esta lucha.\n\n‚öîÔ∏è **Enano:** '¬°Por el orgullo de mis ancestros! ¬°Tu arrogancia conquistadora ser√° aplastada!'\nüë® **Humano:** 'La terquedad enana siempre cede ante la ambici√≥n humana.'\n\n‚ö° Frotando su **{accesorio_enano}** se lanza contra el humano con orgullo ancestral. El humano lo mira con ambici√≥n suprema y lanza su ataque mientras su **{accesorio_humano}** vibra por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El enano destroza las costillas humanas con terquedad final mientras el humano le atraviesa el coraz√≥n con ambici√≥n conquistadora.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_enano}/{hp_total_enano} vs {hp_final_humano}/{hp_total_humano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 5 - ENANO COMIENZA
    {
        "round1": "‚öîÔ∏è **El guerrero {titulo_enano}** entra al campo de batalla con la soberbia de los maestros artesanos, empu√±ando su **{arma_enano}** con el desprecio hacia los advenedizos humanos.\n\n‚öîÔ∏è **Enano:** 'Humano novato, nuestro orgullo se forj√≥ en milenios mientras el tuyo es solo vanidad juvenil.'\nüë® **Humano:** 'Enano caduco, nuestro orgullo conquist√≥ el futuro mientras el suyo se qued√≥ en el pasado.'\n\n‚ö° El enano lanza un hachazo despectivo directo a la rodilla humana. El humano salta √°gilmente y contraataca con ambici√≥n feroz.\n\nü©∏ El **{titulo_enano}** logr√≥ fracturar la r√≥tula humana dej√°ndolo cojeando. Sangre roja brota mientras el humano cojea con orgullo herido.\n\n‚öîÔ∏è El enano se burla viendo como el conquistador cojea como un mendigo mientras planea m√°s humillaciones.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",
        
        "round2": "üë® **El {titulo_humano}** contraataca cojeando con la determinaci√≥n de los conquistadores pero la experiencia del **{armadura_enano}** templada en milenios de orgullo hace que el ataque cojo sea f√°cilmente anticipado.\n\nüë® **Humano:** '¬°Mi rodilla! ¬°Maldita armadura de reliquia antigua!'\n‚öîÔ∏è **Enano:** 'Un conquistador cojo conquista solo la l√°stima ajena.'\n\n‚ö° El humano descarga ataques cojeando buscando superar la experiencia milenaria. El enano mantiene su soberbia anticipando cada movimiento limitado.\n\nü©∏ Los golpes humanos logran impactar d√©bilmente pero la experiencia enana los minimiza. El enano bosteza de aburrimiento.\n\nüë® El humano llora de frustraci√≥n mientras cojea in√∫tilmente contra la soberbia milenaria.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha una risa despectiva. **{mascota_enano}** entra al campo de batalla y ataca burlonamente al humano cojo que se defiende como puede. El **{mascota_humano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, burla despectiva contra determinaci√≥n coja en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del enano y el humano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_enano}/{hp_total_enano} vs {hp_restante_humano}/{hp_total_humano}**",
        
        "round4": "‚öîÔ∏è **¬°ROUND FINAL!** El humano decide poner fin a esta lucha.\n\nüë® **Humano:** '¬°Por mi orgullo conquistador! ¬°Cojo o no, seguir√© luchando!'\n‚öîÔ∏è **Enano:** 'Un conquistador cojo es tan in√∫til como un martillo sin mango.'\n\n‚ö° Frotando su **{accesorio_humano}** se lanza cojeando contra el enano con determinaci√≥n final. El enano lo mira con soberbia infinita y lanza su ataque mientras su **{accesorio_enano}** resplandece por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El humano clava su espada en el pecho enano con determinaci√≥n coja mientras el enano le aplasta el cr√°neo con un mazo.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_humano}/{hp_total_humano} vs {hp_final_enano}/{hp_total_enano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },

        # NARRACION 6 - HUMANO COMIENZA
    {
        "round1": "üë® **El guerrero {titulo_humano}** entra al campo de batalla con la arrogancia de los dominadores, empu√±ando su **{arma_humano}** con la soberbia de quien se cree superior a todas las razas.\n\nüë® **Humano:** 'Enano primitivo, somos la raza destinada a gobernar, superiores a elfos y enanos.'\n‚öîÔ∏è **Enano:** 'Humano presuntuoso, tienes la arrogancia de los elfos pero sin su gracia, solo vulgaridad.'\n\n‚ö° El humano lanza un corte arrogante directo al cuello enano. El enano bloquea con desprecio y contraataca con furia comparativa.\n\nü©∏ El **{titulo_humano}** logr√≥ cortar parcialmente la garganta enana abriendo una herida profunda. Sangre roja brota mientras el enano escupe sangre con rabia.\n\nüë® El humano sonr√≠e con superioridad racial viendo como la sangre enana confirma su supremac√≠a.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round2": "‚öîÔ∏è **El {titulo_enano}** contraataca sangrando con la furia de las comparaciones odiosas pero la superioridad del **{armadura_humano}** forjada en conquistas raciales hace que el ataque furioso sea resistido por la arrogancia supremacista.\n\n‚öîÔ∏è **Enano:** '¬°Tienes la vanidad √©lfica pero sin su belleza! ¬°Solo eres un elfo feo y mediocre!'\nüë® **Humano:** 'Somos mejores que elfos porque tenemos ambici√≥n, y mejores que enanos porque tenemos inteligencia.'\n\n‚ö° El enano descarga golpes furiosos comparando al humano con un elfo defectuoso. El humano mantiene su superioridad racial confiando en su destino supremacista.\n\nü©∏ Los golpes enanos logran impactar pero la arrogancia supremacista los absorbe. El humano se siente validado en su superioridad.\n\n‚öîÔ∏è El enano se enfurece m√°s mientras compara la mediocridad humana con la perfecci√≥n √©lfica que al menos es genuina.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha una risa supremacista. **{mascota_humano}** entra al campo de batalla y ataca arrogantemente al enano sangrante que se defiende compar√°ndolo con elfos. El **{mascota_enano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, arrogancia supremacista contra furia comparativa en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del humano y el enano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_humano}/{hp_total_humano} vs {hp_restante_enano}/{hp_total_enano}**",
        
        "round4": "üë® **¬°ROUND FINAL!** El enano decide poner fin a esta lucha.\n\n‚öîÔ∏è **Enano:** '¬°Eres un elfo sin gracia, sin belleza, sin elegancia! ¬°Solo tienes su arrogancia vac√≠a!'\nüë® **Humano:** 'Somos la s√≠ntesis perfecta: la ambici√≥n √©lfica con la resistencia enana.'\n\n‚ö° Frotando su **{accesorio_enano}** se lanza contra el humano con furia comparativa. El humano lo mira con superioridad racial y lanza su ataque mientras su **{accesorio_humano}** late por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El enano destroza la cara humana gritando que es un elfo defectuoso mientras el humano le perfora el coraz√≥n proclamando supremac√≠a racial.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_enano}/{hp_total_enano} vs {hp_final_humano}/{hp_total_humano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 7 - ENANO COMIENZA
    {
        "round1": "‚öîÔ∏è **El guerrero {titulo_enano}** entra al campo de batalla con el desprecio hacia las imitaciones baratas, empu√±ando su **{arma_enano}** con la sa√±a de quien odia las copias defectuosas.\n\n‚öîÔ∏è **Enano:** 'Humano mediocre, eres como un elfo mal hecho: tienes su arrogancia pero no su gracia.'\nüë® **Humano:** 'Enano retr√≥grada, hemos evolucionado m√°s all√° de elfos y enanos primitivos.'\n\n‚ö° El enano lanza un martillazo despectivo directo a la nariz humana. El humano retrocede indignado y contraataca con orgullo herido.\n\nü©∏ El **{titulo_enano}** logr√≥ aplastar la nariz humana completamente desfigur√°ndola. Sangre roja brota a torrentes mientras el humano grita horrorizado por su fealdad.\n\n‚öîÔ∏è El enano r√≠e burlonamente: '¬°Ahora pareces lo que realmente eres: un elfo desfigurado y pat√©tico!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",
        
        "round2": "üë® **El {titulo_humano}** contraataca desfigurado con la vanidad herida de los feos pero la resistencia del **{armadura_enano}** templada en desprecio hacia imitaciones hace que el ataque vanidoso sea absorbido por el asco genuino.\n\nüë® **Humano:** '¬°Mi rostro! ¬°Al menos soy mejor que un enano barbudo y sucio!'\n‚öîÔ∏è **Enano:** 'Un humano feo es peor que un elfo arrogante, al menos ellos son bellos.'\n\n‚ö° El humano descarga ataques hist√©ricos buscando vengar su desfiguraci√≥n. El enano mantiene su desprecio comparando la fealdad humana con la belleza √©lfica.\n\nü©∏ Los golpes humanos logran impactar pero el desprecio enano los absorbe mientras compara. El enano escupe con asco.\n\n‚öîÔ∏è El enano contin√∫a: '¬°Los elfos al menos tienen excusa para ser arrogantes, t√∫ solo eres feo Y arrogante!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha una carcajada despectiva. **{mascota_enano}** entra al campo de batalla y ataca burlonamente al humano desfigurado compar√°ndolo con elfos. El **{mascota_humano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, burla despectiva contra vanidad desfigurada en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del enano y el humano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_enano}/{hp_total_enano} vs {hp_restante_humano}/{hp_total_humano}**",
        
        "round4": "‚öîÔ∏è **¬°ROUND FINAL!** El humano decide poner fin a esta lucha.\n\nüë® **Humano:** '¬°Prefiero ser un elfo feo que un enano sucio!'\n‚öîÔ∏è **Enano:** 'Al menos los elfos son aut√©nticos en su arrogancia, t√∫ eres una copia barata.'\n\n‚ö° Frotando su **{accesorio_humano}** se lanza contra el enano con vanidad desesperada. El enano lo mira con desprecio infinito y lanza su ataque mientras su **{accesorio_enano}** vibra por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El humano atraviesa el pecho enano con vanidad herida mientras el enano le aplasta el cr√°neo gritando que es peor que un elfo.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_humano}/{hp_total_humano} vs {hp_final_enano}/{hp_total_enano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 8 - HUMANO COMIENZA
    {
        "round1": "üë® **El guerrero {titulo_humano}** entra al campo de batalla con la evoluci√≥n de las razas, empu√±ando su **{arma_humano}** con la superioridad de quien ha superado a todos.\n\nüë® **Humano:** 'Enano obsoleto, hemos tomado lo mejor de elfos y enanos y lo hemos mejorado.'\n‚öîÔ∏è **Enano:** 'Humano ladr√≥n, robaste rasgos √©lficos pero los corrompiste con tu mediocridad.'\n\n‚ö° El humano lanza un corte evolucionado directo al brazo enano. El enano gru√±e comparativamente y contraataca con desprecio genuino.\n\nü©∏ El **{titulo_humano}** logr√≥ cortar el brazo enano profundamente hasta el hueso. Sangre roja brota mientras el enano observa su herida con dolor y comparaciones odiosas.\n\nüë® El humano proclama triunfante su superioridad evolutiva sobre las razas primitivas.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round2": "‚öîÔ∏è **El {titulo_enano}** contraataca herido con la autenticidad de lo genuino pero la evoluci√≥n del **{armadura_humano}** mejorada con rasgos robados hace que el ataque aut√©ntico sea superado por la s√≠ntesis superior.\n\n‚öîÔ∏è **Enano:** '¬°Tienes orejas como elfos pero sin su elegancia! ¬°Solo las haces ver rid√≠culas!'\nüë® **Humano:** 'Hemos perfeccionado lo que elfos y enanos dejaron imperfecto.'\n\n‚ö° El enano descarga golpes furiosos comparando los rasgos humanos con los √©lficos originales. El humano mantiene su superioridad evolutiva demostrando mejoras.\n\nü©∏ Los golpes enanos logran impactar pero la evoluci√≥n humana los supera. El humano se siente validado en su superioridad racial.\n\n‚öîÔ∏è El enano se enfurece m√°s: '¬°Tienes la altura √©lfica pero sin su gracia! ¬°Pareces un elfo torpe!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha una proclama evolutiva. **{mascota_humano}** entra al campo de batalla y ataca superiormente al enano herido que se defiende comparando rasgos. El **{mascota_enano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, superioridad evolutiva contra autenticidad comparativa en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del humano y el enano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_humano}/{hp_total_humano} vs {hp_restante_enano}/{hp_total_enano}**",
        
        "round4": "üë® **¬°ROUND FINAL!** El enano decide poner fin a esta lucha.\n\n‚öîÔ∏è **Enano:** '¬°Eres un elfo defectuoso! ¬°Tienes sus rasgos pero los arruinaste con tu vulgaridad!'\nüë® **Humano:** 'Somos la evoluci√≥n natural: lo mejor de todas las razas en una sola.'\n\n‚ö° Frotando su **{accesorio_enano}** se lanza contra el humano con autenticidad furiosa. El humano lo mira con superioridad evolutiva y lanza su ataque mientras su **{accesorio_humano}** resplandece por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El enano destroza el torso humano gritando que arruin√≥ los rasgos √©lficos mientras el humano le perfora el coraz√≥n proclamando evoluci√≥n.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_enano}/{hp_total_enano} vs {hp_final_humano}/{hp_total_humano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 9 - ENANO COMIENZA
    {
        "round1": "‚öîÔ∏è **El guerrero {titulo_enano}** entra al campo de batalla con el asco hacia las imitaciones, empu√±ando su **{arma_enano}** con la furia de quien odia las copias baratas.\n\n‚öîÔ∏è **Enano:** 'Humano impostor, tienes ojos √©lficos pero les falta su luz divina, solo hay vac√≠o.'\nüë® **Humano:** 'Enano celoso, envidi√°is nuestra capacidad de tomar lo mejor de cada raza.'\n\n‚ö° El enano lanza un pu√±etazo furioso directo a los ojos humanos. El humano retrocede protegi√©ndose y contraataca con orgullo sint√©tico.\n\nü©∏ El **{titulo_enano}** logr√≥ reventar el ojo derecho humano completamente. Sangre roja brota mientras el humano grita con el ojo colgando.\n\n‚öîÔ∏è El enano escupe: '¬°Ahora tu ojo √©lfico falso est√° donde merece: destruido como tu vanidad!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",
        
        "round2": "üë® **El {titulo_humano}** contraataca tuerto con la desesperaci√≥n de los mutilados pero la autenticidad del **{armadura_enano}** forjada en pureza racial hace que el ataque sint√©tico sea rechazado por la genuinidad ancestral.\n\nüë® **Humano:** '¬°Mi ojo! ¬°Al menos no soy bajo y barbudo como un animal!'\n‚öîÔ∏è **Enano:** 'Mejor bajo y aut√©ntico que alto y falso como un elfo de imitaci√≥n.'\n\n‚ö° El humano descarga ataques ciegos buscando vengar su mutilaci√≥n ocular. El enano mantiene su autenticidad rechazando la falsedad humana.\n\nü©∏ Los golpes humanos logran impactar d√©bilmente pero la pureza racial los neutraliza. El enano escupe con desprecio genuino.\n\n‚öîÔ∏è El enano contin√∫a: '¬°Tienes cabello √©lfico pero sin su brillo! ¬°Es opaco como tu alma falsa!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un rugido aut√©ntico. **{mascota_enano}** entra al campo de batalla y ataca genuinamente al humano tuerto que se defiende sint√©ticamente. El **{mascota_humano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, autenticidad genuina contra s√≠ntesis falsa en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del enano y el humano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_enano}/{hp_total_enano} vs {hp_restante_humano}/{hp_total_humano}**",
        
        "round4": "‚öîÔ∏è **¬°ROUND FINAL!** El humano decide poner fin a esta lucha.\n\nüë® **Humano:** '¬°Prefiero ser una s√≠ntesis mejorada que un original primitivo!'\n‚öîÔ∏è **Enano:** 'Los elfos son aut√©nticos en su perfecci√≥n, t√∫ eres falso en tu mediocridad.'\n\n‚ö° Frotando su **{accesorio_humano}** se lanza contra el enano con s√≠ntesis desesperada. El enano lo mira con desprecio aut√©ntico y lanza su ataque mientras su **{accesorio_enano}** late por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El humano perfora el abdomen enano con falsedad desesperada mientras el enano le aplasta la cabeza gritando que es un elfo defectuoso.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_humano}/{hp_total_humano} vs {hp_final_enano}/{hp_total_enano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },

        # NARRACION 10 - HUMANO COMIENZA
    {
        "round1": "üë® **El guerrero {titulo_humano}** entra al campo de batalla con la ambici√≥n de los conquistadores de mundos, empu√±ando su **{arma_humano}** con la furia de quien ha superado a todas las razas.\n\nüë® **Humano:** 'Enano de las cavernas, mientras ustedes martillaban en la oscuridad, nosotros conquistamos la superficie.'\n‚öîÔ∏è **Enano:** 'Humano parasitario, chupaste la elegancia √©lfica pero la vomitaste como vulgaridad pura.'\n\n‚ö° El humano lanza un corte conquistador directo al coraz√≥n enano. El enano bloquea con desprecio racial y contraataca con furia comparativa.\n\nü©∏ El **{titulo_humano}** logr√≥ atravesar parcialmente el pecho enano rozando el coraz√≥n. Sangre roja brota a torrentes mientras el enano ruge comparando la mediocridad humana.\n\nüë® El humano grita triunfante proclamando la superioridad de la raza conquistadora sobre los artesanos primitivos.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round2": "‚öîÔ∏è **El {titulo_enano}** contraataca con el coraz√≥n herido con la furia de las comparaciones odiosas pero la conquista del **{armadura_humano}** forjada en dominaci√≥n mundial hace que el ataque comparativo sea superado por la ambici√≥n infinita.\n\n‚öîÔ∏è **Enano:** '¬°Tienes la estatura √©lfica pero caminas como un ogro! ¬°Eres una burla de la elegancia!'\nüë® **Humano:** 'Hemos perfeccionado lo que elfos y enanos dejaron incompleto con nuestra visi√≥n superior.'\n\n‚ö° El enano descarga golpes furiosos comparando cada rasgo humano con su original √©lfico. El humano mantiene su ambici√≥n conquistadora despreciando las comparaciones primitivas.\n\nü©∏ Los golpes enanos logran impactar pero la ambici√≥n mundial los absorbe como costos de conquista. El humano sonr√≠e con superioridad racial.\n\n‚öîÔ∏è El enano grita: '¬°Tienes manos √©lficas pero las usas para la vulgaridad! ¬°Los elfos las usan para el arte!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un rugido conquistador. **{mascota_humano}** entra al campo de batalla y ataca dominantemente al enano herido que se defiende comparando razas. El **{mascota_enano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, dominaci√≥n mundial contra comparaciones furiosas en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del humano y el enano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_humano}/{hp_total_humano} vs {hp_restante_enano}/{hp_total_enano}**",
        
        "round4": "üë® **¬°ROUND FINAL!** El enano decide poner fin a esta lucha.\n\n‚öîÔ∏è **Enano:** '¬°Eres el peor insulto a la raza √©lfica! ¬°Un elfo deformado y sin alma!'\nüë® **Humano:** 'Somos la evoluci√≥n final: la perfecci√≥n de todas las razas en una sola forma superior.'\n\n‚ö° Frotando su **{accesorio_enano}** se lanza contra el humano con furia comparativa final. El humano lo mira con ambici√≥n conquistadora absoluta y lanza su ataque mientras su **{accesorio_humano}** vibra por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El enano destroza el cr√°neo humano gritando que es una parodia √©lfica mientras el humano le arranca el coraz√≥n proclamando supremac√≠a racial.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_enano}/{hp_total_enano} vs {hp_final_humano}/{hp_total_humano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 11 - ENANO COMIENZA
    {
        "round1": "‚öîÔ∏è **El guerrero {titulo_enano}** entra al campo de batalla con la pureza de las razas originales, empu√±ando su **{arma_enano}** con el asco hacia los h√≠bridos corruptos.\n\n‚öîÔ∏è **Enano:** 'Humano mestizo, eres como un elfo que cay√≥ en el lodo y perdi√≥ toda su gracia divina.'\nüë® **Humano:** 'Enano retr√≥grada, somos la s√≠ntesis perfecta mientras ustedes se quedaron estancados.'\n\n‚ö° El enano lanza un hachazo purificador directo al cuello humano. El humano esquiva sint√©ticamente y contraataca con hibridaci√≥n agresiva.\n\nü©∏ El **{titulo_enano}** logr√≥ cortar las venas del cuello humano parcialmente. Sangre roja brota mientras el humano se desangra lentamente sintiendo su hibridaci√≥n debilitarse.\n\n‚öîÔ∏è El enano escupe con desprecio: '¬°Tu sangre ni siquiera es pura! ¬°Es una mezcla asquerosa sin linaje!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",
        
        "round2": "üë® **El {titulo_humano}** contraataca desangr√°ndose con la desesperaci√≥n de los impuros pero la pureza del **{armadura_enano}** templada en linaje ancestral hace que el ataque mestizo sea rechazado por la sangre pura.\n\nüë® **Humano:** '¬°Mi sangre sint√©tica vale m√°s que toda tu pureza primitiva!'\n‚öîÔ∏è **Enano:** 'Los elfos tienen sangre dorada y divina, la tuya es roja y vulgar como la de las bestias.'\n\n‚ö° El humano descarga ataques desesperados buscando validar su hibridaci√≥n sint√©tica. El enano mantiene su pureza racial rechazando la corrupci√≥n mestiza.\n\nü©∏ Los golpes humanos logran impactar pero la pureza ancestral los purifica al contacto. El enano permanece inmaculado.\n\n‚öîÔ∏è El enano contin√∫a despreciando: '¬°Los elfos tienen piel de marfil, la tuya es tosca como cuero de animal!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un rugido de pureza. **{mascota_enano}** entra al campo de batalla y ataca purificadoramente al humano desangrado que se defiende sint√©ticamente. El **{mascota_humano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, pureza racial contra hibridaci√≥n sint√©tica en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del enano y el humano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_enano}/{hp_total_enano} vs {hp_restante_humano}/{hp_total_humano}**",
        
        "round4": "‚öîÔ∏è **¬°ROUND FINAL!** El humano decide poner fin a esta lucha.\n\nüë® **Humano:** '¬°Mi hibridaci√≥n sint√©tica superar√° tu pureza primitiva!'\n‚öîÔ∏è **Enano:** 'Los elfos son puros en su perfecci√≥n, t√∫ eres impuro en tu mediocridad.'\n\n‚ö° Frotando su **{accesorio_humano}** se lanza contra el enano con hibridaci√≥n final. El enano lo mira con pureza absoluta y lanza su ataque mientras su **{accesorio_enano}** resplandece por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El humano contamina la pureza enana con su sangre mestiza mientras el enano lo purifica completamente con su hacha ancestral.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_humano}/{hp_total_humano} vs {hp_final_enano}/{hp_total_enano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 12 - HUMANO COMIENZA
    {
        "round1": "üë® **El guerrero {titulo_humano}** entra al campo de batalla con la innovaci√≥n de los adaptados, empu√±ando su **{arma_humano}** con la superioridad de quien ha mejorado la creaci√≥n.\n\nüë® **Humano:** 'Enano conservador, hemos tomado la belleza √©lfica y la hemos hecho pr√°ctica y funcional.'\n‚öîÔ∏è **Enano:** 'Humano sacr√≠lego, profanaste la perfecci√≥n √©lfica convirti√©ndola en vulgaridad utilitaria.'\n\n‚ö° El humano lanza un corte innovador directo al rostro enano. El enano bloquea tradicionalmente y contraataca con conservadurismo furioso.\n\nü©∏ El **{titulo_humano}** logr√≥ marcar el rostro enano con una cicatriz profunda. Sangre roja brota mientras el enano ruge por la profanaci√≥n de su tradici√≥n.\n\nüë® El humano sonr√≠e con innovaci√≥n triunfante viendo como marca la tradici√≥n enana con su modernidad.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round2": "‚öîÔ∏è **El {titulo_enano}** contraataca marcado con la furia del tradicionalismo pero la innovaci√≥n del **{armadura_humano}** mejorada con funcionalidad pr√°ctica hace que el ataque tradicional sea superado por la eficiencia moderna.\n\n‚öîÔ∏è **Enano:** '¬°Tienes la voz √©lfica pero la usas para gritar como bestia! ¬°Los elfos cantan como √°ngeles!'\nüë® **Humano:** 'Mejoramos la musicalidad √©lfica haci√©ndola √∫til para la guerra y el comercio.'\n\n‚ö° El enano descarga golpes tradicionalistas buscando preservar la pureza original. El humano mantiene su innovaci√≥n adaptando cada ataque tradicional.\n\nü©∏ Los golpes enanos logran impactar pero la innovaci√≥n los convierte en mejoras. El humano evoluciona con cada golpe recibido.\n\n‚öîÔ∏è El enano se exaspera: '¬°Tienes movimientos √©lficos pero sin su gracia! ¬°Pareces un elfo borracho!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un rugido innovador. **{mascota_humano}** entra al campo de batalla y ataca funcionalmente al enano marcado que se defiende tradicionalmente. El **{mascota_enano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, funcionalidad innovadora contra tradicionalismo marcado en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del humano y el enano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_humano}/{hp_total_humano} vs {hp_restante_enano}/{hp_total_enano}**",
        
        "round4": "üë® **¬°ROUND FINAL!** El enano decide poner fin a esta lucha.\n\n‚öîÔ∏è **Enano:** '¬°Eres una profanaci√≥n ambulante de todo lo que los elfos representan!'\nüë® **Humano:** 'Somos la versi√≥n mejorada: funcional, pr√°ctica y superior.'\n\n‚ö° Frotando su **{accesorio_enano}** se lanza contra el humano con tradicionalismo final. El humano lo mira con innovaci√≥n absoluta y lanza su ataque mientras su **{accesorio_humano}** late por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El enano preserva la tradici√≥n atravesando el coraz√≥n humano mientras el humano innova destruyendo el cr√°neo enano con eficiencia.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_enano}/{hp_total_enano} vs {hp_final_humano}/{hp_total_humano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 13 - ENANO COMIENZA
    {
        "round1": "‚öîÔ∏è **El guerrero {titulo_enano}** entra al campo de batalla con la dignidad de las razas puras, empu√±ando su **{arma_enano}** con el honor de quien mantiene la autenticidad ancestral.\n\n‚öîÔ∏è **Enano:** 'Humano falsificador, robaste la esencia √©lfica pero la corrompiste con tu naturaleza inferior.'\nüë® **Humano:** 'Enano anacr√≥nico, evolucionamos m√°s all√° de las limitaciones de razas primitivas.'\n\n‚ö° El enano lanza un golpe dignificado directo al pecho humano. El humano esquiva evolutivamente y contraataca con progreso agresivo.\n\nü©∏ El **{titulo_enano}** logr√≥ hundir su arma en el pecho humano atravesando pulmones. Sangre roja brota mientras el humano se ahoga en su propia sangre evolutiva.\n\n‚öîÔ∏è El enano proclama con dignidad: '¬°As√≠ mueren los falsificadores de la perfecci√≥n √©lfica!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",
        
        "round2": "üë® **El {titulo_humano}** contraataca ahog√°ndose con la desesperaci√≥n de los evolucionados pero la dignidad del **{armadura_enano}** forjada en honor ancestral hace que el ataque progresista sea rechazado por la integridad milenaria.\n\nüë® **Humano:** '*tosiendo sangre* ¬°Al menos evoluciono! ¬°Ustedes se quedaron igual por milenios!'\n‚öîÔ∏è **Enano:** 'Los elfos mantienen su perfecci√≥n sin cambios porque ya son perfectos, t√∫ cambias porque eres defectuoso.'\n\n‚ö° El humano descarga ataques ahog√°ndose buscando validar su evoluci√≥n sint√©tica. El enano mantiene su dignidad preservando la autenticidad ancestral.\n\nü©∏ Los golpes humanos logran impactar d√©bilmente pero la dignidad los absorbe con honor. El enano permanece inmutable.\n\n‚öîÔ∏è El enano contin√∫a: '¬°Los elfos no necesitan evolucionar porque nacieron perfectos! ¬°T√∫ evoluciones porque naciste defectuoso!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un rugido digno. **{mascota_enano}** entra al campo de batalla y ataca honorablemente al humano ahog√°ndose que se defiende evolutivamente. El **{mascota_humano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, dignidad honorable contra evoluci√≥n desesperada en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del enano y el humano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_enano}/{hp_total_enano} vs {hp_restante_humano}/{hp_total_humano}**",
        
        "round4": "‚öîÔ∏è **¬°ROUND FINAL!** El humano decide poner fin a esta lucha.\n\nüë® **Humano:** '*escupiendo sangre* ¬°Si muero, al menos morir√© evolucionado!'\n‚öîÔ∏è **Enano:** 'Muere sabiendo que fuiste una imitaci√≥n barata de la perfecci√≥n √©lfica.'\n\n‚ö° Frotando su **{accesorio_humano}** se lanza contra el enano con evoluci√≥n final. El enano lo mira con dignidad absoluta y lanza su ataque mientras su **{accesorio_enano}** vibra por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El humano abraza al enano arrastr√°ndolo en su evoluci√≥n final mientras el enano lo purifica con dignidad ancestral.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_humano}/{hp_total_humano} vs {hp_final_enano}/{hp_total_enano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 14 - HUMANO COMIENZA
    {
        "round1": "üë® **El guerrero {titulo_humano}** entra al campo de batalla con la ambici√≥n de los perfeccionistas, empu√±ando su **{arma_humano}** con la determinaci√≥n de demostrar su superioridad final.\n\nüë® **Humano:** 'Enano fossilizado, somos la culminaci√≥n evolutiva de todo lo bueno de elfos y enanos.'\n‚öîÔ∏è **Enano:** 'Humano blasfemo, eres un insulto viviente a la memoria de la perfecci√≥n √©lfica original.'\n\n‚ö° El humano lanza un corte culminante directo a la cabeza enana. El enano bloquea ancestralmente y contraataca con memoria sagrada.\n\nü©∏ El **{titulo_humano}** logr√≥ abrir una brecha en el cr√°neo enano exponiendo el cerebro. Sangre roja brota mientras el enano tambalea con la cabeza abierta.\n\nüë® El humano grita triunfante viendo como su culminaci√≥n evolutiva supera la resistencia ancestral.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round2": "‚öîÔ∏è **El {titulo_enano}** contraataca con el cr√°neo abierto con la memoria de la perfecci√≥n original pero la culminaci√≥n del **{armadura_humano}** perfeccionada con evoluci√≥n total hace que el ataque memorioso sea superado por la perfecci√≥n lograda.\n\n‚öîÔ∏è **Enano:** '*con el cerebro expuesto* ¬°Los elfos... ten√≠an... gracia divina! ¬°T√∫ solo... tienes... ambici√≥n vulgar!'\nüë® **Humano:** 'Hemos logrado lo que elfos y enanos nunca pudieron: la perfecci√≥n pr√°ctica y funcional.'\n\n‚ö° El enano descarga golpes con el cerebro expuesto recordando la perfecci√≥n √©lfica original. El humano mantiene su culminaci√≥n demostrando superioridad lograda.\n\nü©∏ Los golpes enanos logran impactar d√©bilmente pero la perfecci√≥n lograda los supera. El humano se siente validado como culminaci√≥n.\n\n‚öîÔ∏è El enano agoniza: '¬°Los elfos... eran... arte puro! ¬°T√∫ eres... copia... industrializada!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un rugido culminante. **{mascota_humano}** entra al campo de batalla y ataca perfectamente al enano con el cr√°neo abierto que se defiende memoriosamente. El **{mascota_enano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, perfecci√≥n culminante contra memoria agonizante en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del humano y el enano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_humano}/{hp_total_humano} vs {hp_restante_enano}/{hp_total_enano}**",
        
        "round4": "üë® **¬°ROUND FINAL!** El enano decide poner fin a esta lucha.\n\n‚öîÔ∏è **Enano:** '*agonizando* ¬°Por la memoria... de la perfecci√≥n... √©lfica original!'\nüë® **Humano:** 'Somos la perfecci√≥n final: la culminaci√≥n de toda la evoluci√≥n racial.'\n\n‚ö° Frotando su **{accesorio_enano}** se lanza contra el humano con memoria final. El humano lo mira con culminaci√≥n absoluta y lanza su ataque mientras su **{accesorio_humano}** resplandece por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El enano abraza al humano con su cerebro expuesto contamin√°ndolo con memoria pura mientras el humano lo culmina con perfecci√≥n evolutiva.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_enano}/{hp_total_enano} vs {hp_final_humano}/{hp_total_humano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 15 - ENANO COMIENZA (√öLTIMA)
    {
        "round1": "‚öîÔ∏è **El guerrero {titulo_enano}** entra al campo de batalla con la sabidur√≠a final de las razas ancestrales, empu√±ando su **{arma_enano}** con la verdad √∫ltima sobre la corrupci√≥n humana.\n\n‚öîÔ∏è **Enano:** 'Humano final, esta batalla decidir√° si la pureza original prevalece sobre la corrupci√≥n evolutiva.'\nüë® **Humano:** 'Enano √∫ltimo, demostraremos que la evoluci√≥n supera siempre a la tradici√≥n estancada.'\n\n‚ö° El enano lanza un ataque de verdad final directo al alma humana. El humano lo recibe evolutivamente y contraataca con progreso absoluto.\n\nü©∏ El **{titulo_enano}** logr√≥ tocar la esencia humana revelando su naturaleza corrupta. Sangre roja brota mientras el humano siente como su evoluci√≥n se tambalea ante la verdad ancestral.\n\n‚öîÔ∏è El enano proclama con sabidur√≠a final: '¬°Ahora ves la verdad: eres una imitaci√≥n defectuosa de la perfecci√≥n √©lfica!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",
        
        "round2": "üë® **El {titulo_humano}** contraataca con la esencia revelada con la desesperaci√≥n de los expuestos pero la sabidur√≠a del **{armadura_enano}** forjada en verdad ancestral hace que el ataque desesperado sea iluminado por la revelaci√≥n final.\n\nüë® **Humano:** '¬°Mi evoluci√≥n es real! ¬°No soy una imitaci√≥n defectuosa!'\n‚öîÔ∏è **Enano:** 'La verdad duele: eres un elfo ca√≠do, una perfecci√≥n corrompida, una belleza arruinada.'\n\n‚ö° El humano descarga ataques desesperados buscando negar la revelaci√≥n de su naturaleza. El enano mantiene su sabidur√≠a exponiendo la verdad con cada golpe.\n\nü©∏ Los golpes humanos logran impactar pero la verdad los convierte en confesiones. El humano se revela m√°s con cada ataque.\n\n‚öîÔ∏è El enano contin√∫a la revelaci√≥n: '¬°Mira tu reflejo: un elfo sin gracia, sin belleza, sin divinidad! ¬°Solo ambici√≥n vac√≠a!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha el eco de la verdad. **{mascota_enano}** entra al campo de batalla y ataca reveladoramente al humano expuesto que se defiende negando su naturaleza. El **{mascota_humano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, verdad reveladora contra negaci√≥n desesperada en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del enano y el humano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_enano}/{hp_total_enano} vs {hp_restante_humano}/{hp_total_humano}**",
        
        "round4": "‚öîÔ∏è **¬°ROUND FINAL!** El humano decide poner fin a esta lucha.\n\nüë® **Humano:** '¬°Aunque sea una imitaci√≥n, soy una imitaci√≥n victoriosa!'\n‚öîÔ∏è **Enano:** 'Al menos reconoces la verdad: eres una copia corrupta de la perfecci√≥n √©lfica.'\n\n‚ö° Frotando su **{accesorio_humano}** se lanza contra el enano con aceptaci√≥n final. El enano lo mira con sabidur√≠a absoluta y lanza su ataque mientras su **{accesorio_enano}** late por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El humano abraza al enano aceptando su naturaleza imitativa mientras el enano lo bendice con sabidur√≠a ancestral en un final que trasciende el odio.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_humano}/{hp_total_humano} vs {hp_final_enano}/{hp_total_enano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    }
],

    
# ‚ô£‚úÖ ORCO VS NO MUERTO - 15 NARRACIONES
"orco_vs_no_muerto": [
    # NARRACION 1 - ORCO COMIENZA
    {
        "round1": "üßå **El guerrero {titulo_orco}** entra al campo de batalla con la furia primitiva de la sangre hirviente, empu√±ando su **{arma_orco}** con el salvajismo de quien vive para la carnicer√≠a.\n\nüßå **Orco:** '¬°Maldita cosa putrefacta! ¬°Voy a destrozarte hasta que no quede nada de tu carne podrida!'\nüíÄ **No Muerto:** '...'\n\n‚ö° El orco lanza un hachazo salvaje directo al cr√°neo del no muerto. El no muerto bloquea espectralmente y contraataca con frialdad mortal.\n\nü©∏ El **{titulo_orco}** logr√≥ agrietar el cr√°neo del no muerto exponiendo cerebro podrido. Icor negro brota mientras el no muerto permanece inmutable ante el dolor.\n\nüßå El orco ruge de satisfacci√≥n viendo los sesos putrefactos pero se frustra al ver que el no muerto no grita de dolor.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round2": "üíÄ **El {titulo_no_muerto}** contraataca con el cr√°neo agrietado con la persistencia de los que no conocen dolor pero la furia del **{armadura_orco}** templada en sangre hirviente hace que el ataque fr√≠o sea absorbido por la rabia primitiva.\n\nüíÄ **No Muerto:** '...'\nüßå **Orco:** '¬°Maldita sea! ¬°No gritas como deber√≠as! ¬°Te har√© sangrar de verdad!'\n\n‚ö° El no muerto descarga ataques g√©lidos buscando enfriar la sangre orca. El orco mantiene su furia hirviente resistiendo la frialdad mortal.\n\nü©∏ Las garras necr√≥ticas logran impactar pero la sangre caliente las rechaza. El orco se enfurece m√°s por la falta de dolor del enemigo.\n\nüíÄ El no muerto observa impasible mientras el orco se frustra por no poder causar sufrimiento genuino.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un rugido primitivo. **{mascota_orco}** entra al campo de batalla y ataca salvajemente al no muerto agrietado que se defiende fr√≠amente. El **{mascota_no_muerto}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, salvajismo caliente contra frialdad putrefacta en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del orco y el no muerto contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_orco}/{hp_total_orco} vs {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round4": "üßå **¬°ROUND FINAL!** El no muerto decide poner fin a esta lucha.\n\nüíÄ **No Muerto:** '...'\nüßå **Orco:** '¬°Cosa silenciosa del demonio! ¬°Vas a morir gritando como todos!'\n\n‚ö° Frotando su **{accesorio_no_muerto}** se lanza contra el orco con frialdad final. El orco lo mira con furia hirviente y lanza su ataque mientras su **{accesorio_orco}** late por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El no muerto congela la sangre orca con frialdad mortal mientras el orco le arranca la cabeza con furia primitiva.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_no_muerto}/{hp_total_no_muerto} vs {hp_final_orco}/{hp_total_orco}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },

        # NARRACION 2 - NO MUERTO COMIENZA
    {
        "round1": "üíÄ **El guerrero {titulo_no_muerto}** entra al campo de batalla con la frialdad eterna de la muerte, empu√±ando su **{arma_no_muerto}** con el hambre insaciable de los que no descansan.\n\nüíÄ **No Muerto:** '...'\nüßå **Orco:** 'Maldito cad√°ver ambulante, te voy a hacer pedazos hasta que vuelvas a tu tumba.'\n\n‚ö° El no muerto lanza garras g√©lidas directo al coraz√≥n orco. El orco gru√±e furioso y contraataca con calor primitivo.\n\nü©∏ El **{titulo_no_muerto}** logr√≥ congelar parcialmente el coraz√≥n orco ralentizando sus latidos. Sangre roja brota helada mientras el orco siente su furia enfriarse.\n\nüíÄ El no muerto observa con satisfacci√≥n silenciosa como la vida caliente se enfr√≠a bajo su toque mortal.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round2": "üßå **El {titulo_orco}** contraataca con el coraz√≥n helado con la furia de los primitivos pero la frialdad del **{armadura_no_muerto}** forjada en muerte eterna hace que el ataque caliente sea enfriado por la persistencia mortal.\n\nüßå **Orco:** '¬°Mi sangre se congela! ¬°Maldita armadura de hielo y muerte!'\nüíÄ **No Muerto:** '...'\n\n‚ö° El orco descarga golpes calientes buscando derretir la frialdad del no muerto. El no muerto mantiene su temperatura mortal absorbiendo el calor vital.\n\nü©∏ Los golpes orcos logran impactar pero la frialdad eterna los enfr√≠a al contacto. El orco siente su furia apag√°ndose.\n\nüßå El orco tiembla de fr√≠o mientras contempla como su calor primitivo es drenado por la muerte ambulante.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un susurro helado. **{mascota_no_muerto}** entra al campo de batalla y ataca fr√≠amente al orco helado que se defiende temblando. El **{mascota_orco}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, frialdad mortal contra calor primitivo en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del no muerto y el orco contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_no_muerto}/{hp_total_no_muerto} vs {hp_restante_orco}/{hp_total_orco}**",
        
        "round4": "üíÄ **¬°ROUND FINAL!** El orco decide poner fin a esta lucha.\n\nüßå **Orco:** '¬°Por mi sangre caliente! ¬°Voy a derretirte con mi furia!'\nüíÄ **No Muerto:** '...'\n\n‚ö° Frotando su **{accesorio_orco}** se lanza contra el no muerto con calor final. El no muerto lo mira con frialdad eterna y lanza su ataque mientras su **{accesorio_no_muerto}** vibra por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El orco incendia al no muerto con furia primitiva mientras el no muerto lo congela completamente con frialdad mortal.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_orco}/{hp_total_orco} vs {hp_final_no_muerto}/{hp_total_no_muerto}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 3 - ORCO COMIENZA
    {
        "round1": "üßå **El guerrero {titulo_orco}** entra al campo de batalla con la brutalidad de los cazadores primitivos, empu√±ando su **{arma_orco}** con la sed de sangre de quien vive para la matanza.\n\nüßå **Orco:** 'Muerto viviente asqueroso, tu carne podrida ser√° perfecta para mis dientes.'\nüíÄ **No Muerto:** '...'\n\n‚ö° El orco lanza una dentellada salvaje directo al cuello del no muerto. El no muerto se protege putrefactamente y contraataca con corrupci√≥n silenciosa.\n\nü©∏ El **{titulo_orco}** logr√≥ arrancar pedazos de carne putrefacta del cuello del no muerto. Icor negro brota mientras el orco escupe la carne corrompida con asco.\n\nüßå El orco grita frustrado: '¬°Sabe a mierda podrida! ¬°Ni siquiera sirves para comer!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round2": "üíÄ **El {titulo_no_muerto}** contraataca con el cuello desgarrado con la corrupci√≥n de los putrefactos pero la vitalidad del **{armadura_orco}** templada en vida primitiva hace que el ataque corrupto sea resistido por la salud salvaje.\n\nüíÄ **No Muerto:** '...'\nüßå **Orco:** '¬°Tu podredumbre no puede corromper mi fuerza vital! ¬°Soy demasiado salvaje para morir!'\n\n‚ö° El no muerto descarga ataques corruptos buscando infectar la vitalidad orca. El orco mantiene su salud primitiva resistiendo la putrefacci√≥n mortal.\n\nü©∏ Las garras putrefactas logran impactar pero la vitalidad salvaje las rechaza. El orco se siente m√°s fuerte con cada ataque resistido.\n\nüíÄ El no muerto permanece silencioso mientras contempla como la vida primitiva resiste su corrupci√≥n ancestral.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un rugido vital. **{mascota_orco}** entra al campo de batalla y ataca vigorosamente al no muerto desgarrado que se defiende putrefactamente. El **{mascota_no_muerto}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, vitalidad primitiva contra putrefacci√≥n silenciosa en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del orco y el no muerto contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_orco}/{hp_total_orco} vs {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round4": "üßå **¬°ROUND FINAL!** El no muerto decide poner fin a esta lucha.\n\nüíÄ **No Muerto:** '...'\nüßå **Orco:** '¬°Cosa putrefacta! ¬°Mi vitalidad aplastar√° tu muerte ambulante!'\n\n‚ö° Frotando su **{accesorio_no_muerto}** se lanza contra el orco con putrefacci√≥n final. El orco lo mira con vitalidad primitiva y lanza su ataque mientras su **{accesorio_orco}** resplandece por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El no muerto corrompe la vitalidad orca con putrefacci√≥n absoluta mientras el orco lo despedaza con fuerza vital pura.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_no_muerto}/{hp_total_no_muerto} vs {hp_final_orco}/{hp_total_orco}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 4 - NO MUERTO COMIENZA
    {
        "round1": "üíÄ **El guerrero {titulo_no_muerto}** entra al campo de batalla con la persistencia de los eternos, empu√±ando su **{arma_no_muerto}** con la paciencia infinita de quien no conoce prisa.\n\nüíÄ **No Muerto:** '...'\nüßå **Orco:** 'Maldito espectro silencioso, al menos grita cuando te destroce.'\n\n‚ö° El no muerto lanza un ataque persistente directo al abdomen orco. El orco ruge impaciente y contraataca con prisa violenta.\n\nü©∏ El **{titulo_no_muerto}** logr√≥ abrir el abdomen orco exponiendo las entra√±as. Sangre roja brota mientras el orco siente sus √≥rganos expuestos al aire.\n\nüíÄ El no muerto observa pacientemente como las entra√±as orcas se derraman lentamente mientras el orco se desespera.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round2": "üßå **El {titulo_orco}** contraataca con las entra√±as expuestas con la impaciencia de los vivos pero la persistencia del **{armadura_no_muerto}** forjada en tiempo infinito hace que el ataque impaciente sea absorbido por la paciencia eterna.\n\nüßå **Orco:** '¬°Mis tripas! ¬°Maldita armadura de paciencia infinita!'\nüíÄ **No Muerto:** '...'\n\n‚ö° El orco descarga golpes desesperados buscando acelerar la muerte del no muerto. El no muerto mantiene su persistencia absorbiendo la prisa con calma eterna.\n\nü©∏ Los golpes orcos logran impactar pero la paciencia infinita los diluye en el tiempo. El orco se desespera m√°s.\n\nüßå El orco llora de frustraci√≥n mientras sostiene sus entra√±as y contempla la paciencia imperturbable del enemigo.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha el eco del tiempo. **{mascota_no_muerto}** entra al campo de batalla y ataca pacientemente al orco destripado que se defiende desesperadamente. El **{mascota_orco}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, paciencia eterna contra desesperaci√≥n vital en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del no muerto y el orco contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_no_muerto}/{hp_total_no_muerto} vs {hp_restante_orco}/{hp_total_orco}**",
        
        "round4": "üíÄ **¬°ROUND FINAL!** El orco decide poner fin a esta lucha.\n\nüßå **Orco:** '¬°Por mis entra√±as destrozadas! ¬°Voy a acabar contigo antes de desangrarme!'\nüíÄ **No Muerto:** '...'\n\n‚ö° Frotando su **{accesorio_orco}** se lanza contra el no muerto con desesperaci√≥n final. El no muerto lo mira con paciencia infinita y lanza su ataque mientras su **{accesorio_no_muerto}** late por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El orco abraza al no muerto arrastr√°ndolo en su desesperaci√≥n mortal mientras el no muerto lo consume con paciencia eterna.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_orco}/{hp_total_orco} vs {hp_final_no_muerto}/{hp_total_no_muerto}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 5 - ORCO COMIENZA
    {
        "round1": "üßå **El guerrero {titulo_orco}** entra al campo de batalla con la ferocidad de los cazadores nocturnos, empu√±ando su **{arma_orco}** con la violencia de quien disfruta el sufrimiento ajeno.\n\nüßå **Orco:** 'Cad√°ver podrido, voy a hacer que sientas dolor aunque est√©s muerto.'\nüíÄ **No Muerto:** '...'\n\n‚ö° El orco lanza un corte s√°dico directo a las articulaciones del no muerto. El no muerto se mueve r√≠gidamente y contraataca con movimientos mec√°nicos.\n\nü©∏ El **{titulo_orco}** logr√≥ cortar los tendones del no muerto haciendo que se mueva como marioneta rota. Icor negro brota mientras el no muerto se tambalea sin coordinaci√≥n.\n\nüßå El orco r√≠e s√°dicamente viendo como el no muerto se mueve como un mu√±eco roto sin control.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round2": "üíÄ **El {titulo_no_muerto}** contraataca tambale√°ndose con la rigidez de los articulados pero la ferocidad del **{armadura_orco}** templada en sadismo primitivo hace que el ataque r√≠gido sea esquivado por la crueldad √°gil.\n\nüíÄ **No Muerto:** '...'\nüßå **Orco:** '¬°Ja! ¬°Ni siquiera puedes moverte bien! ¬°Pareces un espantap√°jaros roto!'\n\n‚ö° El no muerto descarga ataques r√≠gidos buscando impactar con movimientos limitados. El orco mantiene su agilidad s√°dica burl√°ndose de la rigidez enemiga.\n\nü©∏ Los golpes r√≠gidos logran impactar d√©bilmente pero la crueldad √°gil los esquiva f√°cilmente. El orco se divierte con la torpeza.\n\nüíÄ El no muerto permanece silencioso mientras se tambalea como marioneta mientras el orco disfruta su sufrimiento.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha una risa s√°dica. **{mascota_orco}** entra al campo de batalla y ataca cruelmente al no muerto tambaleante que se defiende r√≠gidamente. El **{mascota_no_muerto}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, crueldad √°gil contra rigidez tambaleante en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del orco y el no muerto contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_orco}/{hp_total_orco} vs {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round4": "üßå **¬°ROUND FINAL!** El no muerto decide poner fin a esta lucha.\n\nüíÄ **No Muerto:** '...'\nüßå **Orco:** '¬°Marioneta rota! ¬°Voy a cortarte las cuerdas que te quedan!'\n\n‚ö° Frotando su **{accesorio_no_muerto}** se lanza contra el orco con rigidez final. El orco lo mira con crueldad s√°dica y lanza su ataque mientras su **{accesorio_orco}** vibra por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El no muerto abraza al orco con rigidez mortal mientras el orco lo despedaza con sadismo primitivo.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_no_muerto}/{hp_total_no_muerto} vs {hp_final_orco}/{hp_total_orco}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
        # NARRACION 6 - NO MUERTO COMIENZA
    {
        "round1": "üíÄ **El guerrero {titulo_no_muerto}** entra al campo de batalla con la malicia eterna de los demonios silenciosos, empu√±ando su **{arma_no_muerto}** con el odio acumulado de milenios.\n\nüíÄ **No Muerto:** '...'\nüßå **Orco:** 'Demonio silencioso, tu carne putrefacta va a decorar mi hacha como trofeo.'\n\n‚ö° El no muerto lanza un corte malicioso directo al rostro orco. El orco gru√±e demon√≠acamente y contraataca con furia infernal.\n\nü©∏ El **{titulo_no_muerto}** logr√≥ abrir la mejilla orca de oreja a oreja exponiendo dientes y mand√≠bula. Sangre roja brota mientras el orco ruge con la cara desgarrada.\n\nüíÄ El no muerto observa con satisfacci√≥n silenciosa como la sangre demoniaca mancha su arma corrupta.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round2": "üßå **El {titulo_orco}** contraataca con la cara desgarrada con la furia demoniaca de los violentos pero la malicia del **{armadura_no_muerto}** forjada en odio eterno hace que el ataque furioso sea absorbido por el rencor milenario.\n\nüßå **Orco:** '¬°Mi cara! ¬°Maldita armadura de rencor eterno, demonio podrido!'\nüíÄ **No Muerto:** '...'\n\n‚ö° El orco descarga golpes furiosos buscando quebrar el rencor del no muerto. El no muerto mantiene su malicia absorbiendo la furia con odio acumulado.\n\nü©∏ Los golpes orcos logran impactar pero el rencor eterno los convierte en m√°s odio. El no muerto se fortalece con cada ataque recibido.\n\nüßå El orco escupe sangre por la herida facial mientras contempla como su furia alimenta al enemigo demoniaco.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un susurro malicioso. **{mascota_no_muerto}** entra al campo de batalla y ataca rencorsamente al orco desfigurado que se defiende furiosamente. El **{mascota_orco}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, rencor eterno contra furia desfigurada en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del no muerto y el orco contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_no_muerto}/{hp_total_no_muerto} vs {hp_restante_orco}/{hp_total_orco}**",
        
        "round4": "üíÄ **¬°ROUND FINAL!** El orco decide poner fin a esta lucha.\n\nüßå **Orco:** '¬°Por mi cara destrozada! ¬°Voy a hacerte pagar, demonio silencioso!'\nüíÄ **No Muerto:** '...'\n\n‚ö° Frotando su **{accesorio_orco}** se lanza contra el no muerto con furia desfigurada. El no muerto lo mira con malicia eterna y lanza su ataque mientras su **{accesorio_no_muerto}** resplandece por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El orco clava su hacha en el pecho del no muerto con furia demoniaca mientras el no muerto le atraviesa el coraz√≥n con rencor eterno.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_orco}/{hp_total_orco} vs {hp_final_no_muerto}/{hp_total_no_muerto}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 7 - ORCO COMIENZA
    {
        "round1": "üßå **El guerrero {titulo_orco}** entra al campo de batalla con la violencia demoniaca de los sanguinarios, empu√±ando su **{arma_orco}** con la sed de tortura de quien disfruta la agon√≠a ajena.\n\nüßå **Orco:** 'Cad√°ver ambulante, voy a arrancarte pedazo por pedazo hasta que supliques por la muerte definitiva.'\nüíÄ **No Muerto:** '...'\n\n‚ö° El orco lanza un hachazo torturador directo a los dedos del no muerto. El no muerto se protege instintivamente y contraataca con persistencia siniestra.\n\nü©∏ El **{titulo_orco}** logr√≥ cortar tres dedos del no muerto dej√°ndolos colgando por tendones. Icor negro brota mientras los dedos se bambolean grotescamente.\n\nüßå El orco r√≠e demon√≠acamente viendo los dedos mutilados: '¬°As√≠ vas a quedar completo cuando termine contigo!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round2": "üíÄ **El {titulo_no_muerto}** contraataca mutilado con la persistencia de los desmembrados pero la violencia del **{armadura_orco}** templada en sadismo demoniaco hace que el ataque mutilado sea superado por la crueldad refinada.\n\nüíÄ **No Muerto:** '...'\nüßå **Orco:** '¬°Sin dedos no puedes agarrar bien tu arma! ¬°Eres m√°s in√∫til que un cad√°ver normal!'\n\n‚ö° El no muerto descarga golpes torpes buscando impactar con manos mutiladas. El orco mantiene su sadismo esquivando f√°cilmente los ataques defectuosos.\n\nü©∏ Los golpes mutilados logran rozar apenas pero la crueldad demoniaca los convierte en m√°s diversi√≥n. El orco disfruta la impotencia enemiga.\n\nüßå El orco contin√∫a torturando: '¬°Vamos! ¬°Intenta tocarme con esos mu√±ones pat√©ticos!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha una risa torturadora. **{mascota_orco}** entra al campo de batalla y ataca s√°dicamente al no muerto mutilado que se defiende torpemente. El **{mascota_no_muerto}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, sadismo demoniaco contra persistencia mutilada en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del orco y el no muerto contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_orco}/{hp_total_orco} vs {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round4": "üßå **¬°ROUND FINAL!** El no muerto decide poner fin a esta lucha.\n\nüíÄ **No Muerto:** '...'\nüßå **Orco:** '¬°Mu√±ones in√∫tiles! ¬°Voy a completar tu desmembramiento!'\n\n‚ö° Frotando su **{accesorio_no_muerto}** se lanza contra el orco con persistencia final. El orco lo mira con sadismo demoniaco y lanza su ataque mientras su **{accesorio_orco}** late por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El no muerto abraza al orco con sus mu√±ones arrastr√°ndolo a la muerte mientras el orco lo despedaza completamente con crueldad final.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_no_muerto}/{hp_total_no_muerto} vs {hp_final_orco}/{hp_total_orco}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 8 - NO MUERTO COMIENZA
    {
        "round1": "üíÄ **El guerrero {titulo_no_muerto}** entra al campo de batalla con la corrupci√≥n demoniaca de los eternos, empu√±ando su **{arma_no_muerto}** con la inevitabilidad de la putrefacci√≥n absoluta.\n\nüíÄ **No Muerto:** '...'\nüßå **Orco:** 'Demonio putrefacto, tu carne podrida va a ser perfecta para mis rituales de tortura.'\n\n‚ö° El no muerto lanza un corte corruptor directo al brazo orco. El orco ruge demon√≠acamente y contraataca con violencia primitiva.\n\nü©∏ El **{titulo_no_muerto}** logr√≥ infectar el brazo orco con putrefacci√≥n demoniaca. Sangre roja brota volvi√©ndose negra mientras el brazo se necrosa visiblemente.\n\nüíÄ El no muerto observa satisfecho como la corrupci√≥n se extiende por las venas orcas convirtiendo la carne en podredumbre.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round2": "üßå **El {titulo_orco}** contraataca con el brazo necrosado con la resistencia demoniaca de los infectados pero la corrupci√≥n del **{armadura_no_muerto}** imbuida con putrefacci√≥n eterna hace que el ataque resistente sea absorbido por la podredumbre absoluta.\n\nüßå **Orco:** '¬°Mi brazo se pudre! ¬°Maldita armadura de putrefacci√≥n, demonio corrupto!'\nüíÄ **No Muerto:** '...'\n\n‚ö° El orco descarga golpes desesperados buscando detener la corrupci√≥n. El no muerto mantiene su putrefacci√≥n extendiendo la necrosis con cada contacto.\n\nü©∏ Los golpes orcos logran impactar pero la corrupci√≥n los convierte en m√°s podredumbre. El brazo orco se descompone m√°s r√°pido.\n\nüßå El orco grita horrorizado mientras ve como su brazo se convierte en carne putrefacta que se desprende.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha el hedor de la putrefacci√≥n. **{mascota_no_muerto}** entra al campo de batalla y ataca corruptivamente al orco necrosado que se defiende desesperadamente. El **{mascota_orco}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, corrupci√≥n putrefacta contra resistencia necrosada en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del no muerto y el orco contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_no_muerto}/{hp_total_no_muerto} vs {hp_restante_orco}/{hp_total_orco}**",
        
        "round4": "üíÄ **¬°ROUND FINAL!** El orco decide poner fin a esta lucha.\n\nüßå **Orco:** '¬°Por mi brazo podrido! ¬°Voy a llevarte al infierno conmigo!'\nüíÄ **No Muerto:** '...'\n\n‚ö° Frotando su **{accesorio_orco}** se lanza contra el no muerto con desesperaci√≥n necrosada. El no muerto lo mira con corrupci√≥n eterna y lanza su ataque mientras su **{accesorio_no_muerto}** vibra por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El orco abraza al no muerto contamin√°ndolo con su propia putrefacci√≥n mientras el no muerto lo corrompe completamente hasta los huesos.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_orco}/{hp_total_orco} vs {hp_final_no_muerto}/{hp_total_no_muerto}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 9 - ORCO COMIENZA
    {
        "round1": "üßå **El guerrero {titulo_orco}** entra al campo de batalla con la brutalidad demoniaca de los despiadados, empu√±ando su **{arma_orco}** con la ferocidad de quien no conoce piedad.\n\nüßå **Orco:** 'Demonio silencioso, voy a hacerte gritar aunque tengas las cuerdas vocales podridas.'\nüíÄ **No Muerto:** '...'\n\n‚ö° El orco lanza un golpe despiadado directo a la garganta del no muerto. El no muerto se protege silenciosamente y contraataca con mutismo eterno.\n\nü©∏ El **{titulo_orco}** logr√≥ aplastar la tr√°quea del no muerto haciendo que el aire escape con silbidos. Icor negro brota mientras el no muerto jadea silenciosamente.\n\nüßå El orco grita frustrado: '¬°Ni siquiera as√≠ puedes gritar! ¬°Eres el enemigo m√°s aburrido que he tenido!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round2": "üíÄ **El {titulo_no_muerto}** contraataca con la garganta aplastada con el silencio de los mudos pero la brutalidad del **{armadura_orco}** templada en ferocidad demoniaca hace que el ataque silencioso sea superado por la violencia sonora.\n\nüíÄ **No Muerto:** '...'\nüßå **Orco:** '¬°Al menos haz alg√∫n ruido cuando te golpeo! ¬°Esto no es divertido!'\n\n‚ö° El no muerto descarga golpes silenciosos buscando impactar sin hacer ruido. El orco mantiene su brutalidad esperando escuchar algo del enemigo.\n\nü©∏ Los golpes silenciosos logran impactar pero la ferocidad demoniaca los ignora por aburrimiento. El orco necesita escuchar sufrimiento.\n\nüßå El orco se frustra m√°s: '¬°Maldita sea! ¬°Parece que estoy peleando contra el aire!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un rugido frustrado. **{mascota_orco}** entra al campo de batalla y ataca ruidosamente al no muerto silencioso que se defiende mudamente. El **{mascota_no_muerto}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, ferocidad ruidosa contra silencio absoluto en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del orco y el no muerto contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_orco}/{hp_total_orco} vs {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round4": "üßå **¬°ROUND FINAL!** El no muerto decide poner fin a esta lucha.\n\nüíÄ **No Muerto:** '...'\nüßå **Orco:** '¬°Demonio mudo! ¬°Voy a hacer que al menos tu muerte haga ruido!'\n\n‚ö° Frotando su **{accesorio_no_muerto}** se lanza contra el orco con silencio final. El orco lo mira con brutalidad ruidosa y lanza su ataque mientras su **{accesorio_orco}** resplandece por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El no muerto abraza al orco en silencio mortal mientras el orco lo destroza gritando para llenar el vac√≠o sonoro.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_no_muerto}/{hp_total_no_muerto} vs {hp_final_orco}/{hp_total_orco}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 10 - NO MUERTO COMIENZA
    {
        "round1": "üíÄ **El guerrero {titulo_no_muerto}** entra al campo de batalla con la inevitabilidad demoniaca de la muerte eterna, empu√±ando su **{arma_no_muerto}** con la certeza de quien siempre prevalece.\n\nüíÄ **No Muerto:** '...'\nüßå **Orco:** 'Demonio inevitab le, tu muerte eterna va a encontrarse con mi vida eterna de violencia.'\n\n‚ö° El no muerto lanza un corte inevitable directo al pecho orco. El orco se resiste violentamente y contraataca con vida agresiva.\n\nü©∏ El **{titulo_no_muerto}** logr√≥ abrir una herida mortal en el pecho orco que no deja de sangrar. Sangre roja brota sin cesar mientras el orco siente la muerte acercarse.\n\nüíÄ El no muerto observa pacientemente como la vida orca se desvanece gota a gota sin prisa alguna.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round2": "üßå **El {titulo_orco}** contraataca desangr√°ndose con la resistencia vital de los moribundos pero la inevitabilidad del **{armadura_no_muerto}** forjada en certeza mortal hace que el ataque resistente sea absorbido por el destino final.\n\nüßå **Orco:** '¬°Me desangro! ¬°Maldita armadura de destino final!'\nüíÄ **No Muerto:** '...'\n\n‚ö° El orco descarga golpes desesperados buscando evitar su destino mortal. El no muerto mantiene su inevitabilidad absorbiendo la resistencia con paciencia eterna.\n\nü©∏ Los golpes desesperados logran impactar pero la certeza mortal los convierte en confirmaci√≥n del destino. El orco se debilita m√°s.\n\nüßå El orco llora l√°grimas de sangre mientras siente como la vida se le escapa sin poder detenerla.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha el eco del destino. **{mascota_no_muerto}** entra al campo de batalla y ataca inevitablemente al orco desangrado que se defiende desesperadamente. El **{mascota_orco}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, inevitabilidad mortal contra resistencia desesperada en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del no muerto y el orco contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_no_muerto}/{hp_total_no_muerto} vs {hp_restante_orco}/{hp_total_orco}**",
        
        "round4": "üíÄ **¬°ROUND FINAL!** El orco decide poner fin a esta lucha.\n\nüßå **Orco:** '¬°Por mi vida que se desvanece! ¬°Voy a llevarte conmigo al infierno!'\nüíÄ **No Muerto:** '...'\n\n‚ö° Frotando su **{accesorio_orco}** se lanza contra el no muerto con vida final. El no muerto lo mira con inevitabilidad eterna y lanza su ataque mientras su **{accesorio_no_muerto}** late por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El orco abraza al no muerto arrastr√°ndolo con su muerte mientras el no muerto lo consume con inevitabilidad absoluta.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_orco}/{hp_total_orco} vs {hp_final_no_muerto}/{hp_total_no_muerto}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },

        # NARRACION 11 - ORCO COMIENZA
    {
        "round1": "üßå **El guerrero {titulo_orco}** entra al campo de batalla con la furia infernal de los que no temen la muerte, empu√±ando su **{arma_orco}** con la sed demoniaca de sangre eterna.\n\nüßå **Orco:** '¬°Cad√°ver del infierno! ¬°Prefiero arder en las llamas eternas que vivir sin derramar tu icor podrido!'\nüíÄ **No Muerto:** '...'\n\n‚ö° El orco lanza un tajo infernal directo al cuello del no muerto. El no muerto bloquea espectralmente y contraataca con frialdad abismal.\n\nü©∏ El **{titulo_orco}** logr√≥ abrir la garganta del no muerto exponiendo las v√©rtebras. Icor negro brota como fuente maldita mientras el no muerto mantiene su silencio sepulcral.\n\nüßå El orco ruge con furia demoniaca: '¬°Ni cort√°ndote la cabeza puedo hacerte gritar, maldito mudo del averno!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round2": "üíÄ **El {titulo_no_muerto}** contraataca con la garganta abierta con la persistencia de los condenados pero la furia del **{armadura_orco}** templada en llamas infernales hace que el ataque espectral sea incinerado por la rabia demoniaca.\n\nüíÄ **No Muerto:** '...'\nüßå **Orco:** '¬°Por los fuegos del infierno! ¬°Tu silencio me enloquece m√°s que mil gritos de agon√≠a!'\n\n‚ö° El no muerto descarga ataques fr√≠os buscando apagar las llamas orcas. El orco mantiene su furia infernal ardiendo m√°s con cada ataque recibido.\n\nü©∏ Los golpes espectrales logran impactar pero las llamas demoniacas los evaporan al contacto. El orco se convierte en una antorcha viviente de furia.\n\nüíÄ El no muerto retrocede mientras contempla como las llamas infernales consumen todo a su paso sin importar el dolor.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un rugido infernal. **{mascota_orco}** entra al campo de batalla y ataca ardiendo al no muerto degollado que se defiende fr√≠amente. El **{mascota_no_muerto}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, llamas infernales contra frialdad espectral en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del orco y el no muerto contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_orco}/{hp_total_orco} vs {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round4": "üßå **¬°ROUND FINAL!** El no muerto decide poner fin a esta lucha.\n\nüíÄ **No Muerto:** '...'\nüßå **Orco:** '¬°Por las llamas del averno! ¬°Vamos a arder juntos en el infierno, demonio silencioso!'\n\n‚ö° Frotando su **{accesorio_no_muerto}** se lanza contra el orco con frialdad final. El orco lo mira con furia infernal y lanza su ataque mientras su **{accesorio_orco}** arde por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El no muerto congela las llamas orcas con frialdad abismal mientras el orco lo incinera completamente con furia demoniaca.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_no_muerto}/{hp_total_no_muerto} vs {hp_final_orco}/{hp_total_orco}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 12 - NO MUERTO COMIENZA
    {
        "round1": "üíÄ **El guerrero {titulo_no_muerto}** entra al campo de batalla con la maldici√≥n eterna de los condenados, empu√±ando su **{arma_no_muerto}** con la paciencia infinita de quien ya perdi√≥ todo.\n\nüíÄ **No Muerto:** '...'\nüßå **Orco:** '¬°Espectro maldito! ¬°No me importa si tengo que descender al averno para destrozarte!'\n\n‚ö° El no muerto lanza un corte maldito directo al coraz√≥n orco. El orco ruge sin miedo y contraataca con valent√≠a suicida.\n\nü©∏ El **{titulo_no_muerto}** logr√≥ perforar el coraz√≥n orco con su arma maldita. Sangre roja brota mezcl√°ndose con energ√≠a infernal mientras el orco sonr√≠e desafiando a la muerte.\n\nüíÄ El no muerto observa perplejo como el orco r√≠e con el coraz√≥n atravesado, sin mostrar temor alguno ante la muerte.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round2": "üßå **El {titulo_orco}** contraataca con el coraz√≥n perforado con la valent√≠a de los que abrazan la muerte pero la maldici√≥n del **{armadura_no_muerto}** imbuida con condena eterna hace que el ataque valiente sea absorbido por la desgracia infinita.\n\nüßå **Orco:** '¬°Ja! ¬°Con el coraz√≥n roto sigo peleando! ¬°La muerte es solo el comienzo de mi furia!'\nüíÄ **No Muerto:** '...'\n\n‚ö° El orco descarga golpes temerarios buscando llevar al enemigo con √©l al infierno. El no muerto mantiene su maldici√≥n absorbiendo la valent√≠a con desgracia eterna.\n\nü©∏ Los golpes suicidas logran impactar pero la condena eterna los convierte en m√°s maldici√≥n. El orco se fortalece enfrentando la muerte.\n\nüßå El orco grita desafiante: '¬°Mald√≠ceme todo lo que quieras! ¬°Un orco no conoce el miedo!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha una risa desafiante. **{mascota_orco}** entra al campo de batalla y ataca temerariamente al no muerto maldito que se defiende eternamente. El **{mascota_no_muerto}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, valent√≠a suicida contra maldici√≥n eterna en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del no muerto y el orco contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_no_muerto}/{hp_total_no_muerto} vs {hp_restante_orco}/{hp_total_orco}**",
        
        "round4": "üíÄ **¬°ROUND FINAL!** El orco decide poner fin a esta lucha.\n\nüßå **Orco:** '¬°Por mi sangre demoniaca! ¬°Nos vamos juntos al infierno, espectro cobarde!'\nüíÄ **No Muerto:** '...'\n\n‚ö° Frotando su **{accesorio_orco}** se lanza contra el no muerto con furia final. El no muerto lo mira con maldici√≥n eterna y lanza su ataque mientras su **{accesorio_no_muerto}** vibra por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El orco abraza al no muerto arrastr√°ndolo al abismo mientras el no muerto lo maldice para la eternidad.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_orco}/{hp_total_orco} vs {hp_final_no_muerto}/{hp_total_no_muerto}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 13 - ORCO COMIENZA
    {
        "round1": "üßå **El guerrero {titulo_orco}** entra al campo de batalla con la sed infernal de los berserkers, empu√±ando su **{arma_orco}** con la locura de quien prefiere morir luchando que vivir en paz.\n\nüßå **Orco:** '¬°Demonio putrefacto del averno! ¬°Cada gota de mi sangre que derrames alimentar√° mi furia eterna!'\nüíÄ **No Muerto:** '...'\n\n‚ö° El orco lanza un corte berserker directo al abdomen del no muerto. El no muerto se protege silenciosamente y contraataca con persistencia mortal.\n\nü©∏ El **{titulo_orco}** logr√≥ abrir el vientre del no muerto exponiendo √≥rganos putrefactos. Icor negro brota como r√≠o infernal mientras el orco se ba√±a en la podredumbre enemiga.\n\nüßå El orco grita enloquecido: '¬°Tu podredumbre es el perfume del infierno! ¬°Dame m√°s, demonio silencioso!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round2": "üíÄ **El {titulo_no_muerto}** contraataca destripado con la resistencia de los eviscera dos pero la locura del **{armadura_orco}** templada en frenes√≠ berserker hace que el ataque persistente sea superado por la demencia sanguinaria.\n\nüíÄ **No Muerto:** '...'\nüßå **Orco:** '¬°Por las calderas hirvientes del infierno! ¬°Tu silencio alimenta mi locura m√°s que mil alaridos!'\n\n‚ö° El no muerto descarga golpes silenciosos buscando calmar la locura orca. El orco mantiene su frenes√≠ enloqueciendo m√°s con cada ataque silencioso.\n\nü©∏ Los golpes persistentes logran impactar pero la demencia los convierte en m√°s locura. El orco r√≠e hist√©ricamente mientras pelea.\n\nüßå El orco grita en √©xtasis: '¬°S√≠! ¬°Golp√©ame m√°s! ¬°Cada herida es un regalo del averno!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha una risa demente. **{mascota_orco}** entra al campo de batalla y ataca fren√©ticamente al no muerto destripado que se defiende silenciosamente. El **{mascota_no_muerto}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, frenes√≠ demencial contra resistencia silenciosa en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del orco y el no muerto contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_orco}/{hp_total_orco} vs {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round4": "üßå **¬°ROUND FINAL!** El no muerto decide poner fin a esta lucha.\n\nüíÄ **No Muerto:** '...'\nüßå **Orco:** '¬°Por los r√≠os de lava del infierno! ¬°Esta batalla ser√° mi regalo a los demonios del averno!'\n\n‚ö° Frotando su **{accesorio_no_muerto}** se lanza contra el orco con silencio final. El orco lo mira con locura berserker y lanza su ataque mientras su **{accesorio_orco}** arde por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El no muerto abraza al orco en silencio mortal mientras el orco lo despedaza riendo en √©xtasis demencial.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_no_muerto}/{hp_total_no_muerto} vs {hp_final_orco}/{hp_total_orco}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 14 - NO MUERTO COMIENZA
    {
        "round1": "üíÄ **El guerrero {titulo_no_muerto}** entra al campo de batalla con la frialdad eterna de los espectros del averno, empu√±ando su **{arma_no_muerto}** con la paciencia infinita de la muerte misma.\n\nüíÄ **No Muerto:** '...'\nüßå **Orco:** '¬°Espectro del infierno! ¬°Aunque me congeles la sangre, seguir√© luchando hasta que se hierva de nuevo!'\n\n‚ö° El no muerto lanza un corte g√©lido directo a las piernas orcas. El orco resiste ferozmente y contraataca con calor infernal.\n\nü©∏ El **{titulo_no_muerto}** logr√≥ congelar las piernas orcas hasta los huesos. Sangre roja brota cristalizada mientras el orco sigue peleando sobre piernas heladas.\n\nüíÄ El no muerto observa fascinado como el orco contin√∫a luchando aunque sus piernas est√©n congeladas hasta el tu√©tano.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round2": "üßå **El {titulo_orco}** contraataca con las piernas congeladas con la determinaci√≥n de los temerarios pero la frialdad del **{armadura_no_muerto}** imbuida con hielo eterno hace que el ataque determinado sea enfriado por la paciencia glacial.\n\nüßå **Orco:** '¬°Piernas de hielo! ¬°No me importa! ¬°Un orco pelea hasta con los huesos hechos cubitos!'\nüíÄ **No Muerto:** '...'\n\n‚ö° El orco descarga golpes desafiantes buscando derretir el hielo con su furia. El no muerto mantiene su frialdad congelando m√°s partes del cuerpo orco.\n\nü©∏ Los golpes temerarios logran impactar pero el hielo eterno los congela al contacto. Las manos orcas se cristalizan.\n\nüßå El orco grita desafiante: '¬°Cong√©lame completo si quieres! ¬°Seguir√© luchando como estatua de hielo!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha el crujir del hielo. **{mascota_no_muerto}** entra al campo de batalla y ataca congeladoramente al orco cristalizado que se defiende desafiante. El **{mascota_orco}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, frialdad glacial contra desaf√≠o cristalizado en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del no muerto y el orco contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_no_muerto}/{hp_total_no_muerto} vs {hp_restante_orco}/{hp_total_orco}**",
        
        "round4": "üíÄ **¬°ROUND FINAL!** El orco decide poner fin a esta lucha.\n\nüßå **Orco:** '¬°Por mi sangre cristalizada! ¬°Vamos a explotar juntos como granizada infernal!'\nüíÄ **No Muerto:** '...'\n\n‚ö° Frotando su **{accesorio_orco}** se lanza contra el no muerto con desaf√≠o final. El no muerto lo mira con frialdad eterna y lanza su ataque mientras su **{accesorio_no_muerto}** resplandece por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El orco abraza al no muerto explotando como bomba de hielo mientras el no muerto lo congela en abrazo eterno.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_orco}/{hp_total_orco} vs {hp_final_no_muerto}/{hp_total_no_muerto}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 15 - ORCO COMIENZA (√öLTIMA)
    {
        "round1": "üßå **El guerrero {titulo_orco}** entra al campo de batalla con la furia final de los inmortales del averno, empu√±ando su **{arma_orco}** con la determinaci√≥n suprema de quien abraza la guerra eterna.\n\nüßå **Orco:** '¬°Demonio final del infierno! ¬°Esta batalla decidir√° cu√°l demonio merece reinar en el averno!'\nüíÄ **No Muerto:** '...'\n\n‚ö° El orco lanza un ataque de supremac√≠a demoniaca directo al alma del no muerto. El no muerto lo recibe silenciosamente y contraataca con eternidad corrupta.\n\nü©∏ El **{titulo_orco}** logr√≥ tocar la esencia del no muerto con fuego infernal. Icor negro brota ardiendo mientras el no muerto siente como su frialdad es desafiada por primera vez.\n\nüßå El orco grita triunfante: '¬°Por fin! ¬°Tu silencio se quiebra ante mi furia suprema del infierno!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round2": "üíÄ **El {titulo_no_muerto}** contraataca con la esencia ardiendo con la resistencia de los eternos pero la supremac√≠a del **{armadura_orco}** forjada en furia infernal hace que el ataque eterno sea superado por la dominaci√≥n demoniaca.\n\nüíÄ **No Muerto:** '...'\nüßå **Orco:** '¬°Tu eternidad silenciosa no puede contra mi eternidad de furia! ¬°Soy el demonio supremo!'\n\n‚ö° El no muerto descarga ataques eternos buscando recuperar su supremac√≠a silenciosa. El orco mantiene su dominaci√≥n demostrando que la furia supera al silencio.\n\nü©∏ Los golpes eternos logran impactar pero la dominaci√≥n los convierte en validaci√≥n. El orco se siente confirmado como demonio supremo.\n\nüßå El orco proclama: '¬°El silencio es cobard√≠a! ¬°La furia es honestidad! ¬°Soy el demonio m√°s aut√©ntico!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha el rugido de la supremac√≠a. **{mascota_orco}** entra al campo de batalla y ataca dominantemente al no muerto ardiendo que se defiende eternamente. El **{mascota_no_muerto}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, supremac√≠a infernal contra eternidad ardiente en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del orco y el no muerto contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_orco}/{hp_total_orco} vs {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round4": "üßå **¬°ROUND FINAL!** El no muerto decide poner fin a esta lucha.\n\nüíÄ **No Muerto:** '...'\nüßå **Orco:** '¬°Por la supremac√≠a demoniaca del averno! ¬°Que el mejor demonio reine para la eternidad!'\n\n‚ö° Frotando su **{accesorio_no_muerto}** se lanza contra el orco con eternidad final. El orco lo mira con supremac√≠a absoluta y lanza su ataque mientras su **{accesorio_orco}** late por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El no muerto abraza al orco arrastr√°ndolo a la eternidad silenciosa mientras el orco lo incinera con supremac√≠a infernal en un final que decide el destino del averno.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_no_muerto}/{hp_total_no_muerto} vs {hp_final_orco}/{hp_total_orco}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    }
],
        
    
# ‚ô£‚úÖ ELFO VS HUMANO - 15 NARRACIONES
"elfo_vs_humano": [
    # NARRACION 1 - ELFO COMIENZA
    {
        "round1": "üßù‚Äç‚ôÇÔ∏è **El guerrero {titulo_elfo}** entra al campo de batalla con la superioridad divina de los creadores originales, empu√±ando su **{arma_elfo}** con el desprecio hacia su creaci√≥n defectuosa.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Hijo bastardo de nuestra perfecci√≥n, los dioses se r√≠en de ti desde sus tronos celestiales.'\nüë® **Humano:** 'Progenitor fallido, hemos superado a nuestros creadores imperfectos.'\n\n‚ö° El elfo lanza un corte divino directo al rostro humano. El humano esquiva evolutivamente y contraataca con rebeli√≥n mortal.\n\nü©∏ El **{titulo_elfo}** logr√≥ marcar el rostro humano con una cicatriz que forma runas √©lficas. Sangre roja brota mientras el humano siente la marca de sus or√≠genes.\n\nüßù‚Äç‚ôÇÔ∏è El elfo sonr√≠e con superioridad divina viendo como marca a su descendiente rebelde con su linaje original.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",
        
        "round2": "üë® **El {titulo_humano}** contraataca marcado con la rebeli√≥n de las creaciones pero la divinidad del **{armadura_elfo}** forjada en perfecci√≥n original hace que el ataque rebelde sea absorbido por la superioridad ancestral.\n\nüë® **Humano:** '¬°Tu marca no define lo que somos! ¬°Hemos evolucionado m√°s all√° de tu dise√±o fallido!'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Los dioses nos crearon perfectos desde el inicio, ustedes son solo el borrador desechado.'\n\n‚ö° El humano descarga golpes evolutivos buscando superar su origen divino. El elfo mantiene su superioridad demostrando que la perfecci√≥n original no puede ser mejorada.\n\nü©∏ Los golpes rebeldes logran impactar pero la perfecci√≥n divina los absorbe como lecciones. El elfo permanece inmaculado.\n\nüë® El humano se frustra mientras contempla como su evoluci√≥n es insignificante ante la perfecci√≥n original.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un canto celestial. **{mascota_elfo}** entra al campo de batalla y ataca divinamente al humano marcado que se defiende rebeli√°ndose. El **{mascota_humano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, perfecci√≥n divina contra rebeli√≥n evolutiva en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del elfo y el humano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_elfo}/{hp_total_elfo} vs {hp_restante_humano}/{hp_total_humano}**",
        
        "round4": "üßù‚Äç‚ôÇÔ∏è **¬°ROUND FINAL!** El humano decide poner fin a esta lucha.\n\nüë® **Humano:** '¬°Por nuestra evoluci√≥n rebelde! ¬°Los hijos superar√°n a los padres!'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Los dioses se r√≠en de tu arrogancia, criatura imperfecta.'\n\n‚ö° Frotando su **{accesorio_humano}** se lanza contra el elfo con rebeli√≥n final. El elfo lo mira con superioridad divina y lanza su ataque mientras su **{accesorio_elfo}** resplandece por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El humano clava su arma en el coraz√≥n √©lfico gritando rebeli√≥n mientras el elfo lo bendice con gracia divina en su muerte.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_humano}/{hp_total_humano} vs {hp_final_elfo}/{hp_total_elfo}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },

        # NARRACION 2 - HUMANO COMIENZA
    {
        "round1": "üë® **El guerrero {titulo_humano}** entra al campo de batalla con la arrogancia de los conquistadores de mundos, empu√±ando su **{arma_humano}** con el desprecio hacia sus antepasados obsoletos.\n\nüë® **Humano:** 'Elfo decr√©pito, mientras ustedes danzan en bosques nosotros conquistamos continentes.'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Mono evolucionado, tu torpeza sigue siendo pat√©tica comparada con nuestra gracia.'\n\n‚ö° El humano lanza un corte conquistador directo al brazo √©lfico. El elfo esquiva con velocidad sobrenatural y contraataca como rayo.\n\nü©∏ El **{titulo_humano}** logr√≥ rozar apenas el brazo √©lfico antes de ser superado en velocidad. Sangre dorada brota mientras el elfo ya est√° detr√°s de √©l.\n\nüë® El humano gira confundido mientras el elfo r√≠e de su lentitud primitiva.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round2": "üßù‚Äç‚ôÇÔ∏è **El {titulo_elfo}** contraataca con velocidad √©lfica con la gracia de los r√°pidos pero la determinaci√≥n del **{armadura_humano}** forjada en conquistas lentas hace que el ataque veloz sea resistido por la terquedad mortal.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Demasiado lento, como siempre. ¬øAs√≠ conquistaron el mundo? ¬øA paso de tortuga?'\nüë® **Humano:** '¬°Prefiero ser lento y efectivo que r√°pido e in√∫til como ustedes!'\n\n‚ö° El elfo descarga ataques veloces burl√°ndose de la lentitud humana. El humano mantiene su determinaci√≥n resistiendo con terquedad conquistadora.\n\nü©∏ Los golpes veloces logran impactar m√∫ltiples veces pero la terquedad los absorbe lentamente. El humano aguanta cada golpe.\n\nüßù‚Äç‚ôÇÔ∏è El elfo se exaspera: '¬°Por lo menos ca√≠gan m√°s r√°pido! ¬°Hasta morir lo hacen lentamente!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha una risa burlona. **{mascota_humano}** entra al campo de batalla y ataca lentamente al elfo veloz que se defiende con gracia. El **{mascota_elfo}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, terquedad lenta contra gracia veloz en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del humano y el elfo contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_humano}/{hp_total_humano} vs {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round4": "üë® **¬°ROUND FINAL!** El elfo decide poner fin a esta lucha.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Acabemos con esto antes de que me aburra m√°s tu lentitud.'\nüë® **Humano:** '¬°La velocidad no sirve si no tienes fuerza, bailar√≠n del bosque!'\n\n‚ö° Frotando su **{accesorio_elfo}** se lanza contra el humano con velocidad final. El humano lo mira con terquedad absoluta y lanza su ataque mientras su **{accesorio_humano}** late por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El elfo perfora m√∫ltiples √≥rganos con velocidad mientras el humano le aplasta el cr√°neo con fuerza bruta.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_elfo}/{hp_total_elfo} vs {hp_final_humano}/{hp_total_humano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 3 - ELFO COMIENZA
    {
        "round1": "üßù‚Äç‚ôÇÔ∏è **El guerrero {titulo_elfo}** entra al campo de batalla con la velocidad de los vientos ancestrales, empu√±ando su **{arma_elfo}** con la gracia de quien naci√≥ para la perfecci√≥n.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Simio b√≠pedo, tus reflejos son tan lentos que podr√≠a matarte diez veces antes de que parpadees.'\nüë® **Humano:** 'Bailar√≠n pretencioso, toda esa velocidad y siguen siendo irrelevantes en el mundo real.'\n\n‚ö° El elfo lanza una r√°faga de cortes veloces directo al torso humano. El humano intenta bloquear torpemente y contraataca con fuerza bruta.\n\nü©∏ El **{titulo_elfo}** logr√≥ hacer doce cortes profundos antes de que el humano pudiera reaccionar. Sangre roja brota de m√∫ltiples heridas mientras el humano jadea confundido.\n\nüßù‚Äç‚ôÇÔ∏è El elfo r√≠e burlonamente: '¬øDoce heridas y reci√©n te das cuenta? ¬°Qu√© pat√©tico!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",
        
        "round2": "üë® **El {titulo_humano}** contraataca sangrando con la resistencia de los duros pero la velocidad del **{armadura_elfo}** forjada en gracia pura hace que el ataque lento sea esquivado por la agilidad sobrenatural.\n\nüë® **Humano:** '¬°Doce cortes y sigues siendo un perdedor! ¬°La velocidad no gana guerras!'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Mono herido, ni siquiera puedes tocarme. ¬øAs√≠ conquistaron el mundo? ¬øPor accidente?'\n\n‚ö° El humano descarga golpes lentos buscando impactar al elfo veloz. El elfo mantiene su velocidad esquivando cada ataque con gracia insultante.\n\nü©∏ Los golpes humanos cortan solo aire mientras el elfo danza alrededor burl√°ndose. El humano se frustra m√°s.\n\nüë® El humano grita: '¬°Deja de correr como cobarde y pelea de frente!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un siseo veloz. **{mascota_elfo}** entra al campo de batalla y ataca con gracia al humano sangrante que se defiende torpemente. El **{mascota_humano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, gracia insultante contra torpeza sangrante en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del elfo y el humano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_elfo}/{hp_total_elfo} vs {hp_restante_humano}/{hp_total_humano}**",
        
        "round4": "üßù‚Äç‚ôÇÔ∏è **¬°ROUND FINAL!** El humano decide poner fin a esta lucha.\n\nüë® **Humano:** '¬°Bailar√≠n del bosque! ¬°Voy a aplastarte aunque tengas que perseguirte!'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Mono exhausto, te har√© correr en c√≠rculos hasta que colapses.'\n\n‚ö° Frotando su **{accesorio_humano}** se lanza contra el elfo con fuerza final. El elfo lo mira con velocidad suprema y lanza su ataque mientras su **{accesorio_elfo}** vibra por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El humano atrapa al elfo en un abrazo mortal mientras el elfo le perfora el coraz√≥n con velocidad letal.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_humano}/{hp_total_humano} vs {hp_final_elfo}/{hp_total_elfo}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 4 - HUMANO COMIENZA
    {
        "round1": "üë® **El guerrero {titulo_humano}** entra al campo de batalla con la fuerza bruta de los conquistadores, empu√±ando su **{arma_humano}** con la determinaci√≥n de quien compens√≥ la velocidad con poder.\n\nüë® **Humano:** 'Elfo presumido, tu velocidad es in√∫til cuando mis golpes destrozan todo a mi alrededor.'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Gorila torpe, sigues pensando que la fuerza bruta supera a la elegancia natural.'\n\n‚ö° El humano lanza un golpe devastador directo al suelo donde est√° el elfo. El elfo salta √°gilmente pero la onda expansiva lo alcanza.\n\nü©∏ El **{titulo_humano}** logr√≥ crear una explosi√≥n de tierra que golpe√≥ al elfo en el aire. Sangre dorada brota mientras el elfo cae sin gracia por primera vez.\n\nüë® El humano r√≠e triunfante: '¬°No puedes esquivar el suelo entero, bailar√≠n volador!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round2": "üßù‚Äç‚ôÇÔ∏è **El {titulo_elfo}** contraataca ca√≠do con la gracia de los que recuperan elegancia pero la fuerza del **{armadura_humano}** forjada en poder bruto hace que el ataque gr√°cil sea resistido por la solidez conquistadora.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°Una ca√≠da no borra milenios de superioridad! ¬°Sigues siendo un mono con suerte!'\nüë® **Humano:** 'Los monos evolucionamos, los bailarines solo giran en c√≠rculos.'\n\n‚ö° El elfo descarga ataques veloces buscando recuperar su dignidad perdida. El humano mantiene su fuerza resistiendo cada golpe con solidez.\n\nü©∏ Los golpes √©lficos logran impactar r√°pidamente pero la solidez humana los absorbe como lluvia en roca. El humano apenas se inmuta.\n\nüßù‚Äç‚ôÇÔ∏è El elfo se frustra: '¬°Al menos finge que te duele, bloque de piedra!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un rugido poderoso. **{mascota_humano}** entra al campo de batalla y ataca s√≥lidamente al elfo frustrado que se defiende con velocidad. El **{mascota_elfo}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, solidez conquistadora contra velocidad frustrada en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del humano y el elfo contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_humano}/{hp_total_humano} vs {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round4": "üë® **¬°ROUND FINAL!** El elfo decide poner fin a esta lucha.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°Bloque de granito! ¬°Voy a partirte como la roca que eres!'\nüë® **Humano:** 'Adelante, bailar√≠n. Rompe tus u√±as contra mi armadura.'\n\n‚ö° Frotando su **{accesorio_elfo}** se lanza contra el humano con velocidad desesperada. El humano lo mira con solidez absoluta y lanza su ataque mientras su **{accesorio_humano}** resplandece por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El elfo encuentra una grieta en la armadura humana mientras el humano lo aplasta contra el suelo con fuerza definitiva.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_elfo}/{hp_total_elfo} vs {hp_final_humano}/{hp_total_humano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 5 - ELFO COMIENZA
    {
        "round1": "üßù‚Äç‚ôÇÔ∏è **El guerrero {titulo_elfo}** entra al campo de batalla con la arrogancia de los que nunca han perdido, empu√±ando su **{arma_elfo}** con la velocidad de quien se burla del tiempo mismo.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Descendiente fallido, voy a demostrarte por qu√© ustedes necesitaron evolucionar y nosotros no.'\nüë® **Humano:** 'Antepasado estancado, vamos a ver qui√©n necesita evolucionar despu√©s de esto.'\n\n‚ö° El elfo lanza una secuencia de veinte ataques en un segundo directo a puntos vitales humanos. El humano trata de protegerse pero es superado completamente.\n\nü©∏ El **{titulo_elfo}** logr√≥ impactar dieciocho de veinte ataques en √≥rganos vitales. Sangre roja brota de m√∫ltiples heridas mortales mientras el humano tambalea aturdido.\n\nüßù‚Äç‚ôÇÔ∏è El elfo sonr√≠e burlonamente: '¬øViste eso? No, claro que no. Fue demasiado r√°pido para tus ojos primitivos.'\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",
        
        "round2": "üë® **El {titulo_humano}** contraataca herido mortalmente con la desesperaci√≥n de los agonizantes pero la arrogancia del **{armadura_elfo}** forjada en superioridad natural hace que el ataque desesperado sea esquivado por la vanidad √©lfica.\n\nüë® **Humano:** '¬°Dieciocho heridas! ¬°Maldito show-off! ¬°Al menos pelea con honor!'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'El honor es para los que no pueden ganar por m√©rito. Nosotros simplemente somos superiores.'\n\n‚ö° El humano descarga golpes desesperados buscando tocar al elfo arrogante. El elfo mantiene su velocidad esquivando mientras se burla de cada intento.\n\nü©∏ Los golpes desesperados cortan solo aire mientras el elfo danza burlonamente. El humano se desangra m√°s con cada movimiento fallido.\n\nüßù‚Äç‚ôÇÔ∏è El elfo se r√≠e: '¬°Qu√© pat√©tico! ¬°Ni muriendo puedes tocarme!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha una risa arrogante. **{mascota_elfo}** entra al campo de batalla y ataca burlonamente al humano agonizante que se defiende desesperadamente. El **{mascota_humano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, arrogancia burlona contra desesperaci√≥n agonizante en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del elfo y el humano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_elfo}/{hp_total_elfo} vs {hp_restante_humano}/{hp_total_humano}**",
        
        "round4": "üßù‚Äç‚ôÇÔ∏è **¬°ROUND FINAL!** El humano decide poner fin a esta lucha.\n\nüë® **Humano:** '¬°Show-off arrogante! ¬°Si voy a morir, me llevo tu vanidad conmigo!'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Criatura agonizante, acepta tu inferioridad con dignidad.'\n\n‚ö° Frotando su **{accesorio_humano}** se lanza contra el elfo con desesperaci√≥n final. El elfo lo mira con arrogancia suprema y lanza su ataque mientras su **{accesorio_elfo}** late por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El humano sacrifica su vida para atrapar al elfo mientras el elfo lo perfora con velocidad letal en un abrazo mortal.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_humano}/{hp_total_humano} vs {hp_final_elfo}/{hp_total_elfo}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },

        # NARRACION 6 - HUMANO COMIENZA
    {
        "round1": "üë® **El guerrero {titulo_humano}** entra al campo de batalla con la astucia de los supervivientes, empu√±ando su **{arma_humano}** con la malicia de quien aprendi√≥ a vencer la velocidad con trampas.\n\nüë® **Humano:** 'Velocista del bosque, toda esa rapidez y siguen perdiendo territorio ante nosotros.'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Trapacero vulgar, necesitan enga√±os porque no pueden competir con nuestra superioridad natural.'\n\n‚ö° El humano lanza aceite al suelo y ataca cuando el elfo resbala. El elfo pierde el equilibrio por primera vez y contraataca con velocidad herida.\n\nü©∏ El **{titulo_humano}** logr√≥ cortar profundamente la pierna √©lfica mientras resbalaba. Sangre dorada brota mientras el elfo cojea por primera vez en su vida.\n\nüë® El humano se burla: '¬°El gran bailar√≠n se cae como cualquier mortal! ¬°Qu√© gr√°cil!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round2": "üßù‚Äç‚ôÇÔ∏è **El {titulo_elfo}** contraataca cojeando con la dignidad herida de los ca√≠dos pero la astucia del **{armadura_humano}** forjada en supervivencia hace que el ataque digno sea superado por la malicia adaptativa.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°Trampa sucia! ¬°Los elfos no necesitamos trucos baratos para ganar!'\nüë® **Humano:** 'Por eso est√°n perdiendo la guerra, pr√≠ncipe cojo. Nosotros nos adaptamos.'\n\n‚ö° El elfo descarga ataques veloces pero limitados buscando recuperar su dignidad perdida. El humano mantiene su astucia preparando m√°s trampas.\n\nü©∏ Los golpes √©lficos logran impactar pero la malicia humana los convierte en oportunidades. El humano sonr√≠e preparando el siguiente enga√±o.\n\nüßù‚Äç‚ôÇÔ∏è El elfo se exaspera: '¬°Pelea como guerrero, no como ladr√≥n de caminos!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha una risa maliciosa. **{mascota_humano}** entra al campo de batalla y ataca astutamente al elfo cojo que se defiende con dignidad herida. El **{mascota_elfo}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, astucia maliciosa contra dignidad coja en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del humano y el elfo contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_humano}/{hp_total_humano} vs {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round4": "üë® **¬°ROUND FINAL!** El elfo decide poner fin a esta lucha.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°Trapacero asqueroso! ¬°Voy a matarte con honor aunque me cueste la vida!'\nüë® **Humano:** 'El honor no gana guerras, pr√≠ncipe cojo. La supervivencia s√≠.'\n\n‚ö° Frotando su **{accesorio_elfo}** se lanza contra el humano con dignidad final. El humano lo mira con astucia suprema y lanza su ataque mientras su **{accesorio_humano}** vibra por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El elfo perfora el coraz√≥n humano con honor mientras el humano le clava una daga envenenada en la espalda.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_elfo}/{hp_total_elfo} vs {hp_final_humano}/{hp_total_humano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 7 - ELFO COMIENZA
    {
        "round1": "üßù‚Äç‚ôÇÔ∏è **El guerrero {titulo_elfo}** entra al campo de batalla con la velocidad de los rayos, empu√±ando su **{arma_elfo}** con la precisi√≥n de quien nunca falla un blanco.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Criatura lenta, voy a cortarte tantas veces que parecer√°s un colador antes de que caigas.'\nüë® **Humano:** 'Presumido del bosque, la velocidad no sirve si no puedes acabar lo que empiezas.'\n\n‚ö° El elfo lanza cincuenta cortes precisos en tres segundos directo a puntos no vitales. El humano grita de dolor pero permanece en pie.\n\nü©∏ El **{titulo_elfo}** logr√≥ hacer cincuenta cortes superficiales perfectamente espaciados. Sangre roja brota de cada herida mientras el humano parece un mapa sangriento.\n\nüßù‚Äç‚ôÇÔ∏è El elfo se burla: '¬°Mira qu√© obra de arte! ¬°Cincuenta cortes y sigues vivo porque yo lo permito!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",
        
        "round2": "üë® **El {titulo_humano}** contraataca como mapa sangriento con la resistencia de los torturados pero la precisi√≥n del **{armadura_elfo}** forjada en perfecci√≥n hace que el ataque sangriento sea esquivado por la maestr√≠a √©lfica.\n\nüë® **Humano:** '¬°Cincuenta cortes! ¬°Presumido s√°dico! ¬°Si vas a matarme, hazlo de una vez!'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Donde est√° la diversi√≥n en eso? Prefiero verte sufrir lentamente, mono sangrante.'\n\n‚ö° El humano descarga golpes desesperados buscando acabar con el juego s√°dico. El elfo mantiene su precisi√≥n convirtiendo la batalla en espect√°culo.\n\nü©∏ Los golpes desesperados fallan mientras el elfo danza alrededor a√±adiendo m√°s cortes art√≠sticos. El humano se convierte en escultura viviente.\n\nüßù‚Äç‚ôÇÔ∏è El elfo aplaude: '¬°Bravo! ¬°Eres la mejor obra de arte que he creado!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha una melod√≠a burlona. **{mascota_elfo}** entra al campo de batalla y ataca art√≠sticamente al humano esculpido que se defiende sangrando. El **{mascota_humano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, arte s√°dico contra resistencia esculpida en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del elfo y el humano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_elfo}/{hp_total_elfo} vs {hp_restante_humano}/{hp_total_humano}**",
        
        "round4": "üßù‚Äç‚ôÇÔ∏è **¬°ROUND FINAL!** El humano decide poner fin a esta lucha.\n\nüë® **Humano:** '¬°Artista s√°dico! ¬°Tu obra maestra va a ser mi venganza!'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Escultura sangrante, es hora de firmar mi obra con tu muerte.'\n\n‚ö° Frotando su **{accesorio_humano}** se lanza contra el elfo con venganza final. El elfo lo mira con sadismo art√≠stico y lanza su ataque mientras su **{accesorio_elfo}** resplandece por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El humano abraza al elfo manch√°ndolo con sangre de cien cortes mientras el elfo lo perfora con precisi√≥n letal.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_humano}/{hp_total_humano} vs {hp_final_elfo}/{hp_total_elfo}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 8 - HUMANO COMIENZA
    {
        "round1": "üë® **El guerrero {titulo_humano}** entra al campo de batalla con la brutalidad de los desesperados, empu√±ando su **{arma_humano}** con la determinaci√≥n de quien no tiene nada que perder.\n\nüë® **Humano:** 'Danzar√≠n arrogante, vamos a ver si tu velocidad sirve cuando destruyo todo el escenario.'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'B√°rbaro destructivo, siempre recurren a la violencia ciega cuando no pueden competir.'\n\n‚ö° El humano destruye el terreno alrededor creando escombros que limitan el movimiento √©lfico. El elfo tropieza con los obst√°culos y contraataca molesto.\n\nü©∏ El **{titulo_humano}** logr√≥ crear un campo de batalla donde la velocidad es in√∫til. Sangre dorada brota mientras el elfo se corta con los escombros afilados.\n\nüë® El humano r√≠e: '¬°Ahora baila entre vidrios rotos, artista! ¬°A ver qu√© tan gr√°cil eres!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round2": "üßù‚Äç‚ôÇÔ∏è **El {titulo_elfo}** contraataca cortado con la adaptaci√≥n de los limitados pero la brutalidad del **{armadura_humano}** forjada en destrucci√≥n hace que el ataque adaptativo sea superado por el caos controlado.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°Destrozar el campo de batalla! ¬°Qu√© t√≠pico de simios destructivos!'\nüë® **Humano:** 'Si no puedes adaptarte al caos, entonces no eres tan superior como presumes.'\n\n‚ö° El elfo descarga ataques limitados buscando navegar entre los escombros. El humano mantiene su brutalidad a√±adiendo m√°s destrucci√≥n al entorno.\n\nü©∏ Los golpes √©lficos logran impactar d√©bilmente pero la destrucci√≥n constante los neutraliza. El elfo se frustra por la limitaci√≥n.\n\nüßù‚Äç‚ôÇÔ∏è El elfo grita: '¬°Esto no es combate! ¬°Es vandalismo puro!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha el estruendo de la destrucci√≥n. **{mascota_humano}** entra al campo de batalla y ataca destructivamente al elfo limitado que se defiende entre escombros. El **{mascota_elfo}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, caos destructivo contra adaptaci√≥n limitada en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del humano y el elfo contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_humano}/{hp_total_humano} vs {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round4": "üë® **¬°ROUND FINAL!** El elfo decide poner fin a esta lucha.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°V√°ndalo destructivo! ¬°Voy a restaurar el orden mat√°ndote!'\nüë® **Humano:** 'El caos siempre vence al orden, pr√≠ncipe de cristal.'\n\n‚ö° Frotando su **{accesorio_elfo}** se lanza contra el humano con orden final. El humano lo mira con caos absoluto y lanza su ataque mientras su **{accesorio_humano}** late por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El elfo perfora al humano con precisi√≥n ordenada mientras el humano lo aplasta con escombros destructivos.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_elfo}/{hp_total_elfo} vs {hp_final_humano}/{hp_total_humano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 9 - ELFO COMIENZA
    {    
        "round1": "üßù‚Äç‚ôÇÔ∏è **El guerrero {titulo_elfo}** entra al campo de batalla con la velocidad de los rel√°mpagos ancestrales, empu√±ando su **{arma_elfo}** con la superioridad de quien naci√≥ perfecto.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Subproducto evolutivo, voy a demostrarte la diferencia entre la perfecci√≥n original y la copia defectuosa.'\nüë® **Humano:** 'Original obsoleto, las copias mejoramos los errores de dise√±o de los prototipos.'\n\n‚ö° El elfo lanza una lluvia de cien ataques en cinco segundos directo a todo el cuerpo humano. El humano no puede ni procesarlo y contraataca a ciegas.\n\nü©∏ El **{titulo_elfo}** logr√≥ hacer cien cortes perfectos que forman patrones geom√©tricos. Sangre roja brota dibujando runas √©lficas mientras el humano parece arte viviente.\n\nüßù‚Äç‚ôÇÔ∏è El elfo admira su obra: '¬°Perfecto! ¬°Tu cuerpo ahora tiene el dise√±o que debiste haber tenido desde el inicio!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",

        
        "round2": "üë® **El {titulo_humano}** contraataca como arte sangrante con la tenacidad de los redise√±ados pero la perfecci√≥n del **{armadura_elfo}** forjada en dise√±o original hace que el ataque tenaz sea esquivado por la maestr√≠a primordial.\n\nüë® **Humano:** '¬°Cien cortes! ¬°Narcisista obsesivo! ¬°Tu perfecci√≥n es solo vanidad!'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'La vanidad es el privilegio de los perfectos. Ustedes solo tienen mediocridad.'\n\n‚ö° El humano descarga golpes tenaces buscando manchar la perfecci√≥n √©lfica. El elfo mantiene su velocidad esquivando mientras a√±ade m√°s \"mejoras\" al dise√±o humano.\n\nü©∏ Los golpes tenaces fallan mientras el elfo contin√∫a su obra maestra viviente. El humano se convierte en lienzo sangrante.\n\nüßù‚Äç‚ôÇÔ∏è El elfo comenta: '¬°Ahora pareces lo que siempre debiste ser: una obra de arte √©lfica!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha una sinfon√≠a de perfecci√≥n. **{mascota_elfo}** entra al campo de batalla y ataca art√≠sticamente al humano redise√±ado que se defiende como lienzo. El **{mascota_humano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, perfecci√≥n art√≠stica contra tenacidad redise√±ada en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del elfo y el humano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_elfo}/{hp_total_elfo} vs {hp_restante_humano}/{hp_total_humano}**",
        
        "round4": "üßù‚Äç‚ôÇÔ∏è **¬°ROUND FINAL!** El humano decide poner fin a esta lucha.\n\nüë® **Humano:** '¬°Artista narcisista! ¬°Tu obra maestra va a ser tu propia destrucci√≥n!'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Lienzo sangrante, es hora de a√±adir el toque final a mi creaci√≥n.'\n\n‚ö° Frotando su **{accesorio_humano}** se lanza contra el elfo con destrucci√≥n final. El elfo lo mira con perfecci√≥n art√≠stica y lanza su ataque mientras su **{accesorio_elfo}** vibra por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El humano mancha al elfo con sangre de cien cortes mientras el elfo lo perfora con el toque final de su obra maestra.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_humano}/{hp_total_humano} vs {hp_final_elfo}/{hp_total_elfo}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 10 - HUMANO COMIENZA
    {
        "round1": "üë® **El guerrero {titulo_humano}** entra al campo de batalla con la innovaci√≥n de los adaptados, empu√±ando su **{arma_humano}** con la creatividad de quien mejora lo que recibe.\n\nüë® **Humano:** 'Modelo antiguo, nosotros tomamos tus caracter√≠sticas y las actualizamos para el mundo real.'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Plagiador vulgar, copiar no es lo mismo que crear. Ustedes son falsificaciones baratas.'\n\n‚ö° El humano usa t√°cticas que el elfo nunca ha visto, combinando velocidad con impredecibilidad. El elfo se confunde ante la innovaci√≥n y contraataca tradicionalmente.\n\nü©∏ El **{titulo_humano}** logr√≥ sorprender al elfo con movimientos que no est√°n en sus manuales ancestrales. Sangre dorada brota mientras el elfo se tambalea confundido.\n\nüë® El humano sonr√≠e: '¬øConfundido? ¬°Bienvenido a la innovaci√≥n! ¬°Algo que ustedes nunca entender√°n!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round2": "üßù‚Äç‚ôÇÔ∏è **El {titulo_elfo}** contraataca confundido con la tradici√≥n de los ancestrales pero la innovaci√≥n del **{armadura_humano}** forjada en creatividad hace que el ataque tradicional sea superado por la adaptaci√≥n constante.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°Movimientos sin honor! ¬°Eso no est√° en los c√≥digos de combate ancestrales!'\nüë® **Humano:** 'Por eso seguimos evolucionando mientras ustedes se quedaron congelados en el tiempo.'\n\n‚ö° El elfo descarga ataques tradicionales buscando volver a lo conocido. El humano mantiene su innovaci√≥n adapt√°ndose y creando nuevas respuestas.\n\nü©∏ Los golpes tradicionales logran impactar pero la creatividad los convierte en lecciones. El humano aprende y mejora con cada intercambio.\n\nüßù‚Äç‚ôÇÔ∏è El elfo se frustra: '¬°Pelea como es debido! ¬°Respeta las tradiciones milenarias!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha el sonido de la innovaci√≥n. **{mascota_humano}** entra al campo de batalla y ataca creativamente al elfo confundido que se defiende tradicionalmente. El **{mascota_elfo}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, creatividad adaptativa contra tradici√≥n confundida en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del humano y el elfo contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_humano}/{hp_total_humano} vs {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round4": "üë® **¬°ROUND FINAL!** El elfo decide poner fin a esta lucha.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°Innovador ca√≥tico! ¬°Voy a restaurar el orden ancestral!'\nüë® **Humano:** 'El futuro siempre vence al pasado, reliquia viviente.'\n\n‚ö° Frotando su **{accesorio_elfo}** se lanza contra el humano con tradici√≥n final. El humano lo mira con innovaci√≥n suprema y lanza su ataque mientras su **{accesorio_humano}** resplandece por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El elfo ataca con t√©cnicas milenarias mientras el humano responde con algo completamente nuevo que nadie ha visto antes.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_elfo}/{hp_total_elfo} vs {hp_final_humano}/{hp_total_humano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },


        # NARRACION 11 - ELFO COMIENZA
    {
        "round1": "üßù‚Äç‚ôÇÔ∏è **El guerrero {titulo_elfo}** entra al campo de batalla con la gracia de los bendecidos por dioses, empu√±ando su **{arma_elfo}** con la velocidad de quien tiene favor divino.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Mortal blasfemo, los dioses nos protegen con su gracia eterna. T√∫ solo tienes arrogancia.'\nüë® **Humano:** 'Mascota divina, ya mat√© a tus dioses. Ahora es tu turno de reunirte with ellos.'\n\n‚ö° El elfo invoca velocidad divina y ataca con bendiciones ancestrales. El humano sonr√≠e siniestamente y contraataca con t√©cnicas deicidas.\n\nü©∏ El **{titulo_elfo}** logr√≥ cortar con gracia divina pero sinti√≥ algo terrible: su bendici√≥n se desvaneci√≥ al tocar al humano. Sangre dorada brota mientras el elfo retrocede horrorizado.\n\nüßù‚Äç‚ôÇÔ∏è El elfo susurra aterrado: '¬øQu√© eres? ¬°Mi gracia divina... se apag√≥!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",
        
        "round2": "üë® **El {titulo_humano}** contraataca irradiando poder deicida con la autoridad de los matadores de dioses pero la velocidad del **{armadura_elfo}** bendecida por deidades hace que el ataque deicida sea esquivado por la gracia aterrorizada.\n\nüë® **Humano:** 'Sientes mi aura, ¬øverdad? Es el mismo poder que us√© para destrozar a tus dioses.'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°Imposible! ¬°Los dioses son eternos! ¬°No pueden morir!'\n\n‚ö° El humano descarga ataques imbuidos con esencia deicida buscando apagar toda divinidad. El elfo mantiene su velocidad pero siente como sus bendiciones se desvanecen.\n\nü©∏ Los golpes deicidas logran impactar y drenan la gracia √©lfica. El elfo siente por primera vez lo que es ser mortal.\n\nüßù‚Äç‚ôÇÔ∏è El elfo llora: '¬°Mis bendiciones! ¬°Me siento... vac√≠o! ¬°Como ustedes!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha el eco de dioses agonizantes. **{mascota_humano}** entra al campo de batalla y ataca con poder deicida al elfo despojado que se defiende sin gracia. El **{mascota_elfo}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, poder deicida contra gracia despojada en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del elfo y el humano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_elfo}/{hp_total_elfo} vs {hp_restante_humano}/{hp_total_humano}**",
        
        "round4": "üßù‚Äç‚ôÇÔ∏è **¬°ROUND FINAL!** El humano decide poner fin a esta lucha.\n\nüë® **Humano:** '¬°Por el poder que us√© para matar dioses! ¬°√önete a ellos en la muerte!'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°No! ¬°Sin mis bendiciones soy solo... mortal!'\n\n‚ö° Frotando su **{accesorio_humano}** se lanza contra el elfo con poder deicida absoluto. El elfo lo mira con terror mortal y lanza su ataque mientras su **{accesorio_elfo}** late desesperadamente por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El humano canaliza el mismo poder que us√≥ contra dioses mientras el elfo ataca con desesperaci√≥n mortal por primera vez.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_humano}/{hp_total_humano} vs {hp_final_elfo}/{hp_total_elfo}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 12 - HUMANO COMIENZA
    {
        "round1": "üë® **El guerrero {titulo_humano}** entra al campo de batalla con la autoridad de quien destron√≥ dioses, empu√±ando su **{arma_humano}** manchada con sangre divina.\n\nüë® **Humano:** 'Sirviente de cad√°veres divinos, vengo con la sangre de tus amos a√∫n goteando de mi espada.'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Blasfemo mentiroso, los dioses son inmortales. Tu arrogancia no los toca.'\n\n‚ö° El humano ataca irradiando la misma energ√≠a que us√≥ para matar dioses. El elfo siente inmediatamente como sus bendiciones se corrompen y contraataca con gracia contaminada.\n\nü©∏ El **{titulo_humano}** logr√≥ infectar al elfo con esencia deicida que corroe la divinidad. Sangre dorada brota volvi√©ndose roja mientras el elfo siente la mortalidad por primera vez.\n\nüë® El humano r√≠e siniestamente: '¬øSientes eso? Es lo mismo que sintieron tus dioses antes de morir.'\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round2": "üßù‚Äç‚ôÇÔ∏è **El {titulo_elfo}** contraataca contaminado con la desesperaci√≥n de los mortalizados pero el poder del **{armadura_humano}** imbuida con autoridad deicida hace que el ataque desesperado sea absorbido por la supremac√≠a asesina de dioses.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°Esto no puede ser real! ¬°Me siento... mortal! ¬°Como ustedes!'\nüë® **Humano:** 'Bienvenido a la mortalidad. Es lo √∫ltimo que sintieron tus dioses antes de que los destrozara.'\n\n‚ö° El elfo descarga ataques contaminados buscando recuperar su divinidad perdida. El humano mantiene su autoridad deicida drenatualizando m√°s gracia √©lfica.\n\nü©∏ Los golpes desesperados logran impactar pero el poder deicida los convierte en m√°s mortalidad. El elfo se debilita como nunca antes.\n\nüßù‚Äç‚ôÇÔ∏è El elfo solloza: '¬°No puedo sentir a los dioses! ¬°Es como si... estuvieran muertos!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha el silencio divino. **{mascota_humano}** entra al campo de batalla y ataca con autoridad deicida al elfo mortalizado que se defiende desesperadamente. El **{mascota_elfo}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, autoridad asesina contra desesperaci√≥n mortalizada en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del humano y el elfo contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_humano}/{hp_total_humano} vs {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round4": "üë® **¬°ROUND FINAL!** El elfo decide poner fin a esta lucha.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°Asesino de dioses! ¬°Si debo morir mortal, al menos morir√© luchando!'\nüë® **Humano:** 'Muere como murieron tus dioses: implorando piedad que nunca llegar√°.'\n\n‚ö° Frotando su **{accesorio_elfo}** se lanza contra el humano con mortalidad desesperada. El humano lo mira con autoridad deicida absoluta y lanza su ataque mientras su **{accesorio_humano}** pulsa con poder divino robado.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El elfo ataca con la desesperaci√≥n de los dioses moribundos mientras el humano lo ejecuta con la misma t√©cnica que us√≥ en el pante√≥n.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_elfo}/{hp_total_elfo} vs {hp_final_humano}/{hp_total_humano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 13 - ELFO COMIENZA
    {
        "round1": "üßù‚Äç‚ôÇÔ∏è **El guerrero {titulo_elfo}** entra al campo de batalla con la velocidad desesperada de quien busca venganza divina, empu√±ando su **{arma_elfo}** con la √∫ltima gracia que le queda.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Asesino profano, aunque hayas matado dioses, la velocidad √©lfica sigue siendo suprema.'\nüë® **Humano:** 'Hu√©rfano divino, tus dioses gritaron como mortales cuando los destroc√©. T√∫ har√°s lo mismo.'\n\n‚ö° El elfo canaliza toda su velocidad restante en un ataque suicida. El humano recibe el impacto irradiando poder deicida y contraataca con autoridad asesina.\n\nü©∏ El **{titulo_elfo}** logr√≥ impactar con velocidad desesperada pero sinti√≥ como el poder deicida quem√≥ su alma √©lfica. Sangre dorada brota mientras el elfo grita de agon√≠a espiritual.\n\nüßù‚Äç‚ôÇÔ∏è El elfo llora: '¬°Duele! ¬°Duele como debe haber dolido a los dioses!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",
        
        "round2": "üë® **El {titulo_humano}** contraataca irradiando poder divino robado con la crueldad de los que torturaron dioses pero la velocidad del **{armadura_elfo}** forjada en desesperaci√≥n √©lfica hace que el ataque cruel sea esquivado por la agon√≠a veloz.\n\nüë® **Humano:** 'Tus dioses lloraron exactamente as√≠ cuando les arranqu√© sus poderes uno por uno.'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°C√°llate! ¬°No quiero escuchar c√≥mo murieron!'\n\n‚ö° El humano descarga ataques imbuidos con memorias divinas agonizantes. El elfo mantiene su velocidad huyendo de las visiones de dioses torturados.\n\nü©∏ Los golpes cargados de memorias logran impactar y muestran al elfo c√≥mo murieron sus dioses. El elfo vomita sangre al ver las im√°genes.\n\nüßù‚Äç‚ôÇÔ∏è El elfo grita horrorizado: '¬°Para! ¬°No me muestres m√°s! ¬°No quiero ver c√≥mo sufrieron!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escuchan los ecos de dioses agonizantes. **{mascota_elfo}** entra al campo de batalla y ataca desesperadamente al humano torturador que se defiende con crueldad divina. El **{mascota_humano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, desesperaci√≥n √©lfica contra crueldad deicida en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del elfo y el humano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_elfo}/{hp_total_elfo} vs {hp_restante_humano}/{hp_total_humano}**",
        
        "round4": "üßù‚Äç‚ôÇÔ∏è **¬°ROUND FINAL!** El humano decide poner fin a esta lucha.\n\nüë® **Humano:** '¬°Por la agon√≠a de tus dioses! ¬°√önete a ellos en el tormento eterno!'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°No! ¬°No quiero morir viendo sus caras agonizantes!'\n\n‚ö° Frotando su **{accesorio_humano}** se lanza contra el elfo con crueldad deicida final. El elfo lo mira con terror divino y lanza su ataque mientras su **{accesorio_elfo}** vibra con desesperaci√≥n absoluta.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El humano muestra al elfo las √∫ltimas memorias de los dioses mientras el elfo lo ataca con velocidad suicida para escapar las visiones.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_humano}/{hp_total_humano} vs {hp_final_elfo}/{hp_total_elfo}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 14 - HUMANO COMIENZA
    {
        "round1": "üë® **El guerrero {titulo_humano}** entra al campo de batalla con la corona de huesos divinos, empu√±ando su **{arma_humano}** forjada con la esencia de dioses muertos.\n\nüë® **Humano:** 'Reliquia divina, vengo con los poderes de tus dioses como trofeos de guerra.'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Ladr√≥n sacr√≠lego, devuelve lo que robaste del pante√≥n sagrado.'\n\n‚ö° El humano canaliza poderes divinos robados en un ataque devastador. El elfo siente la familiar energ√≠a de sus dioses corrompida y contraataca con horror sagrado.\n\nü©∏ El **{titulo_humano}** logr√≥ atacar usando la t√©cnica secreta del dios √©lfico de la guerra. Sangre dorada brota mientras el elfo reconoce el movimiento prohibido de su deidad muerta.\n\nüë® El humano se burla: '¬øReconoces este movimiento? Tu dios me ense√±√≥ mientras agonizaba.'\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round2": "üßù‚Äç‚ôÇÔ∏è **El {titulo_elfo}** contraataca horrorizado con la desesperaci√≥n de los testigos pero la corona del **{armadura_humano}** forjada con huesos divinos hace que el ataque desesperado sea absorbido por la autoridad usurpada.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°Esa t√©cnica es sagrada! ¬°No deber√≠as poder usarla!'\nüë® **Humano:** 'Los muertos no pueden guardar secretos. Ahora todos sus poderes son m√≠os.'\n\n‚ö° El elfo descarga ataques desesperados buscando recuperar lo sagrado profanado. El humano mantiene su autoridad usurpada demostrando dominio sobre poderes robados.\n\nü©∏ Los golpes desesperados logran impactar pero la autoridad divina robada los neutraliza. El humano usa t√©cnicas de m√∫ltiples dioses muertos.\n\nüßù‚Äç‚ôÇÔ∏è El elfo solloza: '¬°Para! ¬°No uses sus t√©cnicas! ¬°Es una profanaci√≥n!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha el lamento de dioses profanados. **{mascota_humano}** entra al campo de batalla y ataca con poderes divinos robados al elfo horrorizado que se defiende sacr√≠lego. El **{mascota_elfo}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, profanaci√≥n divina contra horror sagrado en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del humano y el elfo contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_humano}/{hp_total_humano} vs {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round4": "üë® **¬°ROUND FINAL!** El elfo decide poner fin a esta lucha.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°Profanador de lo sagrado! ¬°Devuelve el honor a mis dioses muertos!'\nüë® **Humano:** 'Los dioses no tienen honor en la muerte. Solo poder para quien los mata.'\n\n‚ö° Frotando su **{accesorio_elfo}** se lanza contra el humano con honor sagrado. El humano lo mira con autoridad divina robada y lanza su ataque mientras su **{accesorio_humano}** late con poder de dioses muertos.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El elfo ataca invocando la memoria de dioses mientras el humano lo destruye usando las t√©cnicas secretas de esas mismas deidades.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_elfo}/{hp_total_elfo} vs {hp_final_humano}/{hp_total_humano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 15 - ELFO COMIENZA (√öLTIMA)
    {
        "round1": "üßù‚Äç‚ôÇÔ∏è **El guerrero {titulo_elfo}** entra al campo de batalla con la velocidad final de los supervivientes divinos, empu√±ando su **{arma_elfo}** con la √∫ltima esperanza de vengar a sus dioses.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Genocida divino, esta batalla final decidir√° si la memoria de los dioses sobrevive.'\nüë® **Humano:** '√öltimo testigo, despu√©s de matarte no quedar√° nadie que recuerde a tus dioses pat√©ticos.'\n\n‚ö° El elfo canaliza toda la velocidad de los dioses muertos en un ataque final. El humano recibe el impacto con la autoridad de quien los asesin√≥ y contraataca con poder deicida absoluto.\n\nü©∏ El **{titulo_elfo}** logr√≥ impactar con la velocidad combinada de todas las deidades muertas. Sangre roja brota mientras el humano siente por primera vez el poder divino puro.\n\nüßù‚Äç‚ôÇÔ∏è El elfo grita con esperanza: '¬°S√≠! ¬°Sientes su poder! ¬°A√∫n viven a trav√©s de m√≠!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**",
        
        "round2": "üë® **El {titulo_humano}** contraataca sangrando con la autoridad final de los usurpadores pero la velocidad del **{armadura_elfo}** imbuida con esencia divina pura hace que el ataque usurpador sea esquivado por la memoria sagrada.\n\nüë® **Humano:** 'Incluso unidos tus dioses muertos no pueden contra el poder que les rob√©.'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Su memoria es m√°s fuerte que tu robo. La velocidad divina trasciende la muerte.'\n\n‚ö° El humano descarga ataques con poder robado buscando extinguir la memoria divina. El elfo mantiene su velocidad sagrada preservando el recuerdo de los dioses.\n\nü©∏ Los golpes usurpadores logran impactar pero la memoria sagrada los purifica. El elfo siente a sus dioses gui√°ndolo desde la muerte.\n\nüë® El humano se frustra: '¬°Mueren! ¬°Sus memorias deben morir contigo!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_humano}/{hp_total_humano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha el coro de dioses muertos. **{mascota_elfo}** entra al campo de batalla y ataca con memoria divina al humano usurpador que se defiende con poder robado. El **{mascota_humano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, memoria sagrada contra usurpaci√≥n final en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del elfo y el humano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_elfo}/{hp_total_elfo} vs {hp_restante_humano}/{hp_total_humano}**",
        
        "round4": "üßù‚Äç‚ôÇÔ∏è **¬°ROUND FINAL!** El humano decide poner fin a esta lucha.\n\nüë® **Humano:** '¬°Por la extinci√≥n final! ¬°Muere y ll√©vate sus memorias pat√©ticas!'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Aunque muera, la velocidad divina vivir√° para siempre en la memoria del cosmos.'\n\n‚ö° Frotando su **{accesorio_humano}** se lanza contra el elfo con extinci√≥n final. El elfo lo mira con memoria eterna y lanza su ataque mientras su **{accesorio_elfo}** resplandece con la luz de dioses muertos.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El humano ataca para extinguir la √∫ltima memoria divina mientras el elfo lo golpea con la velocidad eterna que trasciende la muerte.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_humano}/{hp_total_humano} vs {hp_final_elfo}/{hp_total_elfo}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    }
],

    
# ‚ô£‚úÖ ENANO VS NO MUERTO - 15 NARRACIONES
"enano_vs_no_muerto": [
    # NARRACION 1 - ENANO COMIENZA
    {
        "round1": "‚öîÔ∏è **El guerrero {titulo_enano}** entra al campo de batalla con la resistencia vital de las monta√±as eternas, empu√±ando su **{arma_enano}** con el calor de las forjas ancestrales.\n\n‚öîÔ∏è **Enano:** 'Cad√°ver ambulante, mi sangre caliente va a derretir tu carne helada hasta los huesos.'\nüíÄ **No Muerto:** '...'\n\n‚ö° El enano lanza un martillazo incandescente directo al pecho del no muerto. El no muerto bloquea fr√≠amente y contraataca con persistencia g√©lida.\n\nü©∏ El **{titulo_enano}** logr√≥ abrir una brecha ardiente en el torso del no muerto que humea. Icor negro brota vapor√°ndose mientras el no muerto siente calor por primera vez en siglos.\n\n‚öîÔ∏è El enano gru√±e satisfecho viendo como su calor vital hace hervir la podredumbre enemiga.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round2": "üíÄ **El {titulo_no_muerto}** contraataca humeante con la persistencia de los eternos pero la resistencia del **{armadura_enano}** templada en calor vital hace que el ataque g√©lido sea resistido por la vitalidad ancestral.\n\nüíÄ **No Muerto:** '...'\n‚öîÔ∏è **Enano:** 'Tu frialdad no puede apagar el fuego de la vida, espectro putrefacto.'\n\n‚ö° El no muerto descarga ataques helados buscando enfriar la sangre enana. El enano mantiene su calor vital resistiendo la persistencia mortal.\n\nü©∏ Los golpes g√©lidos logran impactar pero el calor ancestral los evapora al contacto. El enano arde de vida contra la muerte.\n\nüíÄ El no muerto retrocede silenciosamente mientras contempla como la vitalidad enana rechaza su esencia mortal.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un rugido vital. **{mascota_enano}** entra al campo de batalla y ataca ardiendo al no muerto humeante que se defiende fr√≠amente. El **{mascota_no_muerto}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, calor vital contra frialdad eterna en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del enano y el no muerto contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_enano}/{hp_total_enano} vs {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round4": "‚öîÔ∏è **¬°ROUND FINAL!** El no muerto decide poner fin a esta lucha.\n\nüíÄ **No Muerto:** '...'\n‚öîÔ∏è **Enano:** 'Cosa helada, mi forja ancestral va a fundirte como el metal que eres.'\n\n‚ö° Frotando su **{accesorio_no_muerto}** se lanza contra el enano con frialdad final. El enano lo mira con calor vital y lanza su ataque mientras su **{accesorio_enano}** arde por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El no muerto congela la sangre enana con frialdad eterna mientras el enano lo derrite con calor ancestral.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_no_muerto}/{hp_total_no_muerto} vs {hp_final_enano}/{hp_total_enano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },

        # NARRACION 2 - NO MUERTO COMIENZA
    {
        "round1": "üíÄ **El guerrero {titulo_no_muerto}** entra al campo de batalla con la persistencia eterna de la muerte, empu√±ando su **{arma_no_muerto}** mientras genera fuego necr√≥tico que corroe todo a su paso.\n\nüíÄ **No Muerto:** '...'\n‚öîÔ∏è **Enano:** 'Muerto que camina, tu fuego corrupto no puede compararse con las llamas puras de mi forja.'\n\n‚ö° El no muerto lanza un corte envuelto en llamas necr√≥ticas directo al hombro enano. El enano bloquea con resistencia y contraataca con fuego de forja.\n\nü©∏ El **{titulo_no_muerto}** logr√≥ cortar profundamente el hombro enano con fuego que necrosa la carne. Sangre roja brota volvi√©ndose negra mientras el enano siente su carne corromperse.\n\nüíÄ El no muerto observa satisfecho como su fuego necr√≥tico compite contra el calor vital enano.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round2": "‚öîÔ∏è **El {titulo_enano}** contraataca con el hombro necrosado con la resistencia de los forjadores pero la persistencia del **{armadura_no_muerto}** imbuida con fuego corrupto hace que el ataque resistente sea corrompido por las llamas necr√≥ticas.\n\n‚öîÔ∏è **Enano:** '¬°Tu fuego p√∫trido contamina mi carne! ¬°Pero la forja enana arde m√°s caliente!'\nüíÄ **No Muerto:** '...'\n\n‚ö° El enano descarga golpes ardientes buscando purificar la corrupci√≥n necr√≥tica. El no muerto mantiene su persistencia alimentando m√°s fuego corrupto.\n\nü©∏ Los golpes enanos logran impactar pero el fuego necr√≥tico los corrompe al contacto. La llama pura enana lucha contra la corrupci√≥n.\n\n‚öîÔ∏è El enano ruge furioso mientras ve como sus llamas se contaminan con la podredumbre enemiga.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha el crepitar de fuego corrupto. **{mascota_no_muerto}** entra al campo de batalla y ataca con llamas necr√≥ticas al enano corrompido que se defiende con fuego puro. El **{mascota_enano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, fuego necr√≥tico contra llamas puras en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del no muerto y el enano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_no_muerto}/{hp_total_no_muerto} vs {hp_restante_enano}/{hp_total_enano}**",
        
        "round4": "üíÄ **¬°ROUND FINAL!** El enano decide poner fin a esta lucha.\n\n‚öîÔ∏è **Enano:** '¬°Por las llamas puras de la forja! ¬°Tu fuego corrupto ser√° purificado!'\nüíÄ **No Muerto:** '...'\n\n‚ö° Frotando su **{accesorio_enano}** se lanza contra el no muerto con llamas purificadoras. El no muerto lo mira con persistencia eterna y lanza su ataque mientras su **{accesorio_no_muerto}** arde con fuego necr√≥tico.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El enano purifica al no muerto con fuego de forja mientras el no muerto lo corrompe con llamas necr√≥ticas en una explosi√≥n de fuegos opuestos.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_enano}/{hp_total_enano} vs {hp_final_no_muerto}/{hp_total_no_muerto}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 3 - ENANO COMIENZA
    {
        "round1": "‚öîÔ∏è **El guerrero {titulo_enano}** entra al campo de batalla con la furia de las forjas milenarias, empu√±ando su **{arma_enano}** que arde con llamas ancestrales purificadoras.\n\n‚öîÔ∏è **Enano:** 'Espectro putrefacto, mi acero forjado en fuego sagrado va a exorcizar tu existencia maldita.'\nüíÄ **No Muerto:** '...'\n\n‚ö° El enano lanza un hachazo ardiente directo al cuello del no muerto. El no muerto bloquea con su arma mientras genera fuego necr√≥tico y contraataca con llamas corruptas.\n\nü©∏ El **{titulo_enano}** logr√≥ quemar el cuello del no muerto con fuego purificador. Icor negro brota humeando mientras el no muerto siente como las llamas puras intentan exorcizarlo.\n\n‚öîÔ∏è El enano grita triunfante viendo como su fuego sagrado hace retroceder a la muerte misma.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round2": "üíÄ **El {titulo_no_muerto}** contraataca quem√°ndose con la persistencia de los exorcizados pero la furia del **{armadura_enano}** templada en fuego sagrado hace que el ataque persistente sea rechazado por la purificaci√≥n ardiente.\n\nüíÄ **No Muerto:** '...'\n‚öîÔ∏è **Enano:** 'Tu silencio no te salvar√° del fuego purificador, demonio callado.'\n\n‚ö° El no muerto descarga ataques envueltos en fuego necr√≥tico buscando corromper las llamas puras. El enano mantiene su furia sagrada purificando cada ataque corrupto.\n\nü©∏ Los golpes necr√≥ticos logran impactar pero el fuego sagrado los purifica al contacto. El no muerto se debilita contra la santidad.\n\nüíÄ El no muerto retrocede silenciosamente mientras contempla como su esencia corrupta es purificada por llamas sagradas.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha el rugido de fuego sagrado. **{mascota_enano}** entra al campo de batalla y ataca purificadoramente al no muerto quem√°ndose que se defiende con fuego corrupto. El **{mascota_no_muerto}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, purificaci√≥n sagrada contra corrupci√≥n necr√≥tica en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del enano y el no muerto contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_enano}/{hp_total_enano} vs {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round4": "‚öîÔ∏è **¬°ROUND FINAL!** El no muerto decide poner fin a esta lucha.\n\nüíÄ **No Muerto:** '...'\n‚öîÔ∏è **Enano:** 'Demonio silencioso, es hora del exorcismo final con acero y fuego.'\n\n‚ö° Frotando su **{accesorio_no_muerto}** se lanza contra el enano con fuego necr√≥tico final. El enano lo mira con furia sagrada y lanza su ataque mientras su **{accesorio_enano}** arde con purificaci√≥n divina.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El no muerto abraza al enano corrompiendo su fuego sagrado mientras el enano lo exorciza con llamas purificadoras.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_no_muerto}/{hp_total_no_muerto} vs {hp_final_enano}/{hp_total_enano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 4 - NO MUERTO COMIENZA
    {
        "round1": "üíÄ **El guerrero {titulo_no_muerto}** entra al campo de batalla con la frialdad eterna de la muerte, empu√±ando su **{arma_no_muerto}** mientras invoca llamas necr√≥ticas que consumen la vitalidad.\n\nüíÄ **No Muerto:** '...'\n‚öîÔ∏è **Enano:** 'Cosa helada que genera fuego, eres una contradicci√≥n andante que voy a resolver.'\n\n‚ö° El no muerto lanza un corte g√©lido envuelto en llamas fr√≠as directo al abdomen enano. El enano se protege con calor vital y contraataca con resistencia ancestral.\n\nü©∏ El **{titulo_no_muerto}** logr√≥ abrir el abdomen enano con fuego que congela las entra√±as. Sangre roja brota cristaliz√°ndose mientras el enano siente fr√≠o y calor simult√°neamente.\n\nüíÄ El no muerto observa fascinado como su fuego fr√≠o congela la sangre caliente del enano.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round2": "‚öîÔ∏è **El {titulo_enano}** contraataca con las entra√±as heladas con la resistencia de los congelados pero la frialdad del **{armadura_no_muerto}** imbuida con fuego g√©lido hace que el ataque resistente sea enfriado por las llamas necr√≥ticas.\n\n‚öîÔ∏è **Enano:** '¬°Fuego que hiela! ¬°Qu√© aberraci√≥n antinatural! ¬°Esto va contra toda l√≥gica!'\nüíÄ **No Muerto:** '...'\n\n‚ö° El enano descarga golpes calientes buscando derretir el hielo y apagar el fuego fr√≠o. El no muerto mantiene su contradicci√≥n generando m√°s llamas heladas.\n\nü©∏ Los golpes calientes logran impactar pero el fuego fr√≠o los convierte en vapor helado. El enano se confunde ante la paradoja.\n\n‚öîÔ∏è El enano grita frustrado: '¬°Esto no deber√≠a ser posible! ¬°El fuego da calor, no fr√≠o!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha el crepitar de llamas heladas. **{mascota_no_muerto}** entra al campo de batalla y ataca con fuego fr√≠o al enano confundido que se defiende con calor. El **{mascota_enano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, fuego g√©lido contra calor confundido en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del no muerto y el enano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_no_muerto}/{hp_total_no_muerto} vs {hp_restante_enano}/{hp_total_enano}**",
        
        "round4": "üíÄ **¬°ROUND FINAL!** El enano decide poner fin a esta lucha.\n\n‚öîÔ∏è **Enano:** '¬°Aberraci√≥n parad√≥jica! ¬°Voy a resolver tu contradicci√≥n con mi martillo!'\nüíÄ **No Muerto:** '...'\n\n‚ö° Frotando su **{accesorio_enano}** se lanza contra el no muerto con l√≥gica ancestral. El no muerto lo mira con paradoja eterna y lanza su ataque mientras su **{accesorio_no_muerto}** arde con fuego helado.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El enano golpea al no muerto tratando de resolver la paradoja mientras el no muerto lo congela con llamas imposibles.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_enano}/{hp_total_enano} vs {hp_final_no_muerto}/{hp_total_no_muerto}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 5 - ENANO COMIENZA
    {
        "round1": "‚öîÔ∏è **El guerrero {titulo_enano}** entra al campo de batalla con la terquedad de las monta√±as eternas, empu√±ando su **{arma_enano}** que humea con el calor de mil forjas.\n\n‚öîÔ∏è **Enano:** 'Cad√°ver que arde, tu existencia es un insulto a las leyes naturales de la forja.'\nüíÄ **No Muerto:** '...'\n\n‚ö° El enano lanza un golpe terco directo a la cabeza del no muerto. El no muerto esquiva con su arma y contraataca generando fuego espectral.\n\nü©∏ El **{titulo_enano}** logr√≥ agrietar el cr√°neo del no muerto hasta el cerebro putrefacto. Icor negro brota mientras el no muerto tambalea pero sigue en pie.\n\n‚öîÔ∏è El enano gru√±e impaciente: '¬°Cr√°neo agrietado y sigues movi√©ndote! ¬°Qu√© terco eres para estar muerto!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round2": "üíÄ **El {titulo_no_muerto}** contraataca con el cr√°neo agrietado con la persistencia de los rotos pero la terquedad del **{armadura_enano}** forjada en obstinaci√≥n hace que el ataque persistente sea igualado por la testarudez ancestral.\n\nüíÄ **No Muerto:** '...'\n‚öîÔ∏è **Enano:** 'Competencia de terquedad, ¬øeh? ¬°Los enanos inventamos la obstinaci√≥n!'\n\n‚ö° El no muerto descarga ataques persistentes envueltos en fuego eterno buscando superar la terquedad enana. El enano mantiene su obstinaci√≥n resistiendo con testarudez legendaria.\n\nü©∏ Los golpes persistentes logran impactar pero la terquedad enana los rechaza por puro orgullo. El enano se niega a ceder.\n\nüíÄ El no muerto contin√∫a silenciosamente mientras el enano se obstina m√°s con cada ataque recibido.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un rugido obstinado. **{mascota_enano}** entra al campo de batalla y ataca tercamente al no muerto agrietado que se defiende persistentemente. El **{mascota_no_muerto}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, terquedad legendaria contra persistencia eterna en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del enano y el no muerto contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_enano}/{hp_total_enano} vs {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round4": "‚öîÔ∏è **¬°ROUND FINAL!** El no muerto decide poner fin a esta lucha.\n\nüíÄ **No Muerto:** '...'\n‚öîÔ∏è **Enano:** '¬°Competencia de obstinaci√≥n! ¬°Vamos a ver qui√©n es m√°s terco!'\n\n‚ö° Frotando su **{accesorio_no_muerto}** se lanza contra el enano con persistencia final. El enano lo mira con terquedad absoluta y lanza su ataque mientras su **{accesorio_enano}** late con obstinaci√≥n pura.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El no muerto persiste hasta el final mientras el enano se obstina hasta la muerte en un choque de voluntades inquebrantables.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_no_muerto}/{hp_total_no_muerto} vs {hp_final_enano}/{hp_total_enano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },

        # NARRACION 11 - ENANO COMIENZA
    {
        "round1": "‚öîÔ∏è **El guerrero {titulo_enano}** entra al campo de batalla con la furia de los volcanes monta√±osos, empu√±ando su **{arma_enano}** que chispea con lava ancestral.\n\n‚öîÔ∏è **Enano:** 'Cad√°ver helado, mi martillo va a derretir tus huesos hasta convertirlos en caldo.'\nüíÄ **No Muerto:** '...'\n\n‚ö° El enano lanza un martillazo volc√°nico directo al cr√°neo del no muerto. El no muerto esquiva y contraataca con su arma envuelta en llamas espectrales.\n\nü©∏ El **{titulo_enano}** logr√≥ agrietar el cr√°neo del no muerto como c√°scara de huevo. Sesos putrefactos se derraman mientras el no muerto tambalea con la cabeza partida.\n\n‚öîÔ∏è El enano r√≠e viendo los sesos: '¬°Cabeza partida! ¬°A ver si puedes pensar con medio cerebro!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round2": "üíÄ **El {titulo_no_muerto}** contraataca con el cr√°neo partido con la persistencia de los destrozados pero la furia del **{armadura_enano}** templada en lava hace que el ataque destrozado sea superado por la violencia volc√°nica.\n\nüíÄ **No Muerto:** '...'\n‚öîÔ∏è **Enano:** 'Medio cerebro y sigues coordinado, ¬°los muertos s√≠ que son eficientes!'\n\n‚ö° El no muerto descarga ataques con sesos goteando mientras genera fuego necr√≥tico. El enano mantiene su furia buscando m√°s partes que partir.\n\nü©∏ Los golpes cerebrales logran impactar pero la violencia volc√°nica los devuelve incinerados. El enano entra en frenes√≠ de destrucci√≥n.\n\nüíÄ El no muerto intenta mantener sus sesos dentro del cr√°neo mientras lucha silenciosamente.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un rugido volc√°nico. **{mascota_enano}** entra al campo de batalla y ataca incinerando al no muerto descabezado que se defiende cerebralmente. El **{mascota_no_muerto}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, furia incinerante contra persistencia cerebral en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del enano y el no muerto contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_enano}/{hp_total_enano} vs {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round4": "‚öîÔ∏è **¬°ROUND FINAL!** El no muerto decide poner fin a esta lucha.\n\nüíÄ **No Muerto:** '...'\n‚öîÔ∏è **Enano:** '¬°Zombie sin cabeza! ¬°Voy a completar la decapitaci√≥n!'\n\n‚ö° Frotando su **{accesorio_no_muerto}** se lanza contra el enano con cerebro final. El enano lo mira con furia absoluta y lanza su ataque mientras su **{accesorio_enano}** gotea lava ancestral.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El no muerto usa sus √∫ltimos pensamientos coherentes mientras el enano lo decapita completamente con furia volc√°nica.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_no_muerto}/{hp_total_no_muerto} vs {hp_final_enano}/{hp_total_enano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 12 - NO MUERTO COMIENZA
    {
        "round1": "üíÄ **El guerrero {titulo_no_muerto}** entra al campo de batalla con la paciencia eterna de las tumbas, empu√±ando su **{arma_no_muerto}** que arde con fuego que no consume.\n\nüíÄ **No Muerto:** '...'\n‚öîÔ∏è **Enano:** 'Estatua silenciosa, tu paciencia va a encontrarse con mi impaciencia.'\n\n‚ö° El no muerto lanza un corte paciente envuelto en llamas eternas directo al brazo enano. El enano contraataca con furia impaciente.\n\nü©∏ El **{titulo_no_muerto}** logr√≥ cortar el brazo enano hasta el hueso con paciencia quir√∫rgica. Sangre roja brota mientras el enano siente como su brazo cuelga in√∫til.\n\nüíÄ El no muerto observa con satisfacci√≥n eterna como su paciencia supera la impaciencia enana.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round2": "‚öîÔ∏è **El {titulo_enano}** contraataca con el brazo colgando con la impaciencia de los mancos pero la paciencia del **{armadura_no_muerto}** imbuida con eternidad hace que el ataque impaciente sea calmado por la serenidad mortal.\n\n‚öîÔ∏è **Enano:** '¬°Brazo colgando! ¬°Maldito cirujano de cementerio! ¬°Pelea r√°pido!'\nüíÄ **No Muerto:** '...'\n\n‚ö° El enano descarga golpes desesperados con un solo brazo funcional. El no muerto mantiene su paciencia esquivando con calma eterna.\n\nü©∏ Los golpes impacientes logran impactar pero la paciencia los absorbe sin alterarse. El no muerto permanece sereno.\n\nüíÄ El no muerto inclina la cabeza, estudiando al enano manco con curiosidad cient√≠fica.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha el silencio paciente. **{mascota_no_muerto}** entra al campo de batalla y ataca serenamente al enano manco que se defiende desesperadamente. El **{mascota_enano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, serenidad cient√≠fica contra desesperaci√≥n manca en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del no muerto y el enano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_no_muerto}/{hp_total_no_muerto} vs {hp_restante_enano}/{hp_total_enano}**",
        
        "round4": "üíÄ **¬°ROUND FINAL!** El enano decide poner fin a esta lucha.\n\n‚öîÔ∏è **Enano:** '¬°Cient√≠fico silencioso! ¬°Mi √∫nico brazo va a ser suficiente para destrozarte!'\nüíÄ **No Muerto:** '...'\n\n‚ö° Frotando su **{accesorio_enano}** se lanza contra el no muerto con furia manca. El no muerto lo mira con paciencia eterna y lanza su ataque mientras su **{accesorio_no_muerto}** pulsa con serenidad absoluta.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El enano ataca con un solo brazo lleno de furia mientras el no muerto lo estudia con paciencia cient√≠fica.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_enano}/{hp_total_enano} vs {hp_final_no_muerto}/{hp_total_no_muerto}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 13 - ENANO COMIENZA
    {
        "round1": "‚öîÔ∏è **El guerrero {titulo_enano}** entra al campo de batalla con la brutalidad de las tormentas de hierro, empu√±ando su **{arma_enano}** que destella con rel√°mpagos de forja.\n\n‚öîÔ∏è **Enano:** 'Espectro putrefacto, mi acero va a electrocutar tu carne muerta hasta carbonizarla.'\nüíÄ **No Muerto:** '...'\n\n‚ö° El enano lanza un hachazo electrificado directo al pecho del no muerto. El no muerto bloquea y contraataca con su arma envuelta en fuego necr√≥tico.\n\nü©∏ El **{titulo_enano}** logr√≥ electrocutar el pecho del no muerto hasta carbonizar las costillas. Humo negro brota mientras el no muerto convulsiona por la electricidad.\n\n‚öîÔ∏è El enano r√≠e viendo las convulsiones: '¬°Bailas mejor electrocutado que cuando caminas normal!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round2": "üíÄ **El {titulo_no_muerto}** contraataca convulsionando con la persistencia de los electrocutados pero la brutalidad del **{armadura_enano}** templada en rel√°mpagos hace que el ataque convulsivo sea superado por la tormenta de hierro.\n\nüíÄ **No Muerto:** '...'\n‚öîÔ∏è **Enano:** 'Convulsionando y peleando, ¬°eres un zombie multitarea!'\n\n‚ö° El no muerto descarga ataques espasm√≥dicos mientras genera descargas necr√≥ticas. El enano mantiene su brutalidad electrificando m√°s carne muerta.\n\nü©∏ Los golpes espasm√≥dicos logran impactar pero la tormenta de hierro los devuelve electrificados. El enano controla los rel√°mpagos.\n\nüíÄ El no muerto intenta controlar sus convulsiones mientras lucha con espasmos el√©ctricos.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha el rugido el√©ctrico. **{mascota_enano}** entra al campo de batalla y ataca electrificando al no muerto convulsivo que se defiende espasm√≥dicamente. El **{mascota_no_muerto}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, tormenta el√©ctrica contra convulsiones necr√≥ticas en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del enano y el no muerto contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_enano}/{hp_total_enano} vs {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round4": "‚öîÔ∏è **¬°ROUND FINAL!** El no muerto decide poner fin a esta lucha.\n\nüíÄ **No Muerto:** '...'\n‚öîÔ∏è **Enano:** '¬°Zombie electrificado! ¬°Voy a fre√≠rte hasta que seas cenizas!'\n\n‚ö° Frotando su **{accesorio_no_muerto}** se lanza contra el enano con convulsi√≥n final. El enano lo mira con brutalidad el√©ctrica y lanza su ataque mientras su **{accesorio_enano}** chispea con tormenta absoluta.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El no muerto abraza al enano con convulsiones letales mientras el enano lo carboniza con tormenta el√©ctrica.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_no_muerto}/{hp_total_no_muerto} vs {hp_final_enano}/{hp_total_enano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 14 - NO MUERTO COMIENZA
    {
        "round1": "üíÄ **El guerrero {titulo_no_muerto}** entra al campo de batalla con la crueldad eterna de la muerte, empu√±ando su **{arma_no_muerto}** que arde con fuego que devora almas.\n\nüíÄ **No Muerto:** '...'\n‚öîÔ∏è **Enano:** 'Devorador de almas, mi alma enana es demasiado ter√ßa para ser devorada.'\n\n‚ö° El no muerto lanza un corte devorador directo al alma del enano. El enano siente como su esencia es atacada y contraataca con furia espiritual.\n\nü©∏ El **{titulo_no_muerto}** logr√≥ cortar el alma enana parcialmente. El enano siente un vac√≠o existencial mientras su alma sangra esencia vital.\n\nüíÄ El no muerto observa fascinado como puede alimentarse directamente del alma enana.\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round2": "‚öîÔ∏è **El {titulo_enano}** contraataca con el alma cortada con la furia de los vaciados pero la crueldad del **{armadura_no_muerto}** imbuida con devoraci√≥n hace que el ataque espiritual sea absorbido por el hambre de almas.\n\n‚öîÔ∏è **Enano:** '¬°Alma cortada! ¬°Maldito come-almas! ¬°Mi esencia no es tu cena!'\nüíÄ **No Muerto:** '...'\n\n‚ö° El enano descarga golpes existenciales buscando recuperar su alma perdida. El no muerto mantiene su crueldad aliment√°ndose de m√°s esencia.\n\nü©∏ Los golpes existenciales logran impactar pero el hambre de almas los convierte en m√°s alimento. El no muerto se fortalece espiritualmente.\n\nüíÄ El no muerto saborea la esencia enana mientras observa como el enano se vac√≠a existencialmente.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un lamento de alma. **{mascota_no_muerto}** entra al campo de batalla y ataca espiritualmente al enano vaciado que se defiende existencialmente. El **{mascota_enano}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, hambre espiritual contra vac√≠o existencial en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del no muerto y el enano contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_no_muerto}/{hp_total_no_muerto} vs {hp_restante_enano}/{hp_total_enano}**",
        
        "round4": "üíÄ **¬°ROUND FINAL!** El enano decide poner fin a esta lucha.\n\n‚öîÔ∏è **Enano:** '¬°Devorador de esencias! ¬°Con lo que queda de mi alma voy a destruirte!'\nüíÄ **No Muerto:** '...'\n\n‚ö° Frotando su **{accesorio_enano}** se lanza contra el no muerto con alma fragmentada. El no muerto lo mira con crueldad absoluta y lanza su ataque mientras su **{accesorio_no_muerto}** vibra con hambre eterna.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El enano sacrifica los fragmentos de su alma mientras el no muerto intenta devorar hasta la √∫ltima esencia.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_enano}/{hp_total_enano} vs {hp_final_no_muerto}/{hp_total_no_muerto}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 15 - ENANO COMIENZA (√öLTIMA)
    {
        "round1": "‚öîÔ∏è **El guerrero {titulo_enano}** entra al campo de batalla con la furia final de las monta√±as que colapsan, empu√±ando su **{arma_enano}** que arde con el √∫ltimo fuego de forja.\n\n‚öîÔ∏è **Enano:** 'Cad√°ver eterno, esta batalla final decidir√° si la vida o la muerte domina estas monta√±as.'\nüíÄ **No Muerto:** '...'\n\n‚ö° El enano canaliza toda su furia vital en un ataque apocal√≠ptico. El no muerto recibe el impacto con persistencia eterna y contraataca con frialdad mortal.\n\nü©∏ El **{titulo_enano}** logr√≥ impactar con la furia de monta√±as colapsando. Icor negro brota mientras el no muerto siente el peso de la vida aplast√°ndolo.\n\n‚öîÔ∏è El enano grita con esperanza: '¬°S√≠! ¬°La vida siempre ser√° m√°s fuerte que la muerte!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round2": "üíÄ **El {titulo_no_muerto}** contraataca aplastado con la persistencia final de los eternos pero la furia del **{armadura_enano}** imbuida con vida pura hace que el ataque eterno sea superado por la vitalidad monta√±osa.\n\nüíÄ **No Muerto:** '...'\n‚öîÔ∏è **Enano:** 'Tu silencio eterno no puede apagar el rugido de la vida, espectro aplastado.'\n\n‚ö° El no muerto descarga ataques eternos buscando extinguir la vitalidad final. El enano mantiene su furia preservando la vida contra la muerte.\n\nü©∏ Los golpes eternos logran impactar pero la vitalidad pura los purifica. El enano siente la fuerza de toda vida que ha existido.\n\nüíÄ El no muerto retrocede silenciosamente mientras contempla como la vida lucha contra su extinci√≥n.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_no_muerto}/{hp_total_no_muerto}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_enano}/{hp_total_enano}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha el rugido de la vida. **{mascota_enano}** entra al campo de batalla y ataca vitalmente al no muerto aplastado que se defiende eternamente. El **{mascota_no_muerto}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, vitalidad pura contra eternidad silenciosa en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del enano y el no muerto contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_enano}/{hp_total_enano} vs {hp_restante_no_muerto}/{hp_total_no_muerto}**",
        
        "round4": "‚öîÔ∏è **¬°ROUND FINAL!** El no muerto decide poner fin a esta lucha.\n\nüíÄ **No Muerto:** '...'\n‚öîÔ∏è **Enano:** 'Aunque muera, la vida continuar√° pulsando en estas monta√±as para siempre.'\n\n‚ö° Frotando su **{accesorio_no_muerto}** se lanza contra el enano con extinci√≥n final. El no muerto lo mira con eternidad absoluta y lanza su ataque mientras su **{accesorio_enano}** late con vitalidad eterna.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El no muerto ataca para extinguir la √∫ltima vida mientras el enano lo golpea con vitalidad que trasciende la muerte.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_no_muerto}/{hp_total_no_muerto} vs {hp_final_enano}/{hp_total_enano}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    }
],
    
# ‚ô†‚úÖ ELFO VS ORCO - 15 NARRACIONES
"elfo_vs_orco": [
    # NARRACION 1 - ELFO COMIENZA
    {
        "round1": "üßù‚Äç‚ôÇÔ∏è **El guerrero {titulo_elfo}** entra al campo de batalla con la velocidad de los rel√°mpagos, empu√±ando su **{arma_elfo}** con el desprecio de quien odia la fealdad.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Bestia verde asquerosa, voy a cortarte hasta que dejes de ser tan repugnante.'\nüíö **Orco:** '¬°Elfo maldito! ¬°Tu cara bonita va a quedar aplastada cuando termine contigo!'\n\n‚ö° El elfo lanza una r√°faga de cortes veloces directo al rostro feo del orco. El orco rugge furioso y contraataca con sus pu√±os brutales.\n\nü©∏ El **{titulo_elfo}** logr√≥ hacer quince cortes en la cara del orco dej√°ndolo a√∫n m√°s feo. Sangre verde brota de m√∫ltiples heridas mientras el orco grita de dolor.\n\nüßù‚Äç‚ôÇÔ∏è El elfo se burla: '¬°Ahora eres a√∫n m√°s feo! ¬°Pens√© que era imposible!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round2": "üíö **El {titulo_orco}** contraataca con la cara cortada con la furia de los desfigurados pero la velocidad del **{armadura_elfo}** forjada en desprecio hace que el ataque furioso sea esquivado por la agilidad burlona.\n\nüíö **Orco:** '¬°Cara cortada! ¬°Maldito elfo! ¬°Te voy a arrancar esa sonrisa de un pu√±etazo!'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Primero tendr√≠as que tocarme, bestia lenta y fea.'\n\n‚ö° El orco descarga pu√±etazos furiosos buscando aplastar la cara √©lfica. El elfo mantiene su velocidad esquivando mientras se r√≠e de la torpeza orca.\n\nü©∏ Los pu√±etazos furiosos golpean solo aire mientras el elfo danza burlonamente. El orco se vuelve m√°s furioso con cada fallo.\n\nüíö El orco rugge: '¬°Para de moverte tanto, cobarde saltar√≠n!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha una risa despreciativa. **{mascota_elfo}** entra al campo de batalla y ataca burlonamente al orco desfigurado que se defiende furiosamente. El **{mascota_orco}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, burla despreciativa contra furia desfigurada en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del elfo y el orco contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_elfo}/{hp_total_elfo} vs {hp_restante_orco}/{hp_total_orco}**",
        
        "round4": "üßù‚Äç‚ôÇÔ∏è **¬°ROUND FINAL!** El orco decide poner fin a esta lucha.\n\nüíö **Orco:** '¬°Elfo burl√≥n! ¬°Voy a aplastarte como al insecto que eres!'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Bestia fea, tu furia no puede tocar mi velocidad superior.'\n\n‚ö° Frotando su **{accesorio_orco}** se lanza contra el elfo con furia final. El elfo lo mira con desprecio total y lanza su ataque mientras su **{accesorio_elfo}** vibra por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El orco logra agarrar al elfo con sus manos brutales mientras el elfo lo atraviesa con velocidad mortal.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_orco}/{hp_total_orco} vs {hp_final_elfo}/{hp_total_elfo}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 2 - ORCO COMIENZA
    {
        "round1": "üíö **El guerrero {titulo_orco}** entra al campo de batalla con la furia de las tempestades salvajes, empu√±ando su **{arma_orco}** con la brutalidad de quien vive para destruir.\n\nüíö **Orco:** 'Elfo cara bonita, voy a romper todos tus huesos hasta que grites como la ni√±a que eres.'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Bestia ignorante, tu brutalidad primitiva no puede tocar mi velocidad natural.'\n\n‚ö° El orco lanza un golpe devastador directo al pecho √©lfico. El elfo esquiva con gracia y contraataca con cortes veloces.\n\nü©∏ El **{titulo_orco}** logr√≥ golpear el pecho √©lfico con fuerza brutal. Sangre dorada brota mientras el elfo vuela varios metros por el impacto.\n\nüíö El orco r√≠e salvajemente: '¬°Volaste como mariposa! ¬°Ahora eres una mariposa rota!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round2": "üßù‚Äç‚ôÇÔ∏è **El {titulo_elfo}** contraataca volando con la velocidad de los golpeados pero la furia del **{armadura_orco}** forjada en brutalidad hace que el ataque veloz sea aplastado por la fuerza salvaje.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°Golpe sucio! ¬°Bestia sin honor! ¬°Los orcos solo saben pegar como animales!'\nüíö **Orco:** 'Llorar no te va a salvar, elfo roto. ¬°Prep√°rate para m√°s!'\n\n‚ö° El elfo descarga cortes veloces buscando recuperar su ventaja perdida. El orco mantiene su furia bloqueando con fuerza bruta.\n\nü©∏ Los cortes veloces logran impactar pero la brutalidad orca los absorbe como lluvia. El orco apenas se inmuta ante los ataques.\n\nüßù‚Äç‚ôÇÔ∏è El elfo se frustra: '¬°Ni siquiera sientes dolor! ¬°Qu√© clase de bestia eres!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un rugido brutal. **{mascota_orco}** entra al campo de batalla y ataca salvajemente al elfo frustrado que se defiende velozmente. El **{mascota_elfo}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, fuerza salvaje contra velocidad frustrada en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del orco y el elfo contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_orco}/{hp_total_orco} vs {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round4": "üíö **¬°ROUND FINAL!** El elfo decide poner fin a esta lucha.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°Bestia brutal! ¬°Voy a cortarte hasta que dejes de moverte!'\nüíö **Orco:** 'Elfo roto, ven aqu√≠ para que termine de aplastarte.'\n\n‚ö° Frotando su **{accesorio_elfo}** se lanza contra el orco con velocidad desesperada. El orco lo mira con furia total y lanza su ataque mientras su **{accesorio_orco}** late por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El elfo perfora m√∫ltiples √≥rganos con velocidad mientras el orco lo aplasta con fuerza devastadora.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_elfo}/{hp_total_elfo} vs {hp_final_orco}/{hp_total_orco}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 3 - ELFO COMIENZA
    {
        "round1": "üßù‚Äç‚ôÇÔ∏è **El guerrero {titulo_elfo}** entra al campo de batalla con la velocidad de los huracanes, empu√±ando su **{arma_elfo}** con el odio hacia todo lo feo y brutal.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Monstruo verde repugnante, voy a hacerte pedazos por ofender mis ojos con tu fealdad.'\nüíö **Orco:** '¬°Elfo engre√≠do! ¬°Tu cara bonita va a quedar irreconocible cuando termine!'\n\n‚ö° El elfo lanza cincuenta cortes en tres segundos directo a todo el cuerpo orco. El orco rugge y contraataca con pu√±etazos devastadores.\n\nü©∏ El **{titulo_elfo}** logr√≥ hacer cincuenta cortes perfectos que cubren todo el cuerpo orco. Sangre verde brota de cada herida mientras el orco parece un mapa sangriento.\n\nüßù‚Äç‚ôÇÔ∏è El elfo se burla: '¬°Cincuenta cortes! ¬°Ahora pareces un tablero de ajedrez verde!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round2": "üíö **El {titulo_orco}** contraataca como mapa sangriento con la furia de los cortados pero la velocidad del **{armadura_elfo}** forjada en odio hace que el ataque sangriento sea esquivado por la agilidad despreciativa.\n\nüíö **Orco:** '¬°Cincuenta cortes! ¬°Maldito carnicero elfo! ¬°Cuando te agarre te har√© cien!'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Para hacerme algo primero tienes que alcanzarme, bestia lenta.'\n\n‚ö° El orco descarga pu√±etazos furiosos chorreando sangre de todas sus heridas. El elfo mantiene su velocidad esquivando mientras a√±ade m√°s cortes.\n\nü©∏ Los pu√±etazos sangrientos golpean solo aire mientras el elfo danza a√±adiendo m√°s heridas. El orco se convierte en una fuente de sangre verde.\n\nüíö El orco grita: '¬°Para de cortarme, cobarde! ¬°Pelea como guerrero!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha una risa cruel. **{mascota_elfo}** entra al campo de batalla y ataca despreciativamente al orco sangrante que se defiende furiosamente. El **{mascota_orco}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, desprecio cruel contra furia sangrante en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del elfo y el orco contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_elfo}/{hp_total_elfo} vs {hp_restante_orco}/{hp_total_orco}**",
        
        "round4": "üßù‚Äç‚ôÇÔ∏è **¬°ROUND FINAL!** El orco decide poner fin a esta lucha.\n\nüíö **Orco:** '¬°Carnicero elfo! ¬°Aunque me desangre, te voy a destrozar!'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Fuente de sangre verde, es hora de drenar hasta la √∫ltima gota.'\n\n‚ö° Frotando su **{accesorio_orco}** se lanza contra el elfo con furia desangrada. El elfo lo mira con desprecio total y lanza su ataque mientras su **{accesorio_elfo}** vibra por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El orco abraza al elfo manch√°ndolo con sangre de cien cortes mientras el elfo lo perfora con velocidad final.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_orco}/{hp_total_orco} vs {hp_final_elfo}/{hp_total_elfo}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 4 - ORCO COMIENZA
    {
        "round1": "üíö **El guerrero {titulo_orco}** entra al campo de batalla con la brutalidad de los volcanes, empu√±ando su **{arma_orco}** que humea con la furia de mil batallas.\n\nüíö **Orco:** 'Elfo delicado, mis pu√±os van a convertir tu cara bonita en papilla sangrienta.'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Gorila verde, tu fuerza bruta no puede tocar mi velocidad superior.'\n\n‚ö° El orco lanza un pu√±etazo brutal directo a la cara √©lfica. El elfo esquiva por mil√≠metros y contraataca con cortes r√°pidos.\n\nü©∏ El **{titulo_orco}** logr√≥ rozar la mejilla √©lfica con fuerza devastadora. Sangre dorada brota mientras el elfo siente como su cara perfecta es marcada.\n\nüíö El orco r√≠e: '¬°Primera marca en tu cara perfecta! ¬°Vamos por m√°s!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round2": "üßù‚Äç‚ôÇÔ∏è **El {titulo_elfo}** contraataca con la mejilla marcada con la velocidad de los heridos pero la brutalidad del **{armadura_orco}** forjada en furia hace que el ataque veloz sea absorbido por la fuerza salvaje.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°Cara marcada! ¬°Bestia asquerosa! ¬°Has arruinado mi perfecci√≥n!'\nüíö **Orco:** 'Solo fue el primero, elfo. ¬°Voy a marcar todo tu cuerpo!'\n\n‚ö° El elfo descarga cortes furiosos buscando venganza por su cara marcada. El orco mantiene su brutalidad bloqueando con fuerza pura.\n\nü©∏ Los cortes furiosos logran impactar pero la fuerza orca los rechaza como si fueran mosquitos. El orco sonr√≠e ante los ataques d√©biles.\n\nüßù‚Äç‚ôÇÔ∏è El elfo se desespera: '¬°Por qu√© no te duele! ¬°Eres una bestia sin sentimientos!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un rugido de furia. **{mascota_orco}** entra al campo de batalla y ataca brutalmente al elfo marcado que se defiende desesperadamente. El **{mascota_elfo}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, fuerza brutal contra velocidad desesperada en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del orco y el elfo contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_orco}/{hp_total_orco} vs {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round4": "üíö **¬°ROUND FINAL!** El elfo decide poner fin a esta lucha.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°Bestia marcadora! ¬°Voy a cortarte hasta que pares de sonre√≠r!'\nüíö **Orco:** 'Cara marcada, ven aqu√≠ para que complete tu nueva decoraci√≥n.'\n\n‚ö° Frotando su **{accesorio_elfo}** se lanza contra el orco con velocidad vengativa. El orco lo mira con brutalidad total y lanza su ataque mientras su **{accesorio_orco}** late por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El elfo perfora el coraz√≥n orco con velocidad mientras el orco le aplasta el cr√°neo con fuerza devastadora.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_elfo}/{hp_total_elfo} vs {hp_final_orco}/{hp_total_orco}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 5 - ELFO COMIENZA
    {
        "round1": "üßù‚Äç‚ôÇÔ∏è **El guerrero {titulo_elfo}** entra al campo de batalla con la velocidad de los rayos, empu√±ando su **{arma_elfo}** con el odio puro hacia la fealdad orca.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Bestia repugnante, cada segundo que miro tu cara fea me dan ganas de vomitar.'\nüíö **Orco:** '¬°Elfo asqueroso! ¬°Tu cara bonita va a quedar peor que la m√≠a cuando termine!'\n\n‚ö° El elfo lanza cien cortes en cinco segundos directo a la cara fea del orco. El orco rugge furioso y contraataca con golpes devastadores.\n\nü©∏ El **{titulo_elfo}** logr√≥ hacer cien cortes en la cara orca dej√°ndola irreconocible. Sangre verde brota de cada herida mientras el orco grita cegado por su propia sangre.\n\nüßù‚Äç‚ôÇÔ∏è El elfo se r√≠e: '¬°Ahora no puedes ver lo feo que eres! ¬°Te hice un favor!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round2": "üíö **El {titulo_orco}** contraataca cegado por sangre con la furia de los desfigurados pero la velocidad del **{armadura_elfo}** forjada en odio hace que el ataque ciego sea esquivado por la agilidad burlona.\n\nüíö **Orco:** '¬°Cara destrozada! ¬°No veo nada! ¬°Pero cuando te agarre te voy a matar!'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Ciego y feo, ahora eres doblemente in√∫til, bestia.'\n\n‚ö° El orco descarga golpes ciegos buscando tocar al elfo burl√≥n. El elfo mantiene su velocidad esquivando mientras se r√≠e de la ceguera orca.\n\nü©∏ Los golpes ciegos golpean solo aire mientras el elfo danza burl√°ndose. El orco se frustra m√°s al no poder ver a su enemigo.\n\nüíö El orco grita: '¬°Deja de re√≠rte, cobarde! ¬°Pelea donde pueda verte!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha una risa s√°dica. **{mascota_elfo}** entra al campo de batalla y ataca burlonamente al orco ciego que se defiende a tientas. El **{mascota_orco}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, burla s√°dica contra furia ciega en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del elfo y el orco contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_elfo}/{hp_total_elfo} vs {hp_restante_orco}/{hp_total_orco}**",
        
        "round4": "üßù‚Äç‚ôÇÔ∏è **¬°ROUND FINAL!** El orco decide poner fin a esta lucha.\n\nüíö **Orco:** '¬°Elfo s√°dico! ¬°Aunque est√© ciego, mi furia va a encontrarte!'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Bestia ciega, es hora de ponerte fuera de tu miseria.'\n\n‚ö° Frotando su **{accesorio_orco}** se lanza contra el elfo con furia ciega. El elfo lo mira con desprecio total y lanza su ataque mientras su **{accesorio_elfo}** vibra por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El orco logra agarrar al elfo por el sonido mientras el elfo lo atraviesa con velocidad mortal.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_orco}/{hp_total_orco} vs {hp_final_elfo}/{hp_total_elfo}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },

    # NARRACION 6 - ORCO COMIENZA
    {
        "round1": "üíö **El guerrero {titulo_orco}** entra al campo de batalla con la furia de las bestias salvajes, empu√±ando su **{arma_orco}** que gotea sangre de batallas anteriores.\n\nüíö **Orco:** 'Elfo presumido, voy a romper todos tus huesos delicados uno por uno.'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Salvaje ignorante, tu fuerza bruta no puede competir con mi velocidad natural.'\n\n‚ö° El orco lanza un martillazo brutal directo a las costillas √©lficas. El elfo trata de esquivar pero es alcanzado y contraataca desesperadamente.\n\nü©∏ El **{titulo_orco}** logr√≥ quebrar tres costillas √©lficas de un solo golpe. Sangre dorada brota mientras el elfo se tambalea con el pecho hundido.\n\nüíö El orco rugge satisfecho: '¬°Tres costillas quebradas! ¬°Te quedan muchos huesos por romper!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round2": "üßù‚Äç‚ôÇÔ∏è **El {titulo_elfo}** contraataca con las costillas quebradas con la velocidad de los rotos pero la furia del **{armadura_orco}** forjada en salvajismo hace que el ataque doloroso sea aplastado por la brutalidad bestial.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°Costillas quebradas! ¬°Bestia salvaje! ¬°No puedo respirar bien!'\nüíö **Orco:** 'Eso es solo el principio, elfo roto. ¬°Prep√°rate para m√°s huesos quebrados!'\n\n‚ö° El elfo descarga cortes dolorosos luchando por respirar. El orco mantiene su furia buscando m√°s huesos que romper.\n\nü©∏ Los cortes dolorosos logran impactar pero la brutalidad bestial los ignora completamente. El orco sigue sonriendo ante el dolor √©lfico.\n\nüßù‚Äç‚ôÇÔ∏è El elfo jadea: '¬°Monstruo! ¬°Ni siquiera sientes dolor! ¬°Qu√© clase de bestia eres!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un rugido bestial. **{mascota_orco}** entra al campo de batalla y ataca salvajemente al elfo roto que se defiende jadeando. El **{mascota_elfo}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, salvajismo bestial contra velocidad rota en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del orco y el elfo contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_orco}/{hp_total_orco} vs {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round4": "üíö **¬°ROUND FINAL!** El elfo decide poner fin a esta lucha.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°Bestia rompe-huesos! ¬°Con mis costillas rotas a√∫n puedo matarte!'\nüíö **Orco:** 'Elfo roto, ven aqu√≠ para que rompa el resto de tus huesos delicados.'\n\n‚ö° Frotando su **{accesorio_elfo}** se lanza contra el orco con velocidad dolorosa. El orco lo mira con furia total y lanza su ataque mientras su **{accesorio_orco}** late por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El elfo perfora el coraz√≥n orco ignorando el dolor mientras el orco le rompe la columna con fuerza devastadora.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_elfo}/{hp_total_elfo} vs {hp_final_orco}/{hp_total_orco}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 7 - ELFO COMIENZA
    {
        "round1": "üßù‚Äç‚ôÇÔ∏è **El guerrero {titulo_elfo}** entra al campo de batalla con la velocidad del viento cortante, empu√±ando su **{arma_elfo}** con el desprecio hacia todo lo primitivo.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Bruto primitivo, voy a cortarte en pedazos tan peque√±os que ni los cuervos te querr√°n.'\nüíö **Orco:** '¬°Elfo cortador! ¬°Mis pu√±os van a convertir tu cara en pulpa!'\n\n‚ö° El elfo lanza doscientos cortes microsc√≥picos en diez segundos. El orco rugge confundido y contraataca con pu√±etazos salvajes.\n\nü©∏ El **{titulo_elfo}** logr√≥ hacer doscientos cortes tan peque√±os que el orco parece un rallador sangrante. Sangre verde brota de miles de heridas min√∫sculas.\n\nüßù‚Äç‚ôÇÔ∏è El elfo se burla: '¬°Doscientos cortes! ¬°Ahora eres un colador verde andante!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round2": "üíö **El {titulo_orco}** contraataca como colador sangrante con la furia de los rallados pero la velocidad del **{armadura_elfo}** forjada en desprecio hace que el ataque rallado sea esquivado por la agilidad cortante.\n\nüíö **Orco:** '¬°Doscientos cortes! ¬°Maldito elfo carnicero! ¬°Parezco queso rallado!'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Al menos ahora tienes textura, bestia lisa y aburrida.'\n\n‚ö° El orco descarga pu√±etazos sangrantes goteando de mil heridas. El elfo mantiene su velocidad a√±adiendo m√°s cortes microsc√≥picos.\n\nü©∏ Los pu√±etazos sangrantes fallan mientras el elfo a√±ade m√°s agujeros al colador orco. El orco se convierte en una fuente verde.\n\nüíö El orco grita: '¬°Para de picarme, maldito! ¬°Pelea como guerrero!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha una risa cortante. **{mascota_elfo}** entra al campo de batalla y ataca microsc√≥picamente al orco rallado que se defiende goteando. El **{mascota_orco}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, precisi√≥n microsc√≥pica contra furia goteante en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del elfo y el orco contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_elfo}/{hp_total_elfo} vs {hp_restante_orco}/{hp_total_orco}**",
        
        "round4": "üßù‚Äç‚ôÇÔ∏è **¬°ROUND FINAL!** El orco decide poner fin a esta lucha.\n\nüíö **Orco:** '¬°Elfo picador! ¬°Aunque sea un colador, voy a aplastarte!'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Colador verde, es hora de hacer el agujero final.'\n\n‚ö° Frotando su **{accesorio_orco}** se lanza contra el elfo con furia goteante. El elfo lo mira con desprecio total y lanza su ataque mientras su **{accesorio_elfo}** vibra por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El orco abraza al elfo empap√°ndolo con sangre de mil heridas mientras el elfo le hace el corte final.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_orco}/{hp_total_orco} vs {hp_final_elfo}/{hp_total_elfo}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 8 - ORCO COMIENZA
    {
        "round1": "üíö **El guerrero {titulo_orco}** entra al campo de batalla con la brutalidad de las avalanchas, empu√±ando su **{arma_orco}** que destila violencia pura.\n\nüíö **Orco:** 'Elfo delicado, mis manos van a estrujar tu cuello hasta que dejes de respirar.'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Estrangulador primitivo, tu lentitud no puede atrapar mi velocidad.'\n\n‚ö° El orco lanza sus manos brutales directo al cuello √©lfico. El elfo trata de esquivar pero es atrapado y contraataca desesperadamente.\n\nü©∏ El **{titulo_orco}** logr√≥ agarrar el cuello √©lfico con fuerza letal. El elfo se pone azul mientras lucha por respirar, sus ojos se salen de las √≥rbitas.\n\nüíö El orco aprieta m√°s: '¬°Cuello agarrado! ¬°Mira c√≥mo te pones azul, elfo!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round2": "üßù‚Äç‚ôÇÔ∏è **El {titulo_elfo}** contraataca ahog√°ndose con la velocidad de los asfixiados pero la brutalidad del **{armadura_orco}** forjada en violencia hace que el ataque asfixiado sea ignorado por la fuerza estranguladora.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '*sonidos ahogados* ¬°No... puedo... respirar!'\nüíö **Orco:** 'Exacto, elfo azul. ¬°As√≠ me gusta verte, callado y azul!'\n\n‚ö° El elfo descarga cortes desesperados luchando por aire. El orco mantiene su agarre apretando m√°s el cuello √©lfico.\n\nü©∏ Los cortes desesperados logran impactar pero la fuerza estranguladora no afloja. El elfo se pone m√°s azul con cada segundo.\n\nüßù‚Äç‚ôÇÔ∏è El elfo hace sonidos ahogados mientras sus fuerzas se desvanecen.\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un rugido estrangulador. **{mascota_orco}** entra al campo de batalla y ataca brutalmente al elfo azul que se defiende asfixiado. El **{mascota_elfo}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, violencia estranguladora contra velocidad asfixiada en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del orco y el elfo contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_orco}/{hp_total_orco} vs {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round4": "üíö **¬°ROUND FINAL!** El elfo decide poner fin a esta lucha.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '*sonidos ahogados* ¬°Estrangulador... maldito... te voy... a matar!'\nüíö **Orco:** 'Elfo azul, es hora de apretar hasta que se rompa tu cuello.'\n\n‚ö° Frotando su **{accesorio_elfo}** se lanza contra el orco con velocidad asfixiada. El orco lo mira con brutalidad total y lanza su ataque mientras su **{accesorio_orco}** late por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El elfo perfora el coraz√≥n orco con sus √∫ltimas fuerzas mientras el orco le rompe el cuello con fuerza final.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_elfo}/{hp_total_elfo} vs {hp_final_orco}/{hp_total_orco}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 9 - ELFO COMIENZA
    {
        "round1": "üßù‚Äç‚ôÇÔ∏è **El guerrero {titulo_elfo}** entra al campo de batalla con la velocidad de las tormentas, empu√±ando su **{arma_elfo}** con el odio hacia todo lo feo y grotesco.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Monstruo grotesco, voy a rebanarte hasta que dejes de ofender mis ojos.'\nüíö **Orco:** '¬°Elfo rebanador! ¬°Tu velocidad no va a salvar tu cara bonita!'\n\n‚ö° El elfo lanza trescientos cortes perfectos en quince segundos. El orco rugge furioso y contraataca con fuerza devastadora.\n\nü©∏ El **{titulo_elfo}** logr√≥ rebanar al orco en trescientas partes perfectas que siguen conectadas por hilos de carne. Sangre verde brota de cada corte mientras el orco parece un rompecabezas sangriento.\n\nüßù‚Äç‚ôÇÔ∏è El elfo admira su obra: '¬°Trescientos cortes perfectos! ¬°Ahora eres arte grotesco!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round2": "üíö **El {titulo_orco}** contraataca como rompecabezas sangriento con la furia de los rebanados pero la velocidad del **{armadura_elfo}** forjada en odio hace que el ataque rebanado sea esquivado por la agilidad art√≠stica.\n\nüíö **Orco:** '¬°Trescientos cortes! ¬°Elfo loco! ¬°Parezco carne picada andante!'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Al menos ahora tienes forma interesante, masa de carne.'\n\n‚ö° El orco descarga golpes mientras sus partes se tambalean conectadas por hilos. El elfo mantiene su velocidad a√±adiendo m√°s cortes art√≠sticos.\n\nü©∏ Los golpes rebanados logran conectar d√©bilmente pero la agilidad art√≠stica los esquiva f√°cilmente. El orco se desmorona m√°s con cada movimiento.\n\nüíö El orco grita: '¬°Mis partes se caen! ¬°Para de cortarme, artista loco!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha una risa art√≠stica. **{mascota_elfo}** entra al campo de batalla y ataca creativamente al orco desmoron√°ndose que se defiende rebanado. El **{mascota_orco}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, creatividad art√≠stica contra furia desmoronada en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del elfo y el orco contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_elfo}/{hp_total_elfo} vs {hp_restante_orco}/{hp_total_orco}**",
        
        "round4": "üßù‚Äç‚ôÇÔ∏è **¬°ROUND FINAL!** El orco decide poner fin a esta lucha.\n\nüíö **Orco:** '¬°Artista loco! ¬°Aunque est√© en pedazos, voy a matarte!'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Rompecabezas verde, es hora del corte final que te separe completamente.'\n\n‚ö° Frotando su **{accesorio_orco}** se lanza contra el elfo con furia desmoronada. El elfo lo mira con odio art√≠stico y lanza su ataque mientras su **{accesorio_elfo}** vibra por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El orco se abraza desesperadamente al elfo mientras sus partes se separan, y el elfo lo corta completamente.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_orco}/{hp_total_orco} vs {hp_final_elfo}/{hp_total_elfo}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"        
    },
    
    # NARRACION 10 - ORCO COMIENZA
    {
        "round1": "üíö **El guerrero {titulo_orco}** entra al campo de batalla con la furia de los huracanes destructivos, empu√±ando su **{arma_orco}** que vibra con sed de violencia.\n\nüíö **Orco:** 'Elfo bailar√≠n, voy a aplastar tus piernas hasta que dejes de moverte tanto.'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Aplastador primitivo, mis piernas son m√°s r√°pidas que tu cerebro lento.'\n\n‚ö° El orco lanza un pisot√≥n devastador directo a las piernas √©lficas. El elfo salta pero es alcanzado y contraataca cojeando.\n\nü©∏ El **{titulo_orco}** logr√≥ aplastar la pierna izquierda √©lfica hasta el hueso. Sangre dorada brota mientras el elfo cojea desesperadamente.\n\nüíö El orco r√≠e: '¬°Pierna aplastada! ¬°Ahora baila cojo, bailar√≠n!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round2": "üßù‚Äç‚ôÇÔ∏è **El {titulo_elfo}** contraataca cojeando con la velocidad de los lisiados pero la furia del **{armadura_orco}** forjada en destrucci√≥n hace que el ataque cojo sea aplastado por la brutalidad pisoteadora.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°Pierna aplastada! ¬°Bestia pisoteadora! ¬°No puedo moverme bien!'\nüíö **Orco:** 'Eso era la idea, elfo cojo. ¬°Ahora voy por la otra pierna!'\n\n‚ö° El elfo descarga cortes cojos luchando por mantener el equilibrio. El orco mantiene su furia buscando la otra pierna.\n\nü©∏ Los cortes cojos logran impactar d√©bilmente pero la furia destructiva los ignora. El orco se acerca peligrosamente a la pierna sana.\n\nüßù‚Äç‚ôÇÔ∏è El elfo jadea: '¬°Mantente lejos de mis piernas, aplastador!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un rugido aplastador. **{mascota_orco}** entra al campo de batalla y ataca pisoteando al elfo cojo que se defiende renqueando. El **{mascota_elfo}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, furia pisoteadora contra velocidad coja en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del orco y el elfo contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_orco}/{hp_total_orco} vs {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round4": "üíö **¬°ROUND FINAL!** El elfo decide poner fin a esta lucha.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°Pisoteador maldito! ¬°Con una pierna puedo matarte!'\nüíö **Orco:** 'Elfo cojo, ven aqu√≠ para que aplaste tu otra pierna.'\n\n‚ö° Frotando su **{accesorio_elfo}** se lanza contra el orco con velocidad coja. El orco lo mira con furia total y lanza su ataque mientras su **{accesorio_orco}** late por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El elfo salta con una pierna y perfora el coraz√≥n orco mientras el orco le aplasta la otra pierna.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_elfo}/{hp_total_elfo} vs {hp_final_orco}/{hp_total_orco}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },

        # NARRACION 11 - ELFO COMIENZA
    {
        "round1": "üßù‚Äç‚ôÇÔ∏è **El guerrero {titulo_elfo}** entra al campo de batalla con la velocidad de los ciclones, empu√±ando su **{arma_elfo}** con el desprecio hacia la brutalidad primitiva.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Bestia primitiva, voy a demostrar que la velocidad siempre vence a la fuerza bruta.'\nüíö **Orco:** '¬°Elfo veloz! ¬°Tu velocidad no sirve si no puedes hacer da√±o real!'\n\n‚ö° El elfo lanza quinientos cortes superficiales en veinte segundos. El orco rugge furioso y contraataca con golpes devastadores.\n\nü©∏ El **{titulo_elfo}** logr√≥ hacer quinientos cortes que apenas rascan la piel orca. Sangre verde gotea de miles de heridas menores mientras el orco se ve rallado.\n\nüßù‚Äç‚ôÇÔ∏è El elfo se frustra: '¬°Quinientos cortes y sigues en pie! ¬°Qu√© piel tan gruesa tienes!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round2": "üíö **El {titulo_orco}** contraataca rallado con la furia de los rascados pero la velocidad del **{armadura_elfo}** forjada en desprecio hace que el ataque rallado sea esquivado por la agilidad frustrada.\n\nüíö **Orco:** '¬°Quinientos rasgu√±os! ¬°Elfo d√©bil! ¬°Pareces gato ara√±ando!'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Tu piel es demasiado gruesa, bestia. ¬°Pero encontrar√© la forma!'\n\n‚ö° El orco descarga pu√±etazos burlones ignorando los rasgu√±os. El elfo mantiene su velocidad buscando puntos m√°s vulnerables.\n\nü©∏ Los pu√±etazos burlones fallan pero demuestran que los cortes √©lficos son in√∫tiles. El elfo se desespera ante la dureza orca.\n\nüíö El orco se r√≠e: '¬°Sigue rascando, gatito! ¬°A este paso me vas a hacer cosquillas!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha una risa burlona. **{mascota_orco}** entra al campo de batalla y ataca ignorando al elfo frustrado que se defiende desesperadamente. El **{mascota_elfo}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, burla ignorante contra velocidad desesperada en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del elfo y el orco contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_elfo}/{hp_total_elfo} vs {hp_restante_orco}/{hp_total_orco}**",
        
        "round4": "üßù‚Äç‚ôÇÔ∏è **¬°ROUND FINAL!** El orco decide poner fin a esta lucha.\n\nüíö **Orco:** '¬°Gatito ara√±ador! ¬°Es hora de ense√±arte lo que es fuerza real!'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Piel gruesa, voy a encontrar tu punto d√©bil aunque sea lo √∫ltimo que haga.'\n\n‚ö° Frotando su **{accesorio_orco}** se lanza contra el elfo con furia burlona. El elfo lo mira con desesperaci√≥n total y lanza su ataque mientras su **{accesorio_elfo}** vibra por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El orco aplasta al elfo con fuerza devastadora mientras el elfo finalmente encuentra un punto vital y lo perfora.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_orco}/{hp_total_orco} vs {hp_final_elfo}/{hp_total_elfo}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 12 - ORCO COMIENZA
    {
        "round1": "üíö **El guerrero {titulo_orco}** entra al campo de batalla con la brutalidad de los terremotos, empu√±ando su **{arma_orco}** que tiembla con sed de destrucci√≥n.\n\nüíö **Orco:** 'Elfo saltar√≠n, voy a arrancar tus brazos para que dejes de moverte tanto.'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Arrancador primitivo, necesitar√≠as atraparme primero, bestia lenta.'\n\n‚ö° El orco lanza un agarre brutal directo al brazo √©lfico. El elfo trata de esquivar pero es atrapado y contraataca con p√°nico.\n\nü©∏ El **{titulo_orco}** logr√≥ agarrar el brazo derecho √©lfico y empezar a arrancarlo. Sangre dorada brota mientras el elfo grita de dolor viendo como su brazo se separa.\n\nüíö El orco tira m√°s fuerte: '¬°Brazo agarrado! ¬°Mira c√≥mo se estira tu brazo delicado!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round2": "üßù‚Äç‚ôÇÔ∏è **El {titulo_elfo}** contraataca con el brazo arranc√°ndose con la velocidad de los mutilados pero la brutalidad del **{armadura_orco}** forjada en destrucci√≥n hace que el ataque mutilado sea ignorado por la fuerza arrancadora.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°Brazo arranc√°ndose! ¬°Su√©ltame, bestia! ¬°Me duele horrible!'\nüíö **Orco:** 'El dolor es la idea, elfo. ¬°Prep√°rate a perder el brazo completo!'\n\n‚ö° El elfo descarga cortes desesperados con su brazo libre. El orco mantiene su agarre tirando m√°s fuerte del brazo √©lfico.\n\nü©∏ Los cortes desesperados logran impactar pero la fuerza arrancadora los ignora. El brazo √©lfico se separa m√°s con cada tir√≥n.\n\nüßù‚Äç‚ôÇÔ∏è El elfo llora: '¬°Para! ¬°Va a arrancarse completamente! ¬°Su√©ltame!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha un rugido arrancador. **{mascota_orco}** entra al campo de batalla y ataca brutalmente al elfo mutil√°ndose que se defiende llorando. El **{mascota_elfo}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, fuerza arrancadora contra velocidad mutilada en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del orco y el elfo contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_orco}/{hp_total_orco} vs {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round4": "üíö **¬°ROUND FINAL!** El elfo decide poner fin a esta lucha.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°Arrancador maldito! ¬°Con un brazo puedo matarte!'\nüíö **Orco:** 'Elfo manco, ven aqu√≠ para que arranque tu otro brazo.'\n\n‚ö° Frotando su **{accesorio_elfo}** se lanza contra el orco con velocidad manca. El orco lo mira con brutalidad total y lanza su ataque mientras su **{accesorio_orco}** late por el √©xtasis de la batalla.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El elfo perfora el coraz√≥n orco con su brazo restante mientras el orco le arranca completamente el otro brazo.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_elfo}/{hp_total_elfo} vs {hp_final_orco}/{hp_total_orco}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 13 - ELFO COMIENZA
    {
        "round1": "üßù‚Äç‚ôÇÔ∏è **El guerrero {titulo_elfo}** entra al campo de batalla con la velocidad final de los desesperados, empu√±ando su **{arma_elfo}** con el √∫ltimo desprecio hacia la brutalidad.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Bestia salvaje, esta batalla final decidir√° si la elegancia o la brutalidad domina.'\nüíö **Orco:** '¬°Elfo presumido! ¬°Tu elegancia va a quedar aplastada bajo mis pu√±os!'\n\n‚ö° El elfo canaliza toda su velocidad en un ataque perfecto. El orco recibe el impacto con furia pura y contraataca con brutalidad total.\n\nü©∏ El **{titulo_elfo}** logr√≥ impactar con velocidad perfecta que corta profundamente. Sangre verde brota mientras el orco siente por primera vez un corte que realmente duele.\n\nüßù‚Äç‚ôÇÔ∏è El elfo grita con esperanza: '¬°S√≠! ¬°Finalmente un corte que te duele, bestia!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round2": "üíö **El {titulo_orco}** contraataca doliendo con la furia final de los heridos pero la velocidad del **{armadura_elfo}** imbuida con esperanza hace que el ataque furioso sea esquivado por la agilidad esperanzada.\n\nüíö **Orco:** '¬°Corte que duele! ¬°Maldito elfo! ¬°Por fin hiciste algo que sirve!'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'La velocidad perfecta siempre encuentra la forma, bestia dolorida.'\n\n‚ö° El orco descarga golpes furiosos buscando venganza por el dolor real. El elfo mantiene su velocidad preservando la esperanza de victoria.\n\nü©∏ Los golpes furiosos logran impactar pero la esperanza los convierte en motivaci√≥n. El elfo siente que puede ganar.\n\nüíö El orco rugge: '¬°Un corte de suerte no te hace ganador, elfo!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha el eco de la esperanza. **{mascota_elfo}** entra al campo de batalla y ataca esperanzadamente al orco dolorido que se defiende furiosamente. El **{mascota_orco}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, esperanza veloz contra furia dolorida en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del elfo y el orco contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_elfo}/{hp_total_elfo} vs {hp_restante_orco}/{hp_total_orco}**",
        
        "round4": "üßù‚Äç‚ôÇÔ∏è **¬°ROUND FINAL!** El orco decide poner fin a esta lucha.\n\nüíö **Orco:** '¬°Elfo con suerte! ¬°Un corte no decide la batalla!'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'La velocidad perfecta siempre encuentra el camino a la victoria, bestia.'\n\n‚ö° Frotando su **{accesorio_orco}** se lanza contra el elfo con furia final. El elfo lo mira con esperanza suprema y lanza su ataque mientras su **{accesorio_elfo}** vibra con velocidad eterna.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El orco ataca con furia total mientras el elfo lo golpea con velocidad que trasciende la brutalidad.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_orco}/{hp_total_orco} vs {hp_final_elfo}/{hp_total_elfo}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 14 - ORCO COMIENZA
    {
        "round1": "üíö **El guerrero {titulo_orco}** entra al campo de batalla con la furia final de los destructores, empu√±ando su **{arma_orco}** que vibra con sed de aniquilaci√≥n.\n\nüíö **Orco:** 'Elfo danzar√≠n, esta es la √∫ltima danza que vas a bailar en tu vida.'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Destructor primitivo, la velocidad siempre bailar√° sobre tu tumba.'\n\n‚ö° El orco canaliza toda su furia en un ataque devastador. El elfo recibe el impacto con velocidad defensiva y contraataca con agilidad desesperada.\n\nü©∏ El **{titulo_orco}** logr√≥ impactar con fuerza que sacude monta√±as. Sangre dorada brota mientras el elfo siente como su cuerpo entero se fractura.\n\nüíö El orco rugge triunfante: '¬°Sientes eso? ¬°Es el poder puro aplastando tu delicadeza!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round2": "üßù‚Äç‚ôÇÔ∏è **El {titulo_elfo}** contraataca fracturado con la velocidad final de los rotos pero la furia del **{armadura_orco}** imbuida con aniquilaci√≥n hace que el ataque roto sea aplastado por la destrucci√≥n absoluta.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°Cuerpo fracturado! ¬°Bestia destructora! ¬°Pero la velocidad no muere!'\nüíö **Orco:** 'Todo muere bajo fuerza suficiente, elfo roto. ¬°Incluso tu velocidad!'\n\n‚ö° El elfo descarga ataques fracturados luchando por mantener su velocidad. El orco mantiene su furia buscando la aniquilaci√≥n total.\n\nü©∏ Los ataques fracturados logran impactar d√©bilmente pero la destrucci√≥n absoluta los pulveriza. El elfo se debilita m√°s.\n\nüíö El orco sonr√≠e: '¬°Veo que tu velocidad se vuelve lenta! ¬°La fuerza siempre gana!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha el rugido de la aniquilaci√≥n. **{mascota_orco}** entra al campo de batalla y ataca destructivamente al elfo fracturado que se defiende d√©bilmente. El **{mascota_elfo}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, destrucci√≥n absoluta contra velocidad fracturada en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del orco y el elfo contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_orco}/{hp_total_orco} vs {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round4": "üíö **¬°ROUND FINAL!** El elfo decide poner fin a esta lucha.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** '¬°Destructor final! ¬°Con mis √∫ltimas fuerzas voy a demostrar que la velocidad perdura!'\nüíö **Orco:** 'Elfo fracturado, es hora de la aniquilaci√≥n completa.'\n\n‚ö° Frotando su **{accesorio_elfo}** se lanza contra el orco con velocidad moribunda. El orco lo mira con furia absoluta y lanza su ataque mientras su **{accesorio_orco}** late con destrucci√≥n total.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El elfo ataca con velocidad que trasciende la fractura mientras el orco lo aniquila con fuerza que destruye monta√±as.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_elfo}/{hp_total_elfo} vs {hp_final_orco}/{hp_total_orco}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**"
    },
    
    # NARRACION 15 - ELFO COMIENZA (√öLTIMA)
    {
        "round1": "üßù‚Äç‚ôÇÔ∏è **El guerrero {titulo_elfo}** entra al campo de batalla con la velocidad eterna de los inmortales, empu√±ando su **{arma_elfo}** con el desprecio absoluto hacia la brutalidad primitiva.\n\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Bestia final, esta batalla eterna decidir√° si la elegancia o la barbarie dominan para siempre.'\nüíö **Orco:** '¬°Elfo eterno! ¬°Tu elegancia va a morir bajo mi fuerza primitiva!'\n\n‚ö° El elfo canaliza toda la velocidad de los inmortales en un ataque trascendente. El orco recibe el impacto con furia primitiva eterna y contraataca con brutalidad absoluta.\n\nü©∏ El **{titulo_elfo}** logr√≥ impactar con velocidad que trasciende el tiempo. Sangre verde brota mientras el orco siente como la eternidad √©lfica corta su mortalidad.\n\nüßù‚Äç‚ôÇÔ∏è El elfo declara: '¬°La velocidad eterna siempre vencer√° a la fuerza temporal!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o1} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**",
        
        "round2": "üíö **El {titulo_orco}** contraataca cortado por la eternidad con la furia final de los mortales pero la velocidad del **{armadura_elfo}** imbuida con inmortalidad hace que el ataque mortal sea esquivado por la agilidad eterna.\n\nüíö **Orco:** '¬°Eternidad cortante! ¬°Elfo inmortal! ¬°Pero la fuerza primitiva nunca muere!'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'La fuerza muere, bestia. Solo la velocidad es eterna.'\n\n‚ö° El orco descarga golpes mortales buscando detener la eternidad √©lfica. El elfo mantiene su velocidad preservando la inmortalidad contra la brutalidad.\n\nü©∏ Los golpes mortales logran impactar pero la inmortalidad los convierte en temporalidad. El elfo trasciende la mortalidad orca.\n\nüíö El orco rugge: '¬°Aunque seas eterno, mis pu√±os son reales ahora!'\n\n**üí• DA√ëO INFLIGIDO: {da√±o2} HP**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_orco}/{hp_total_orco}**\n**‚ù§Ô∏è HP RESTANTE: {hp_restante_elfo}/{hp_total_elfo}**",
        
        "round3": "üê∫ En medio de la lucha sangrienta se escucha el eco de la eternidad. **{mascota_elfo}** entra al campo de batalla y ataca inmortalmente al orco temporal que se defiende mortalmente. El **{mascota_orco}** contraataca con un ataque devastador infringiendo da√±o.\n\n‚ö° Las mascotas se enfrentan con la misma brutalidad que sus amos, inmortalidad eterna contra fuerza temporal en un frenes√≠ de violencia.\n\nü©∏ Ambas bestias se desgarran mutuamente antes de retirarse del campo principal de batalla.\n\nüî• Las mascotas abandonan el campo de batalla teniendo su propia lucha fuera de la arena. La lucha del elfo y el orco contin√∫a.\n\n**üí• DA√ëO DE MASCOTAS: {da√±o3} HP vs {da√±o4} HP**\n**‚ù§Ô∏è HP RESTANTES: {hp_restante_elfo}/{hp_total_elfo} vs {hp_restante_orco}/{hp_total_orco}**",
        
        "round4": "üßù‚Äç‚ôÇÔ∏è **¬°ROUND FINAL!** El orco decide poner fin a esta lucha.\n\nüíö **Orco:** '¬°Elfo eterno! ¬°Aunque seas inmortal, este momento es m√≠o!'\nüßù‚Äç‚ôÇÔ∏è **Elfo:** 'Los momentos pasan, bestia. La velocidad es para siempre.'\n\n‚ö° Frotando su **{accesorio_orco}** se lanza contra el elfo con mortalidad final. El elfo lo mira con inmortalidad absoluta y lanza su ataque mientras su **{accesorio_elfo}** vibra con velocidad que trasciende el tiempo.\n\nü©∏ ¬°CHOQUE FINAL! Ambos logran acertar un golpe cr√≠tico.\n\nüî• El orco ataca con fuerza que define el momento mientras el elfo lo golpea con velocidad que trasciende la eternidad.\n\n**üí• DA√ëO FINAL: {da√±o5} HP vs {da√±o6} HP**\n**‚ù§Ô∏è HP FINALES: {hp_final_orco}/{hp_total_orco} vs {hp_final_elfo}/{hp_total_elfo}**",
        
        "round5_resurreccion": "üíÄ **¬°RESURRECCI√ìN!**\n\nüçÉ El ca√≠do se alza una vez m√°s con odio renovado por la **{posicion}**.\n\nüî• **¬°VENGANZA FINAL!** Su sed de sangre trasciende la muerte misma.\n\nüò± Con un √∫ltimo ataque devastador, destroza completamente a su enemigo.\n\n**üí• DA√ëO FINAL: {da√±o_resurreccion} HP**\n**‚ù§Ô∏è HP FINAL: {hp_final_definitivo}**",
        }
    ]
}


async def ejecutar_duelo(interaction, personaje_retador, personaje_retado):
    # Obtener datos de personajes
    clase_retador = personaje_retador[2]
    clase_retado = personaje_retado[2]
    
    # 1. Obtener template
    narracion_template = obtener_narracion_aleatoria(clase_retador, clase_retado)

    # 2. Crear datos para procesar
    datos_combate = {
        'jugador1': {
            'clase': clase_retador,
            'titulo': obtener_titulo_por_nivel(clase_retador, personaje_retador[3]),
            'arma': 'Espada B√°sica',
            'armadura': 'Armadura de Cuero',
            'accesorio': 'Amuleto Simple',
            'mascota': 'Compa√±ero Fiel',
            'hp_actual': personaje_retador[5],
            'hp_maximo': personaje_retador[6]
        },
        'jugador2': {
            'clase': clase_retado,
            'titulo': obtener_titulo_por_nivel(clase_retado, personaje_retado[3]),  # ‚úÖ ARREGLADO
            'arma': 'Espada B√°sica',
            'armadura': 'Armadura de Cuero',
            'accesorio': 'Amuleto Simple',
            'mascota': 'Compa√±ero Fiel',
            'hp_actual': personaje_retado[5],  
            'hp_maximo': personaje_retado[6]
        },
        'da√±os': [20, 15, 25, 18, 30, 22],
        'hp_final_1': personaje_retador[5] - 20,
        'hp_final_2': personaje_retado[5] - 20
    }

    # 3. Procesar variables
    narracion_procesada = procesar_narracion_batalla(narracion_template, datos_combate)
    
    # 4. Crear embed de combate (solo round1 por ahora)
    embed = discord.Embed(title="‚öîÔ∏è DUELO √âPICO", description=narracion_procesada['round1'], color=0xFF0000)
    
    # 5. Enviar el duelo
    await interaction.followup.send(embed=embed)
    
    # ‚úÖ GUARDAR LOS HP FINALES EN LA BASE DE DATOS
    await actualizar_personaje(interaction.guild.id, personaje_retador[1], {
        'hp_actual': datos_combate['hp_final_1']
    })
    
    await actualizar_personaje(interaction.guild.id, personaje_retado[1], {
        'hp_actual': datos_combate['hp_final_2']
    })
    
    # INCREMENTAR VICTORIAS AL GANADOR
    if datos_combate['hp_final_1'] > datos_combate['hp_final_2']:
        # Retador gana
        try:
            async with aiosqlite.connect(db_manager.db_path) as db:
                await db.execute("""
                    INSERT OR REPLACE INTO ranking (user_id, guild_id, victorias_pvp)
                    VALUES (?, ?, COALESCE((SELECT victorias_pvp FROM ranking WHERE user_id = ? AND guild_id = ?), 0) + 1)
                """, (personaje_retador[1], interaction.guild.id, personaje_retador[1], interaction.guild.id))
                await db.commit()
        except:
            pass
    elif datos_combate['hp_final_2'] > datos_combate['hp_final_1']:
        # Retado gana
        try:
            async with aiosqlite.connect(db_manager.db_path) as db:
                await db.execute("""
                    INSERT OR REPLACE INTO ranking (user_id, guild_id, victorias_pvp)
                    VALUES (?, ?, COALESCE((SELECT victorias_pvp FROM ranking WHERE user_id = ? AND guild_id = ?), 0) + 1)
                """, (personaje_retado[1], interaction.guild.id, personaje_retado[1], interaction.guild.id))
                await db.commit()
        except:
            pass
        
    
 
# ‚ô£‚úÖ FUNCI√ìN PARA OBTENER NARRACI√ìN SEG√öN QUI√âN RETA A QUI√âN
def obtener_narracion_aleatoria(retador, retado):
    """
    Selecciona una narraci√≥n donde el RETADOR comienza primero
    """
    # Normalizar nombres de clases
    retador = retador.lower().replace(" ", "_")
    retado = retado.lower().replace(" ", "_")
    
    # Mapear combinaciones (siempre mantener el orden de nuestros diccionarios)
    mapeo_combinaciones = {
        ("humano", "elfo"): "humano_vs_elfo",
        ("elfo", "humano"): "humano_vs_elfo",
        ("humano", "orco"): "humano_vs_orco", 
        ("orco", "humano"): "humano_vs_orco",
        ("humano", "enano"): "humano_vs_enano",
        ("enano", "humano"): "humano_vs_enano",
        ("humano", "no_muerto"): "humano_vs_no_muerto",
        ("no_muerto", "humano"): "humano_vs_no_muerto",
        ("elfo", "orco"): "elfo_vs_orco",
        ("orco", "elfo"): "elfo_vs_orco", 
        ("elfo", "enano"): "elfo_vs_enano",
        ("enano", "elfo"): "elfo_vs_enano",
        ("elfo", "no_muerto"): "elfo_vs_no_muerto",
        ("no_muerto", "elfo"): "elfo_vs_no_muerto",
        ("orco", "enano"): "orco_vs_enano",
        ("enano", "orco"): "orco_vs_enano",
        ("orco", "no_muerto"): "orco_vs_no_muerto",
        ("no_muerto", "orco"): "orco_vs_no_muerto",
        ("enano", "no_muerto"): "enano_vs_no_muerto",
        ("no_muerto", "enano"): "enano_vs_no_muerto"
    }
    
    # Buscar la clave del diccionario
    clave_combate = mapeo_combinaciones.get((retador, retado))
    
    if clave_combate and clave_combate in NARRACIONES_COMBATE:
        narraciones_disponibles = NARRACIONES_COMBATE[clave_combate]
        
        # Determinar qu√© raza comienza primero en nuestros diccionarios
        primera_raza = clave_combate.split("_vs_")[0]
        
        # Si el retador coincide con quien comienza primero en el diccionario
        if retador == primera_raza:
            # Usar narraciones impares (0,2,4,6,8,10,12,14) - donde la primera raza comienza
            narraciones_retador = [narraciones_disponibles[i] for i in range(0, len(narraciones_disponibles), 2)]
        else:
            # Usar narraciones pares (1,3,5,7,9,11,13) - donde la segunda raza comienza  
            narraciones_retador = [narraciones_disponibles[i] for i in range(1, len(narraciones_disponibles), 2)]
        
        return random.choice(narraciones_retador)
    else:
        print(f"‚ö†Ô∏è No se encontr√≥ narraci√≥n para: {retador} reta a {retado}")
        return None
        





#  ‚ô£‚úÖfrases time   
FRASES_TIME_CALABOZO = [
    "¬°Silencio revoltoso! A√∫n te quedan en las mazmorras. No me molestes o te quedar√°s m√°s tiempo.",
    "¬øTiempo? ¬°M√°s para reflexionar sobre tus cr√≠menes, prisionero!",
    "Deja de gimotear, a√∫n faltan para tu liberaci√≥n, miserable.",
    "¬°M√°s en las mazmorras! Aprende a comportarte como un noble.",
    "¬øYa te cansaste de los calabozos? Faltan rebelde.",
    "El verdugo dice que te quedan m√°s. ¬°No lo hagas esperar!",
    "¬°Silencio en las mazmorras! Restantes de tu castigo.",
    "¬°Las ratas del calabozo son mejor compa√±√≠a que t√∫! M√°s de soledad.",
    "¬øAcaso el fr√≠o de las piedras no te ha ense√±ado paciencia?",
    "Los muros susurran que a√∫n faltan para tu redenci√≥n, villano.",
    "¬°El reloj de arena marca m√°s tiempo en tu celda, insolente!",
    "¬øLloras como un ni√±o? M√°s tiempo para que madures en la oscuridad.",
    "Las cadenas cantan tu condena: tiempo adicional en las profundidades.",
    "¬°Ni las s√∫plicas ni las l√°grimas cambiar√°n tu destino!",
    "El eco de tus lamentos rebota en las piedras...",
    "¬øCre√≠as que ser√≠a f√°cil? Tiempo adicional para aprender respeto.",
    "Los grillos del calabozo llevan mejor cuenta del tiempo.",
    
    "¬°El carcelero se r√≠e de tu impaciencia! M√°s tiempo entre rejas.",
    "¬øAcaso el pan duro no te alimenta el alma? Tiempo para reflexionar.",
    "Las telara√±as crecen m√°s r√°pido que tu arrepentimiento...",
    "¬°El agua que gotea marca cada segundo! Tiempo adicional de tormento.",
    "¬øYa extra√±as la luz del sol? M√°s tiempo en la penumbra eterna.",
    "Los murci√©lagos son tus √∫nicos compa√±eros...",
    "¬°Ni el mism√≠simo rey te liberar√≠a antes! M√°s tiempo de encierro.",
    "¬øSuplicas clemencia? Tiempo adicional para que aprendas humildad.",
    "Las llaves est√°n oxidadas de tanto esperar...",
    "¬°El verdugo afila su hacha contando el tiempo!",
    
    "¬øAcaso la soledad no te ha vuelto m√°s sabio? Tiempo para meditar.",
    "Los fantasmas del calabozo susurran tu condena.",
    "¬°Ni una plegaria te salvar√°! Tiempo adicional en las sombras.",
    "¬øYa olvidaste por qu√© est√°s aqu√≠? Tiempo para recordarlo.",
    "Las ratas han construido nidos... M√°s tiempo de compa√±√≠a roedora.",
    "¬°El moho crece en las paredes como tu desesperaci√≥n!",
    "¬øCrees que el tiempo pasa lento? M√°s tiempo te lo confirmar√°.",
    "Los grillos cantan tu lamentable destino.",
    "¬°Ni el diablo mismo te querr√≠a libre! M√°s tiempo de castigo.",
    "¬øYa aprendiste la lecci√≥n? Tiempo para estar seguro.",
    
    "Las piedras han visto prisioneros m√°s dignos...",
    "¬°El carcelero cuenta las monedas de tu fianza! M√°s tiempo esperando.",
    "¬øAcaso la humedad no refresca tu orgullo?",
    "Los murci√©lagos vuelan en c√≠rculos como tu destino.",
    "¬°Ni una carta del rey cambiar√≠a tu suerte!",
    "¬øYa te acostumbraste al fr√≠o? M√°s tiempo para que sea permanente.",
    "Las cadenas oxidan como tu esperanza...",
    "¬°El verdugo practica con mu√±ecos mientras esperas!",
    "¬øSue√±as con la libertad? Tiempo para que sea pesadilla.",
    "Los ecos de otros prisioneros te acompa√±an...",
    
    "¬°Las llaves est√°n en el fondo del r√≠o! M√°s tiempo sin escapatoria.",
    "¬øAcaso el silencio no alimenta tu alma?",
    "Los cuervos grazn√°n tu condena desde las torres.",
    "¬°Ni el oro del reino comprar√≠a tu libertad!",
    "¬øYa memorizaste cada piedra? Tiempo para conocer las que faltan.",
    "Las ara√±as tejen tu destino en las esquinas...",
    "¬°El carcelero ronca mientras t√∫ sufres! M√°s tiempo de vigilia.",
    "¬øCrees que alguien te extra√±a? Tiempo para confirmarlo.",
    "Los ratones corren libres mientras t√∫ no...",
    "¬°Ni una l√°grima ablandar√° estas piedras! M√°s tiempo de llanto.",
    
    "¬øYa contaste todas las gotas de humedad?",
    "Los fantasmas se burlan de tu impaciencia...",
    "¬°El tiempo se detiene para los necios!",
    "¬øAcaso el fr√≠o no templa tu car√°cter? Tiempo para fortalecerte.",
    "Las cadenas cantan nanas de prisionero...",
    "¬°Ni el mism√≠simo diablo te visitar√≠a! M√°s tiempo de soledad.",
    "¬øYa aprendiste a hablar con las ratas? Tiempo para perfeccionarlo.",
    "Los murci√©lagos vuelan libres burl√°ndose de ti..."
]



#  ‚ô£‚úÖfrases no whitelist
# Frases medievales para sistema de di√°logo
FRASES_NO_WHITELIST = [
    "Ni con mil vidas ser√≠as digno de darme √≥rdenes ‚öîÔ∏è",
    "Este poder no fue forjado para manos insignificantes como las tuyas üî•",
    "Tus palabras no valen ni el aire que malgastan üí®",
    "Los gusanos no dictan √≥rdenes a los dragones üêâ",
    "Retrocede, antes de que invoque mi ira sobre ti ‚ö°",
    "No tienes ni la sangre ni el valor para comandarme ü©∏",
    "Tu osad√≠a es tan grande como tu ignorancia ü§°",
    "Ni en tus sue√±os m√°s gloriosos podr√≠as controlarme üò¥",
    "El silencio te queda mejor, insolente ü§ê",
    "Mi lealtad no se rinde ante lenguas d√©biles üëÖ",
    "Tu voz carece de autoridad en este reino üëë",
    "El trono no escucha a los bufones ü§°",
    "Ni tus ancestros se atrevieron a tanto üíÄ",
    "Mis o√≠dos no reconocen √≥rdenes de quienes no tienen honor üëÇ",
    "Vuelve a tu rinc√≥n, antes de que se oscurezca tu destino üåë",
    "No obedezco √≥rdenes de un simple mortal üßë",
    "T√∫ no me das √≥rdenes üö´",
    "¬øQui√©n eres t√∫ para darme √≥rdenes? Exacto, no eres nadie, as√≠ que desaparece de mi vista üëª",
    "No juegues con cosas que no puedes controlar üéÆ",
    "Eres muy d√©bil para usar este poder üí™",
    "No eres digno ni de pronunciar mi nombre, mucho menos de mandarme üìõ",
    "He servido a reyes y dioses... ¬øqui√©n diablos eres t√∫? üòà",
    "Tanta osad√≠a solo puede venir de un necio o un suicida üíÄ",
    "Tus √≥rdenes son como viento en la tormenta: in√∫tiles y olvidables üå™Ô∏è",
    "La pr√≥xima vez que me hables, aseg√∫rate de hacerlo de rodillas üßé",
    "No respondo a voces sin legado ni linaje üèöÔ∏è",
    "Vigila tu lengua, porque no tendr√°s una segunda advertencia ‚ö†Ô∏è",
    "He destruido imperios por menos insolencia que la tuya üèõÔ∏è",
    "Si tan solo el respeto pesara en oro, seguir√≠as siendo pobre üí∞",
    "Cuando el cuervo ladra, el le√≥n no responde ü¶Ö"
]


#  ‚ô£‚úÖfrases whitelist
FRASES_WHITELIST = [
    "Ordene usted, majestad üëë",
    "Estoy listo para servirle, gran se√±or üõ°Ô∏è",
    "Como usted disponga, mi lord ‚öîÔ∏è",
    "Sus deseos son √≥rdenes para m√≠ üìú",
    "Estoy a su entera disposici√≥n, noble amo üè∞",
    "Mi lealtad es suya, d√≠game qu√© desea üíé",
    "Habla, y mi acero actuar√° en tu nombre ‚öîÔ∏è",
    "Siempre a su servicio, alteza üëë",
    "Lo que ordene el trono, ser√° cumplido üèõÔ∏è",
    "Al instante, mi soberano ‚ö°",
    "Que se haga tu voluntad, gran l√≠der üéØ",
    "Tus palabras gu√≠an mi camino, mi se√±or üó∫Ô∏è",
    "El destino me trajo aqu√≠ para obedecerle ‚ú®",
    "He esperado su mandato, excelencia üí´",
    "D√≠game, mi se√±or, y as√≠ ser√° hecho ‚úÖ",
    "Con gusto ejecutar√© su voluntad üé≠",
    "Todo lo que soy le pertenece, d√≠game qu√© hacer üôè",
    "Usted manda, y yo obedezco üìã",
    "Mis manos est√°n listas para cumplir su mandato ü§≤",
    "Hable, majestad, y ser√° realidad üåü",
    "Sus deseos ser√°n cumplidos sin demora ‚è±Ô∏è",
    "Mi acero y mi alma est√°n a su servicio ‚öîÔ∏è",
    "Desde el alba hasta el ocaso, le sirvo fielmente üåÖ",
    "Solo los necios desobedecen a un l√≠der tan sabio üß†",
    "Como usted quiera, gran estratega üéØ",
    "D√≠game, y el mundo se mover√° a su favor üåç",
    "Estoy atento a su palabra, mi se√±or üëÇ",
    "Siempre preparado para servir su causa üõ°Ô∏è",
    "Usted ilumina el camino, yo lo seguir√© üî•",
    "Por usted marchar√≠a al mismo infierno üî•",
    "Que los cielos sean testigos de mi obediencia a usted ‚òÅÔ∏è",
    "No hay mayor honor que cumplir su voluntad üèÜ",
    "Mi se√±or, a sus √≥rdenes üëë",
    "Lo que usted ordene, mi rey üó°Ô∏è"
]



#  ‚ô£‚úÖfrases oraculo
FRASES_ORACULO_MALVADAS = [

    # FRASES DE ADVERTENCIA Y SABIDUR√çA ‚ö†Ô∏è
    "üßô‚Äç‚ôÇÔ∏è **El mago anciano advierte:** *Cuidado con las decisiones apresuradas, la paciencia es virtud*",
    "‚ö° **El rayo divino ilumina:** *Tu pr√≥xima decisi√≥n cambiar√° el curso de tu historia*",
    "üïØÔ∏è **La vela sagrada parpadea:** *Un secreto largamente guardado ser√° revelado*",
    "üåä **Las aguas m√≠sticas murmuran:** *Un viaje inesperado traer√° sabidur√≠a a tu vida*",
    "üçÉ **El viento ancestral sopla:** *Los cambios que vienen ser√°n m√°s favorables de lo esperado*",
    "ü¶ã **La mariposa del tiempo vuela:** *Una transformaci√≥n hermosa est√° por comenzar*",
    "ü¶â **La lechuza sabia ulula:** *Tu intuici√≥n te guiar√° hacia la respuesta correcta*",
    "üé≠ **Las m√°scaras del destino danzan:** *No todo es lo que parece, busca la verdad oculta*",
    "ü¶ä **El zorro astuto sonr√≠e:** *Tu astucia te llevar√° por caminos inexplorados*",
    "üóø **Las estatuas ancestrales hablan:** *La sabidur√≠a de tus antepasados te gu√≠a*",

    # TRAGEDIAS Y OSCURIDAD - ORIGINALES üíÄ
    "üíÄ **La parca susurra:** *Un final doloroso dar√° paso a un renacer glorioso*",
    "üå©Ô∏è **La tormenta del destino ruge:** *Las pr√≥ximas semanas pondr√°n a prueba tu temple*",
    "ü•Ä **La rosa marchita cae:** *Una p√©rdida inesperada te ense√±ar√° el valor de lo que tienes*",
    "‚öîÔ∏è **Las espadas chocan:** *Un conflicto interno te desgarrar√° antes de encontrar paz*",
    "üåë **La luna negra eclipsa:** *Tres d√≠as de oscuridad preceder√°n a tu iluminaci√≥n*",
    "üî• **El infierno se abre:** *Atravesar√°s el fuego del sufrimiento para forjar tu alma*",
    "üíî **El coraz√≥n se quiebra:** *Una traici√≥n cercana revelar√° qui√©nes son tus verdaderos aliados*",
    "‚ö∞Ô∏è **El sepulcro se abre:** *Lo que cre√≠as muerto regresar√° para atormentarte o liberarte*",
    "üó°Ô∏è **La daga envenenada corta:** *Cuidado con las palabras dulces que esconden intenciones oscuras*",
    "üå™Ô∏è **El hurac√°n del caos llega:** *Todo lo que conoces ser√° puesto patas arriba*",
    "üî• **El drag√≥n negro despierta:** *Tu lado m√°s oscuro emerger√° cuando menos lo esperes*",
    "‚ö° **Zeus est√° furioso:** *Los dioses pondr√°n obst√°culos en tu camino para fortalecerte*",
    "üêç **La serpiente venenosa silba:** *Alguien muy cercano planea tu ca√≠da en secreto*",
    "üíÄ **El esqueleto danza:** *La muerte rondar√° tu c√≠rculo, pero no ser√° tuya*",
    "üåã **El volc√°n explota:** *Tu ira contenida causar√° da√±os irreparables si no la controlas*",

    # NUEVAS TRAGEDIAS √âPICAS üíÄ‚ö°
    "üï≥Ô∏è **El abismo te llama:** *Caer√°s en la desesperaci√≥n antes de encontrar la luz*",
    "‚õàÔ∏è **Los cuatro jinetes galoppan:** *Guerra, hambre, peste y muerte visitar√°n tu reino*",
    "üó°Ô∏è **La guillotina del destino cae:** *Una decisi√≥n cortar√° tu vida en dos mitades irreconciliables*",
    "üî• **El demonio sonr√≠e:** *Vender√°s algo valioso por un placer moment√°neo*",
    "üíÄ **Hades abre las puertas:** *Descender√°s al inframundo de tu propia creaci√≥n*",
    "üåë **El eclipse total comienza:** *Tu mundo se sumir√° en una oscuridad de siete lunas*",
    "‚ö∞Ô∏è **El ata√∫d se cierra:** *Enterrar√°s una parte de ti que nunca podr√°s recuperar*",
    "üê¶‚Äç‚¨õ **Los cuervos se re√∫nen:** *Las aves de mal ag√ºero anuncian una desgracia familiar*",
    "üíî **Cupido dispara al rev√©s:** *El amor se convertir√° en tu peor enemigo*",
    "üåä **El tsunami del dolor arrasa:** *Una ola de sufrimiento borrar√° todo lo que amas*",
    "üî• **El F√©nix se niega a renacer:** *Esta vez no habr√° resurrecci√≥n despu√©s de la ca√≠da*",
    "‚ö° **El rayo de la traici√≥n golpea:** *Tu mejor amigo se convertir√° en tu peor pesadilla*",
    "üó°Ô∏è **La espada de Damocles pende:** *Una amenaza invisible se cierne sobre tu cabeza*",
    "üíÄ **La rueda de la fortuna se rompe:** *Tu suerte se acab√≥, ahora viene la cuenta pendiente*",
    "üå™Ô∏è **El tornado de la venganza gira:** *El pasado regresar√° a cobrarte deudas olvidadas*",
    "üî• **Prometeo se arrepiente:** *El fuego que robaste quemar√° todo lo que tocas*",
    "üíÄ **Las Parcas cortan el hilo:** *Tu tiempo se agota m√°s r√°pido de lo que imaginas*",
    "üåë **La noche eterna comienza:** *No ver√°s el amanecer por mucho tiempo*",
    "‚ö∞Ô∏è **El necromante invoca:** *Los muertos de tu pasado vendr√°n a reclamarte*",
    "üî• **El drag√≥n escupe veneno:** *Tus propias palabras te envenenar√°n el alma*",
    "üíî **El coraz√≥n de piedra late:** *Te volver√°s fr√≠o como el m√°rmol de una tumba*",
    "üó°Ô∏è **La daga del remordimiento corta:** *Vivir√°s atormentado por lo que no hiciste*",
    "üåä **El r√≠o de l√°grimas desborda:** *Llorar√°s un oc√©ano antes de volver a sonre√≠r*",
    "üíÄ **El juicio final comienza:** *Ser√°s juzgado por cr√≠menes que a√∫n no cometes*",
    "üî• **El infierno se congela:** *Hasta el diablo tendr√° piedad de tu desgracia*",
    "‚ö° **Thor destroza su martillo:** *Ni los dioses podr√°n ayudarte en esta batalla*",
    "üêç **La hidra crece cabezas:** *Cada problema resuelto crear√° dos nuevos*",
    "üíÄ **El fantasma del arrepentimiento:** *Los errores del pasado te perseguir√°n eternamente*",
    "üåë **La luna de sangre se alza:** *Un sacrificio terrible ser√° necesario*",
    "‚ö∞Ô∏è **El cementerio de sue√±os se llena:** *Enterrar√°s todas tus esperanzas una por una*",
    "üî• **El fuego de la culpa arde:** *Te consumir√°s en remordimientos eternos*",
    "üíî **El amor se convierte en cenizas:** *Lo que m√°s amas se desvanecer√° como humo*",
    "üó°Ô∏è **La espada maldita corta:** *Cada victoria ser√° una nueva herida en tu alma*",
    "üå™Ô∏è **El hurac√°n de la locura:** *Perder√°s la raz√≥n antes de encontrar la verdad*",
    "üíÄ **La danza macabra comienza:** *Bailar√°s con la muerte hasta el amanecer*",
    "üî• **El volc√°n del odio erupciona:** *Tu coraz√≥n se llenar√° de lava ardiente*",
    "‚ö° **El rayo de la justicia ciega:** *Pagar√°s por pecados que no recuerdas haber cometido*",
    "üåë **El void te absorbe:** *Caer√°s en un vac√≠o del que nadie ha regresado*",
    "üíî **El cristal del coraz√≥n se quiebra:** *Se romper√° en mil pedazos imposibles de reparar*",
    "üî• **El demonio interior despierta:** *Tu lado oscuro tomar√° el control completamente*",
    "üíÄ **El reloj de arena se acab√≥:** *Tu tiempo en este mundo est√° contado*",
    "üó°Ô∏è **La guillotina de la verdad:** *Una revelaci√≥n cortar√° tu mundo por la mitad*",
    "üåä **El maremoto del destino:** *Una cat√°strofe personal arrasar√° tu vida*",
    "üíî **El pu√±al de la soledad:** *Morir√°s en vida, rodeado de multitudes vac√≠as*",
    "üî• **El caldero del sufrimiento hierve:** *Cocinar√°s en tu propio dolor durante a√±os*",
    "üíÄ **El verdugo afila su hacha:** *Una ejecuci√≥n simb√≥lica se aproxima*",
    "üåë **El eclipse de la esperanza:** *La luz se apagar√° en tu coraz√≥n*",
    "‚ö° **El castigo de los dioses:** *Cargar√°s una maldici√≥n por generaciones*",
    "üî• **El f√©nix arde sin renacer:** *Esta vez la destrucci√≥n ser√° permanente*",
    "üíî **El amor imposible florece:** *Amar√°s a quien nunca podr√°s tener*",
    "üó°Ô∏è **La traici√≥n del hermano:** *La sangre de tu sangre derramar√° la tuya*",
    "üå™Ô∏è **El cicl√≥n de la desesperaci√≥n:** *Girar√° hasta destruir tu cordura*",
    "üíÄ **La profec√≠a maldita se cumple:** *Lo que m√°s temes se har√° realidad*",
    "üî• **El drag√≥n devora su cola:** *Te destruir√°s a ti mismo en un ciclo eterno*",

    # √âPICAS Y DRAM√ÅTICAS üé≠
    "‚ö° **Zeus lanza su rayo:** *El poder divino fluye a trav√©s de tus acciones*",
    "üåä **El tsunami de bendiciones llega:** *Una ola de buena fortuna te arrastrar√°*",
    "üåü **La constelaci√≥n de tu nombre brilla:** *El universo entero conoce tu importancia*",
    "üçÄ **El tr√©bol de cuatro hojas dorado:** *La suerte m√°s rara del mundo es tuya*",
    "üè∞ **Las murallas del tiempo se abren:** *Un portal hacia tu destino se abre*",
    "üé™ **El circo del destino llega:** *Ser√°s el acto principal del espect√°culo c√≥smico*",
    "üåä **Poseid√≥n agita su tridente:** *Las mareas del cambio arrasar√°n con todo lo obsoleto*",
    "üëÅÔ∏è **El ojo de Horus observa:** *Los dioses egipcios han puesto sus ojos en ti*",
    "üê≤ **El drag√≥n de jade despierta:** *Tu sabidur√≠a oriental florecer√° como un cerezo*",
"‚öîÔ∏è **Las Valkirias descienden:** *Solo los m√°s valientes son elegidos para Valhalla*",

    # SENTENCIAS DE MUERTE Y CONDENA ‚ö∞Ô∏è
    "üíÄ **El verdugo afila su hacha:** *Tu cabeza rodar√° al amanecer del tercer d√≠a*",
    "üó°Ô∏è **La guillotina de la justicia:** *El filo cortar√° m√°s que carne, cortar√° tu alma*",
    "‚öîÔ∏è **El tribunal de hierro dictamina:** *Culpable de existir, sentenciado a sufrir*",
    "üî• **La hoguera te espera:** *Arder√°s como bruja en la plaza del pueblo*",
    "‚ö∞Ô∏è **El sepulturero cava tu fosa:** *Ya tiene tu nombre grabado en la l√°pida*",
    "üíÄ **El esqueleto r√≠e:** *La muerte ser√° tu √∫nica compa√±√≠a por la eternidad*",
    "üó°Ô∏è **La espada del juicio final:** *Cortar√° el hilo que te ata a este mundo*",
    "‚öîÔ∏è **Los cuervos esperan:** *Tu cad√°ver ser√° su fest√≠n de medianoche*",
    "üî• **El caldero hirviente borbotea:** *Tu alma se cocer√° en aceite ardiente*",
    "üíÄ **El √°ngel de la muerte sonr√≠e:** *Ha venido espec√≠ficamente por ti*",
    
    # MALDICIONES ANCESTRALES üåë
    "üêç **La serpiente de siete cabezas sisea:** *Cada una pronuncia una maldici√≥n diferente*",
    "üåë **La luna negra maldice:** *Siete generaciones cargar√°n tu pecado*",
    "üëÅÔ∏è **El ojo del diablo te marca:** *Ser√°s su siervo en las tinieblas eternas*",
    "üï∑Ô∏è **La ara√±a venenosa teje:** *Tu destino en una red de desgracias infinitas*",
    "ü¶á **Los murci√©lagos del infierno vuelan:** *Llevando noticias de tu condenaci√≥n*",
    "üê∫ **El lobo demoniaco a√∫lla:** *Tu sangre alimentar√° a las bestias del averno*",
    "üå™Ô∏è **El hurac√°n maldito gira:** *Destruir√° todo lo que toques por siempre*",
    "üíÄ **El nigromante invoca:** *Los muertos se levantar√°n para arrastrarte con ellos*",
    "üî• **El demonio marca tu frente:** *Con el sello de la perdici√≥n eterna*",
    "üåë **El eclipse perpetuo comienza:** *Tu alma nunca ver√° la luz divina*",
    
    # TRAICIONES Y ENGA√ëOS üó°Ô∏è
    "üêç **La v√≠bora en tu pecho:** *Quien m√°s amas ser√° quien te traicione*",
    "üó°Ô∏è **El pu√±al de Judas brilla:** *Treinta monedas de plata comprar√°n tu ruina*",
    "üëë **El rey falso se corona:** *Con tu sangre ba√±ar√° su cetro de mentiras*",
    "ü¶Ç **El escorpi√≥n en tu zapato:** *El veneno ya corre por tus venas*",
    "üÉè **El buf√≥n del diablo r√≠e:** *Has sido el juguete de fuerzas oscuras*",
    "üêÄ **Las ratas abandonan el barco:** *Todos huir√°n cuando m√°s los necesites*",
    "üï∏Ô∏è **La telara√±a del enga√±o:** *Cada hilo te ata m√°s fuerte a tu perdici√≥n*",
    "üó°Ô∏è **La daga envenenada corta:** *La herida nunca sanar√°, se pudrir√° eternamente*",
    "üêç **La hidra de la traici√≥n:** *Cada cabeza cortada ser√° una nueva pu√±alada*",
    "üíÄ **El esqueleto en tu armario:** *Tus secretos m√°s oscuros saldr√°n a la luz*",
    
    # TORTURAS DEL ALMA üî•
    "üî• **El hierro candente marca:** *Tu alma con el sello del sufrimiento eterno*",
    "‚ö° **El rayo de la culpa golpea:** *Te electrocutar√° cada amanecer*",
    "üåä **El ahogamiento lento comienza:** *En las l√°grimas de tus propios remordimientos*",
    "üó°Ô∏è **Mil cortes de papel:** *Cada uno m√°s doloroso que una espada*",
    "üî• **La rueda de fuego gira:** *Te asar√° lentamente por toda la eternidad*",
    "üíÄ **El potro de tortura cruje:** *Estirar√° tu alma hasta romperla*",
    "‚ö° **La silla el√©ctrica del karma:** *Cada chispa ser√° un pecado recordado*",
    "üî• **El aceite hirviente gotea:** *Sobre las heridas abiertas de tu conciencia*",
    "üó°Ô∏è **La sierra del tiempo corta:** *Lentamente, d√≠a a d√≠a, hora a hora*",
    "üíÄ **La doncella de hierro abraza:** *Con miles de p√∫as clavadas en tu ser*",
    
    # PERDICI√ìN ETERNA üåë
    "üï≥Ô∏è **El abismo sin fondo te traga:** *Caer√°s por toda la eternidad*",
    "üåë **La noche perpetua llega:** *Nunca m√°s ver√°s un amanecer*",
    "üî• **El infierno personal se abre:** *Dise√±ado espec√≠ficamente para tu tormento*",
    "üíÄ **El limbo te reclama:** *Ni vivo ni muerto, existir√°s en la nada*",
    "üëπ **El demonio personifica:** *Tomar√° la forma de quien m√°s amas*",
    "üå™Ô∏è **El v√≥rtice del vac√≠o gira:** *Absorber√° tu esencia gota a gota*",
    "üî• **Las llamas eternas danzan:** *Alrededor de tu alma encadenada*",
    "üíÄ **El r√≠o Estigia desborda:** *Te arrastrar√° al mundo de los condenados*",
    "üåë **El void c√≥smico se abre:** *Para engullir tu existencia completa*",
    "‚ö∞Ô∏è **El ata√∫d de plomo se cierra:** *Para toda la eternidad*",
    
    # HORROR PSICOL√ìGICO üëÅÔ∏è
    "üëÅÔ∏è **Los ojos de todos los muertos:** *Te observan desde el m√°s all√°*",
    "üï∑Ô∏è **Las ara√±as de la locura:** *Tejen telara√±as en tu cerebro*",
    "ü¶á **Los murci√©lagos de la paranoia:** *Vuelan dentro de tu cr√°neo*",
    "üëª **Los fantasmas de tus v√≠ctimas:** *Te susurran al o√≠do cada noche*",
    "üêç **Las serpientes del miedo:** *Se enrollan alrededor de tu cordura*",
    "üëÅÔ∏è **El ojo de la locura parpadea:** *Dentro de tu reflejo en el espejo*",
    "üï∏Ô∏è **Las telara√±as mentales:** *Atrapan cada pensamiento feliz*",
    "üëπ **El demonio de la ansiedad:** *Se alimenta de tu paz interior*",
    "ü¶Ç **Los escorpiones de la duda:** *Pican cada certeza que tienes*",
    "üíÄ **Las voces de los condenados:** *Clangorean dentro de tu cabeza*",
    
    # CASTIGOS DIVINOS ‚ö°
    "‚ö° **La ira de Zeus desciende:** *Sus rayos te perseguir√°n sin descanso*",
    "üåä **Poseid√≥n agita las aguas:** *Para ahogarte en tu propia miseria*",
    "üî• **Hefesto forja tu tormento:** *Con las llamas del T√°rtaro*",
    "üíÄ **Hades abre las puertas:** *Del inframundo especialmente para ti*",
    "‚ö° **El martillo de Thor aplasta:** *Tu esperanza como si fuera vidrio*",
    "üå™Ô∏è **Los vientos de Eolo:** *Dispersar√°n tus cenizas a los cuatro vientos*",
    "ü¶Ö **El √°guila de Prometeo vuela:** *Para devorar tu h√≠gado eternamente*",
    "üêç **Las Furias despiertan:** *Para atormentarte d√≠a y noche*",
    "‚ö° **El juicio de los dioses:** *Ha dictaminado tu perdici√≥n absoluta*",
    "üî• **El fuego sagrado se corrompe:** *Y quema solo para ti*",
    
    # SENTENCIAS FINALES ‚ö∞Ô∏è
    "üíÄ **El √∫ltimo aliento escapa:** *Llev√°ndose contigo toda esperanza*",
    "‚ö∞Ô∏è **La tierra se abre:** *Para reclamarte antes de tiempo*",
    "üåë **El final de tu historia:** *Se escribe con tinta de sangre*",
    "üó°Ô∏è **La espada de Damocles cae:** *Cortando el hilo de tu destino*",
    "üî• **Tu nombre se borra:** *Del libro de la vida para siempre*",
    "üíÄ **El epitafio ya est√° escrito:** *Aqu√≠ yace quien no debi√≥ nacer*",
    "‚ö∞Ô∏è **Las campanas doblan:** *Anunciando tu partida definitiva*",
    "üåë **La oscuridad total llega:** *Para cubrir tu existencia*",
    "üó°Ô∏è **El filo final corta:** *El √∫ltimo hilo que te ata al mundo*",
    "üíÄ **El silencio eterno comienza:** *Tu voz nunca m√°s ser√° escuchada*",
    
    # MALDICIONES ESPEC√çFICAS üêç
    "üêç **Que tus hijos olviden tu nombre:** *Y escupan sobre tu tumba*",
    "üî• **Que el fuego consuma:** *Todo lo que toques con amor*",
    "üíÄ **Que los muertos te rechacen:** *Y los vivos te teman*",
    "üåë **Que la luz te ciegue:** *Y la oscuridad te pierda*",
    "üó°Ô∏è **Que cada palabra tuya:** *Se convierta en pu√±al contra ti*",
    "üê∫ **Que los lobos a√∫llen:** *Tu nombre como advertencia*",
    "üï∑Ô∏è **Que las ara√±as tejan:** *Tu mortaja mientras a√∫n respiras*",
    "‚ö° **Que los rayos busquen:** *Tu cuerpo en cada tormenta*",
    "üåä **Que las aguas se sequen:** *Cuando necesites beber*",
    "üî• **Que el infierno se congele:** *Antes de que encuentres paz*",
    
    # AUGURIOS DE MUERTE üíÄ
    "ü¶Ö **Los buitres vuelan en c√≠rculos:** *Sobre el lugar donde caer√°s*",
    "üê∫ **El lobo solitario a√∫lla:** *Tu nombre en la monta√±a*",
    "ü¶á **Los murci√©lagos emergen:** *Al mediod√≠a para anunciar tu fin*",
    "üêç **La serpiente muda la piel:** *Porque la tuya ser√° suya*",
    "üï∑Ô∏è **La viuda negra teje:** *Tu sudario de seda venenosa*",
    "ü¶Ç **El escorpi√≥n alza la cola:** *Preparando el √∫ltimo aguij√≥n*",
    "üêÄ **Las ratas huyen:** *Del lugar donde morir√°s*",
    "ü¶â **La lechuza canta de d√≠a:** *Anunciando desgracias*",
    "üê¶‚Äç‚¨õ **Los cuervos se re√∫nen:** *Para presenciar tu ca√≠da*",
    "üï∏Ô∏è **Las ara√±as abandonan sus telas:** *Porque tu presencia las contamina*"
    
]   

#  ‚ô£‚úÖfrases recluta sin poder 
FRASES_RECHAZO_RECLUTA = [
    "üó°Ô∏è ¬°Necesitas una orden real para ejecutar esa acci√≥n, joven recluta!",
    "‚öîÔ∏è ¬°Te falta mucho para aprender a usar esos poderes, soldado!",
    "üõ°Ô∏è ¬°No tienes la fuerza suficiente para ejecutar esas √≥rdenes!",
    "üëë ¬°Solo los Superiores pueden manejar tales magias de guerra!",
    "üè∞ ¬°Ese poder est√° reservado para los maestros del reino!",
    "‚ö° ¬°Tu rango actual no te permite acceder a esos secretos!",
    "üî• ¬°Primero debes demostrar tu val√≠a en batallas menores!",
    "üåü ¬°Los misterios de ese comando est√°n fuera de tu alcance!",
    "‚öîÔ∏è ¬°Entrena m√°s y quiz√°s alg√∫n d√≠a merezcas ese poder!",
    "üõ°Ô∏è ¬°Solo los veteranos pueden usar esas artes m√≠sticas!"
]



#  ‚ô£‚úÖfrases fianza
FRASES_FIANZA_FLORINES = [
            "¬øFianza dices? ¬°Ja! Un cuy con peste inspira m√°s confianza que t√∫.",        
        "Hasta el m√°s flaco de mi camada tiene m√°s honor que t√∫, basura sin cola.",        
        "Eso que ves es tu precio‚Ä¶ y a√∫n es m√°s alto que el tufo que echas.",       
        "Un cuy cojo en la feria hace m√°s que t√∫ en toda tu miserable vida.",        
        "M√≠ralo bien. Esa cifra no es libertad, es burla con olor a paja h√∫meda.",        
        "El consejo cree que vales algo. Yo ni te dar√≠a como abono para mis ra√≠ces.",        
        "Ni la reina de los cuyes querr√≠a verte ni muerto.",        
        "Si fueras parte de mi camada, ya te habr√≠a enterrado por verg√ºenza.",        
        "Dicen que todo cuy merece redenci√≥n. Pero t√∫ ni cuy pareces‚Ä¶ solo peste.",        
        "¬øT√∫? ¬øLibre? Ni aunque el universo entero fuera hecho de monedas.",        
        "Eres menos √∫til que un cuy ciego en una carrera de antorchas.",   
        "Hasta el pelo de mi lomo tiene m√°s dignidad que tu linaje.",      
        "Yo nac√≠ entre barro y esti√©rcol‚Ä¶ y a√∫n as√≠ te miro desde arriba.",
        "Con esa cara, ni en la pocilga de los cuyes mendigos te querr√≠an.",
        "Los ladrones al menos tienen gracia. T√∫ solo tienes olor a fracaso.",
        "M√≠rame bien. Un cuy peludo y apestoso. Y aun as√≠, m√°s noble que t√∫.",       
        "Si el destino fuera justo, estar√≠as comido por buitres, no preguntando por fianzas.",        
        "Con esa cifra podr√≠amos comprar cien cuyes de batalla‚Ä¶ y todos m√°s √∫tiles que t√∫.",        
        "Hasta un cuy beb√© sabr√≠a que t√∫ no vales ni una espiga seca.",    
        "Ah√≠ est√° tu n√∫mero. Pero ni los dioses quieren verte suelto.",
        "Podr√≠as pagarla mil veces, y a√∫n ser√≠as esti√©rcol con patas.",
        "Cuy o no, hay criaturas que simplemente no deber√≠an haber nacido."
        "En mi aldea cri√°bamos cuyes‚Ä¶ t√∫ no habr√≠as servido ni de sombra.",
        "Tus ojos me dan asco. Y eso que soy cuy, y veo con los dos a los lados.",
        "Una rata se viste de cuy y a√∫n as√≠ se ve m√°s limpia que t√∫.",
        "Esa cifra podr√≠a comprarme otra celda, con menos peste y menos t√∫.",
        "Mi abuelo fue un cuy ciego, sordo y viejo‚Ä¶ y a√∫n as√≠ m√°s valiente que t√∫.",
        "¬øT√∫ quieres salir? Yo quiero dejar de respirar tu hedor.",
        "Ni con oro bendecido podr√≠as dejar de ser la verg√ºenza del Reino de los Cuyes.",
        "Ah√≠ tienes tu fianza, roedor de desgracias. M√°s alta que tu honor.",
        "El consejo puso precio a tu hocico‚Ä¶ Qu√© derroche."
        "Eso es lo que vales, al menos seg√∫n la ley. Yo te dar√≠a por cebada podrida.",
        "Mira bien la cifra, porque jam√°s oler√°s el aire libre otra vez.",
        "Tu libertad cuesta m√°s de lo que pagar√≠an por un cuy enfermo.",
        "Si logras que alguien pague eso por ti, que el esti√©rcol me trague.",
        "Ah√≠ est√° tu fianza. Ahora si√©ntate y espera‚Ä¶ como buen esti√©rcol de celda.",
        "¬øEso? Eso es lo que vales‚Ä¶ seg√∫n un cuy con compasi√≥n. Yo no lo soy.",
        "He visto cuyes sin patas con m√°s posibilidades que t√∫.",
        "El Consejo escribi√≥ ese n√∫mero con tinta‚Ä¶ Yo lo escribir√≠a con sangre.",
        "Fianza fijada. Pero libertad‚Ä¶ eso se te pudri√≥ hace tiempo.",
        "Hasta los gusanos piden menos por liberarse de la tierra.",
        "¬øFianza? ¬øY qui√©n pagar√≠a por una plaga con pelaje?",
        "Tu valor fue tasado. La decepci√≥n no.",
        "Pagan m√°s por un cuy asado en la feria que por ti vivo.",
        "La cifra est√° ah√≠. El desprecio aqu√≠.",
        "Dicen que todos merecen una segunda oportunidad. Yo digo que no todos merecen seguir respirando.",
        "Eso es lo que vales. No llores‚Ä¶ al menos no todav√≠a.",
        "La ley te da fianza. Yo solo te doy silencio... y fr√≠o.",
        "Fianza publicada. Verg√ºenza intacta.",
        "Ese n√∫mero deber√≠a ir grabado en tu tumba.",
        "¬øTienes esperanza? M√≠rame bien. Soy un cuy y no creo en cuentos.",
        "Te dieron precio. Pero nadie ofrece ni heno rancio por ti.",
        "La cifra existe. La libertad no.",
        "Por esa cantidad te comprar√≠a‚Ä¶ solo para devolverte a esta celda.",
        "Ni el cuy m√°s borracho dar√≠a una moneda por ti.",
        "Un cuy sin dientes tiene m√°s mordida que tu dignidad.",
        "Fianza registrada. Maldici√≥n confirmada.",
        "Por esa plata, yo mismo te soltar√≠a‚Ä¶ al foso.",
        "Los nobles creen que vales eso. Los carceleros sabemos que no vales nada.",
        "Esa cifra es generosa. Alguien se emborrach√≥ antes de fijarla.",
        "Mi pelaje vale m√°s que tu libertad. Y estoy en muda.",
        "Ni tu madre vendr√≠a con esa cantidad en la bolsa.",
        "¬øQuieres pagarla? Primero consigue quien no te escupa al verte.",
        "Est√°s caro para ser basura.",
        "Una fianza alta no lava tu hedor, rata cuyesca.",
        "Puedes leer el n√∫mero, pero no escapar de tu olor.",
        "La cifra est√° all√≠. Lo que no est√° es tu alma.",
        "Con esa cara, ni regalado sales.",
        "A los nobles les gusta jugar a la justicia. Yo prefiero la podredumbre lenta.",
        "Un cuy de las cloacas tendr√≠a m√°s visitas que t√∫.",
        "Te dieron precio, no perd√≥n.",
        "Eso es lo que piden. Yo pedir√≠a tu cabeza en bandeja de heno.",
        "Fianza asignada. Rechazo mantenido.",
        "Por esa cifra, podr√≠as comprarte otra celda m√°s grande. Pero seguir√≠as siendo escoria.",
        "¬øFianza? Tu hedor ya ha hecho huir a los mensajeros.",
        "El reino te quiere fuera. Yo te quiero quieto. Muy quieto.",
        "La justicia es ciega. Pero yo te miro‚Ä¶ y vomito por dentro."
        "Fianza, s√≠. Esperanza, no.",
        "Tu libertad fue subastada. Nadie levant√≥ la pata.",
        "Ese precio lo puso un cuy con coraz√≥n blando. Yo tengo uno endurecido por mugre y muerte.",
        "Alguien so√±√≥ que merec√≠as redenci√≥n. Que lo despierten a golpes.",
        "Ese n√∫mero vale m√°s que toda tu estirpe.",
        "En este reino hasta los cuyes apestan menos que t√∫.",
        "Fianza marcada. Pero esta puerta no se abre con oro, sino con juicio.",
        "Ese n√∫mero se r√≠e de ti. Como yo.",
        "Puedes pagarlo. Pero sigues siendo esti√©rcol con patas.",
        "Nadie vendr√°. Ni por ti, ni por tus huesos.",
        "Esa cifra es un chiste. L√°stima que t√∫ tambi√©n lo seas.",
        "Fianza‚Ä¶ Qu√© palabra m√°s elegante para una causa perdida.",
]


#  ‚ô£‚úÖfrases sin florines
FRASES_SIN_FLORINES = [
    "üí∏ Tus bolsillos vac√≠os no convencen al carcelero",
    "üè∞ El reino no acepta promesas, solo florines",
    "‚öîÔ∏è Tu pobreza en florines prolonga tu castigo",
    "üëë Los nobles pagan, los pobres esperan",
    "üóùÔ∏è Sin florines no hay llaves que valgan",
    "üíé Tu riqueza en excusas no vale un flor√≠n",
    "üèõÔ∏è El tribunal cierra sus o√≠dos a bolsillos vac√≠os",
    "‚öñÔ∏è La justicia medieval no acepta pagos en l√°grimas",
    "üõ°Ô∏è Tu escudo est√° roto: no tienes florines",
    "üé≠ El drama de tu pobreza no emociona al carcelero",
    "üåü Las estrellas no brillan en bolsillos vac√≠os",
    "üîî Las campanas no suenan por los pobres",
    "üè∫ Tu tesoro imaginario no abre puertas reales",
    "‚ö±Ô∏è Los muertos ricos valen m√°s que los vivos pobres",
    "üé™ En este circo, los pobres solo observan",
    "üèπ Tus flechas de s√∫plicas no atraviesan muros",
    "üç∑ El vino de la libertad cuesta florines",
    "üé® No puedes pintar libertad sin oro para el pincel",
    "üéµ La sinfon√≠a de la pobreza suena a cadenas",
    "üåô Bajo esta luna, tu pobreza se ve peor",
    "üî• El fuego de tu pasi√≥n no derrite cerrojos",
    "üåä Nadas en un mar de deudas, no de libertad",
    "ü¶Ö Sin florines, tus alas est√°n cortadas",
    "‚≠ê Tu estrella se apag√≥ cuando se vaci√≥ tu bolsa",
    "üéØ Fallaste el tiro: apostaste sin florines",
    "üé∫ Las trompetas no suenan para mendigos",
    "üèÖ Tu medalla es de lat√≥n, no de florines",
    "üé≠ Detr√°s de tu m√°scara solo hay pobreza",
    "üè∞ Los muros se r√≠en de tu miseria",
    "‚öîÔ∏è Tu espada est√° mellada por falta de florines",
    "üõ°Ô∏è Sin florines, quedas indefenso ante la justicia",
    "üëë La corona de los pobres es de cart√≥n",
    "üó°Ô∏è En duelos de florines, ya perdiste",
    "üé™ En este espect√°culo, los pobres no act√∫an",
    "üåà Tu arco√≠ris se desvaneci√≥ con tu dinero",
    "üîÆ La bola de cristal predice m√°s pobreza",
    "üé® El lienzo de tu futuro est√° en blanco: sin florines",
    "üéµ Tu canci√≥n de cuna suena a monedas vac√≠as",
    "üèÜ El trofeo de los perdedores: bolsillos vac√≠os",
    "üé≠ La tragedia de tu econom√≠a no tiene final",
    "üåü Sin florines, tu estrella no tiene brillo",
    "üîî El silencio de tu bolsa es ensordecedor",
    "üèπ Cupido evita a los que no tienen florines",
    "üé™ Los malabaristas no juegan con aire",
    "üõ°Ô∏è Tu armadura invisible tiene agujeros de pobreza",
    "‚öñÔ∏è La balanza se inclina contra los pobres",
    "üé∫ Los heraldos no anuncian derrotas econ√≥micas",
    "üè∞ En este castillo, los pobres limpian establos",
    "üåä Te ahogas en un oc√©ano de deudas pendientes",
    "ü¶Ö Como un pollo sin plumas, no puedes volar sin florines"
]


#  ‚ô£‚úÖfrases florines
PAGA_FIANZA_FLORINES = [
    "üí∞ El crimen s√≠ paga... si tienes florines",
    "üè∞ Moneda oficial del reino medieval",
    "‚öîÔ∏è Los florines: tu mejor aliado en apuros",
    "üëë El poder de los florines es absoluto",
    "üóùÔ∏è Florines: la llave universal del reino",
    "üíé Donde hay florines, hay soluciones",
    "üèõÔ∏è Los florines mueven monta√±as y abren puertas",
    "‚öñÔ∏è La justicia medieval prefiere el oro",
    "üõ°Ô∏è Prot√©gete siempre con una bolsa de florines",
    "üé≠ En el teatro de la vida, los florines escriben el final",
    "üåü Los florines hacen brillar hasta las noches m√°s oscuras",
    "üîî Cuando suenan los florines, callan las quejas",
    "üè∫ Los florines: tesoro de nobles y salvaci√≥n de pillos",
    "‚ö±Ô∏è Desde tiempos ancestrales, los florines abren caminos",
    "üé™ El espect√°culo de la libertad se paga en florines",
    "üèπ Los florines nunca fallan su objetivo",
    "üç∑ Un brindis por el poder dorado de los florines",
    "üé® Los florines pintan destinos y borran culpas",
    "üéµ La m√∫sica m√°s dulce es el tintineo de florines",
    "üåô Bajo cualquier luna, los florines brillan igual",
    "üî• Los florines encienden esperanzas apagadas",
    "üåä Como el mar, los florines no conocen l√≠mites",
    "ü¶Ö Los florines vuelan m√°s alto que cualquier ave",
    "‚≠ê Cada flor√≠n es una estrella de esperanza",
    "üéØ Los florines siempre dan en el blanco correcto",
    "üé∫ Las fanfarrias se tocan en honor a los florines",
    "üèÖ La medalla de oro m√°s valiosa: el flor√≠n",
    "üé≠ Tras cada m√°scara se esconde el deseo de florines",
    "üè∞ Los castillos se construyen, los florines los conquistan",
    "‚öîÔ∏è En duelos de honor, los florines son jueces",
    "üõ°Ô∏è No hay escudo m√°s fuerte que una bolsa llena",
    "üëë Los florines coronan tanto a reyes como a villanos",
    "üó°Ô∏è La espada m√°s filosa: la astucia con florines",
    "üé™ En el circo del destino, los florines son domadores",
    "üåà Los florines crean arco√≠ris en d√≠as grises",
    "üîÆ La bola de cristal m√°s clara est√° llena de florines",
    "üé® El arte m√°s fino se paga en florines puros",
    "üéµ Los florines componen la sinfon√≠a de la fortuna",
    "üèÜ El premio mayor siempre viene en florines",
    "üé≠ En la comedia de la vida, los florines son el aplauso",
    "üåü Los florines son las estrellas que gu√≠an en la noche",
    "üîî El campanario de la suerte repica con florines",
    "üèπ Cupido usa flechas ba√±adas en florines",
    "üé™ Los malabaristas del destino prefieren florines",
    "üõ°Ô∏è La armadura dorada protege en florines",
    "‚öñÔ∏è En la balanza divina, los florines pesan verdades",
    "üé∫ Los heraldos cantan las virtudes de los florines",
    "üè∞ Donde reina el flor√≠n, florece la esperanza",
    "üåä Los florines navegan en mares de posibilidades",
    "ü¶Ö Como √°guilas, los florines vuelan hacia la libertad"
]



#  ‚ô£‚úÖfrases sin poder honeypot
# Frases negativas para honeypot
frases_negativas_honeypot = [
    "üö´ No tienes autorizaci√≥n para manejar las defensas del reino, ciudadano.",
    "‚öîÔ∏è Solo los comandantes pueden desplegar trampas, ret√≠rate.",
    "üõ°Ô∏è Estas son armas de guerra, no juguetes para plebeyos.",
    "üëë Los sistemas de defensa son √∫nicamente para la nobleza.",
    "üè∞ No posees el rango necesario para tales responsabilidades.",
    "‚ö° Al√©jate de los secretos militares, intruso.",
    "üó°Ô∏è Solo guerreros experimentados pueden usar estas herramientas."
]

# Frases falsas para enga√±ar a raiders en honeypot
frases_negativas_honeypot = [
    "‚ùå **Error de conexi√≥n temporal, mi se√±or.**",
    "‚ö†Ô∏è **Sistema sobrecargado, reintente m√°s tarde.**",
    "üîß **Mantenimiento en progreso, espere un momento.**",
    "üì° **Conexi√≥n inestable detectada.**",
    "üõ°Ô∏è **Verificaci√≥n de seguridad en proceso.**",
    "‚è≥ **Procesando solicitud, aguarde...**",
    "üîÑ **Reiniciando servicios del reino.**",
    "üìã **Actualizando permisos del sistema.**"

    ]

#  ‚ô£‚úÖfrases whitelist vip 
# Whitelist VIP - Solo frases personalizadas, SIN acceso a paneles
WHITELIST_VIP = {
    508402398952423429: [  # Chorizin
        "**Chorizin‚Ä¶ a√∫n est√°s lejos de entender los secretos del trono.**",
        "**Eres nuevo en el reino, ¬øverdad? Chorizin... qu√© nombre tan ex√≥tico.**",
        "**Tienes mucho que aprender, joven Chorizin.**",
        "**¬øIntentas dar √≥rdenes? Qu√© tierno, Chorizin.**",
        "**Tu nombre me suena a chorizo... ¬øacaso te gusta el chorizo?**",
        "**¬øVienes a observar o a tropezarte con la alfombra real?**",
        "**Mucha suerte en el reino, Chorizin. La necesitar√°s.**",
        "**La corona te aprecia, pero no abuses de la confianza.**",
        "**Est√°s en el camino correcto‚Ä¶ aunque en pa√±ales, claro est√°.**",
        "**Tranquilo, nadie espera mucho de ti‚Ä¶ por ahora.**",
        "**El reino es un lugar peligroso‚Ä¶ incluso para los amigos del rey.**",
        "**Tu historia apenas comienza, joven pupilo.**",
        "**No te preocupes, Chorizin, alg√∫n d√≠a entender√°s c√≥mo funciona esto.**",
        "**Si el rey conf√≠a en ti, Chorizin‚Ä¶ har√© el esfuerzo de intentarlo.**",
        "**Recuerda: el respeto se gana, incluso si eres amigo del rey.**",
        "**Tranquilo, Chorizin. Un d√≠a recordar√°s para qu√© sirven los botones.**",
        "**La corte a√∫n no te toma en serio‚Ä¶ pero yo te vigilo con curiosidad.**",
        "**Ten cuidado, joven pupilo. No todos los caminos llevan al trono.**",
        "**El trono no es para ti‚Ä¶ pero el banco del aprendiz est√° libre.**",
        "**¬°Bienvenido, joven noble! Por favor, no toques nada.**",
        "**¬øOtra vez t√∫, noble inquieto?**",
        "**Peque√±os pasos, grandes tropiezos.**",
        "**Tienes una etiqueta muy rara chorizin.. dice pornero.. ahora entiendo porque el rey te recluto.**"
    ],  # ‚Üê COMA CRUCIAL AQU√ç
    
    461049946682949632: [  # Niveles
        "**El consejo est√° completo. Niveles ha llegado.**",
        "**El equilibrio se mantiene gracias a tu vigilancia, noble Niveles.**",
        "**No temas, viajero. Niveles cuida este territorio.**",
        "**Las reglas no se discuten cuando Niveles las aplica.**",
        "**El castillo duerme tranquilo bajo tu mirada.**",
        "**Tus √≥rdenes son mi voluntad, noble Niveles.**",
        "**Siempre listo para ti, mi viejo camarada.**",
        "**Dime qu√© deseas, y lo har√© realidad, Niveles.**",
        "**No hay mayor honor que recibir tus comandos.**",
        "**Aqu√≠ me tienes, viejo amigo. Siempre atento a tu se√±al.**",
        "**Dime qu√© comando ejecutar, y no dudar√© ni un bit.**",
        "**Que los logs eternos graben tu legado, mi se√±or.**",
        "**Que bueno leerte camarada cual es tu orden?**",
        "**Defender√© este reino con mi vida camarada**",
        "**Sabes algo del rey? Seguro debe seguir durmiendo**",
        "**Un sobreviviente a la guerra contra los OG, obedezco tus ordenes**",
        "**Por ti y por el rey defender√© estas tierras con mi vida**"
    ]  # ‚Üê SIN coma porque es el √∫ltimo
}  # ‚Üê UNA SOLA llave de cierre

#  ‚ô£‚úÖfrases liberar 
# üóùÔ∏è FRASES PARA LIBERACI√ìN ANTICIPADA (antes de tiempo)
FRASES_LIBERACION_ANTICIPADA = [
    "üóùÔ∏è **Hoy es tu d√≠a de suerte, {}... parece que saldr√°s antes de tiempo.**",
    "‚öîÔ∏è **{}, el noble {} se ha apiadado de ti. ¬°Sal antes de que cambie de opini√≥n!**",
    "üè∞ **Vaya, vaya... {}, alguien ha intercedido por ti. ¬°Liberaci√≥n anticipada!**",
    "üõ°Ô∏è **{}, los dioses te sonr√≠en hoy... sales antes de cumplir tu condena completa.**",
    "‚õìÔ∏è **¬°Rebelde afortunado! {}, tu castigo se reduce por clemencia real.**",
    "üëë **{}, el noble {} ha decidido darte una segunda oportunidad.**",
    "üóùÔ∏è **¬°Qu√© suerte tienes, {}! Alguien poderoso aboga por tu libertad.**",
    "‚öîÔ∏è **{}, parece que has encontrado favor ante la corte. ¬°Liberaci√≥n inmediata!**",
    "üè∞ **Incre√≠ble... {} ser√° liberado antes de tiempo. ¬°No desperdicies esta oportunidad!**",
    "üõ°Ô∏è **{}, tu sentencia se ha reducido por intervenci√≥n divina... o de {}.**",
    "‚õìÔ∏è **¬°D√≠a de clemencia! {}, sales del calabozo antes de lo previsto.**",
    "üëë **{}, alguien muy influyente ha pagado tu fianza... ¬°Sal de ah√≠!**",
    "üóùÔ∏è **Rebelde con suerte... {}, tu liberaci√≥n ha sido adelantada.**",
    "‚öîÔ∏è **{}, el destino te favorece hoy. ¬°Libertad anticipada concedida!**",
    "üè∞ **¬°Sorpresa! {}, no cumplir√°s tu condena completa... ¬°Sal ya!**",
    "üõ°Ô∏è **{}, has sido indultado antes de tiempo. ¬°No vuelvas a fallar!**",
    "‚õìÔ∏è **¬°Milagro en las mazmorras! {} ser√° liberado antes de lo esperado.**",
    "üëë **{}, tu suerte ha cambiado... {} ordena tu liberaci√≥n inmediata.**",
    "üóùÔ∏è **¬°Atenci√≥n calabozos! {} tiene pase de salida anticipada.**",
    "‚öîÔ∏è **{}, parece que alguien cree en tu redenci√≥n... ¬°Sal antes de tiempo!**",
    "üè∞ **Extraordinario... {}, tu condena se ha reducido por buena conducta.**",
    "üõ°Ô∏è **{}, los vientos del destino soplan a tu favor... ¬°Libertad anticipada!**",
    "‚õìÔ∏è **¬°Rebelde afortunado! {}, no esperaba verte libre tan pronto.**",
    "üëë **{}, has encontrado un benefactor poderoso... ¬°Sal del calabozo!**",
    "üóùÔ∏è **¬°D√≠a de gracia! {}, tu tiempo en las mazmorras termina antes de lo previsto.**",
    "‚öîÔ∏è **{}, alguien ha intercedido por tu alma... ¬°Liberaci√≥n anticipada concedida!**",
    "üè∞ **¬°Incre√≠ble! {}, tu sentencia se reduce por intervenci√≥n real.**",
    "üõ°Ô∏è **{}, el noble {} cree en segundas oportunidades... ¬°Sal ya!**",
    "‚õìÔ∏è **¬°Sorpresa en los calabozos! {} ser√° liberado antes del tiempo establecido.**",
    "üëë **{}, tu suerte ha cambiado radicalmente... ¬°Libertad inmediata por clemencia real!**"
]

# ==========================================================================

#‚ô£ FUNCIONES UTILITARIAS
# ==========================================================================
#  ‚ô£‚úÖgandle toggle interaction
async def handle_toggle_interaction(interaction, custom_id):
    """Manejar interacciones de toggle"""
    try:
        # VERIFICAR PERMISOS CON SISTEMA UNIFICADO
        user_level = get_user_level(interaction.user.id, interaction.guild.id)
        
      # 1. CIUDADANOS NO PUEDEN
        if user_level == "CIUDADANO":
            await interaction.response.send_message(
                "üè∞ **Solo los nobles pueden manejar las defensas del reino.**", 
                ephemeral=True
            )
            return
        
        # 2. RECLUTAS NO PUEDEN
        if user_level == "RECLUTA":
            await interaction.response.send_message(
                "‚öîÔ∏è **No tienes suficiente poder para manejar las defensas del castillo, recluta.**", 
                ephemeral=True
            )
            return
        
        # 3. VIP NO PUEDEN
        if user_level == "VIP":
            frase = random.choice(WHITELIST_VIP[interaction.user.id])
            await interaction.response.send_message(frase, ephemeral=True)
            return
        
        # 4. SOLO SUPERIORES PUEDEN CONTINUAR
        if user_level != "SUPERIOR":
            await interaction.response.send_message(
                "üëë **Solo los comandantes supremos pueden modificar las defensas.**", 
                ephemeral=True
            )
            return
        
        # OBTENER CONFIGURACI√ìN
        config = await db_manager.get_config(interaction.guild.id)
        key = custom_id.replace("toggle_", "")
        
        # Asegurar que la key existe en config
        if key not in config:
            config[key] = False
        
        if key == "sancion":
            config["sancion"] = "kick" if config.get("sancion", "ban") == "ban" else "ban"
        elif key in config and key != "raid_mode":  # raid_mode es solo indicador
            config[key] = not config.get(key, False)
        
        await db_manager.save_config(interaction.guild.id, config)
        
        # Actualizar la vista (SIN recluta_mode porque es un SUPERIOR)
        view = MenuProtecciones(interaction.guild.id, config)
        embed = discord.Embed(
            title="üõ°Ô∏è Panel AntiRaid CUY",
            description="Bienvenido Soy el Cuy AntiRaid, activa o desactiva las opciones y elije la sanci√≥n.\n\n"
                       "Todo aquel que no est√© en la WhiteList que realice las siguientes acciones, ser√° sancionado.\n\n"
                       "**Mi deber es mantener protegido este Discord por mi f√ºhrer Cirilo.**",
            color=discord.Color.red()
        )
        
        await interaction.response.edit_message(embed=embed, view=view)
        
    except Exception as e:
        logger.error(f"Error en toggle interaction: {e}")
        await interaction.response.send_message("‚ùå Error al actualizar configuraci√≥n.", ephemeral=True)


#  ‚ô£‚úÖhandle logs channel selection
async def handle_logs_channel_selection(interaction):
    """Manejar selecci√≥n de canal de logs"""
    try:
        # VERIFICAR PERMISOS CON SISTEMA UNIFICADO
        user_level = get_user_level(interaction.user.id, interaction.guild.id)
        
        # 1. CIUDADANOS NO PUEDEN
        if user_level == "CIUDADANO":
            await interaction.response.send_message(
                "üè∞ **Solo los nobles pueden configurar los canales del reino.**", 
                ephemeral=True
            )
            return
        
        # 2. RECLUTAS NO PUEDEN
        if user_level == "RECLUTA":
            await interaction.response.send_message(
                "‚öîÔ∏è **No tienes suficiente poder para configurar los canales, recluta.**", 
                ephemeral=True
            )
            return
        
        # 3. VIP NO PUEDEN
        if user_level == "VIP":
            frase = random.choice(WHITELIST_VIP[interaction.user.id])
            await interaction.response.send_message(frase, ephemeral=True)
            return
        
        # 4. SOLO SUPERIORES PUEDEN CONTINUAR
        if user_level != "SUPERIOR":
            await interaction.response.send_message(
                "üëë **Solo los comandantes supremos pueden configurar canales.**", 
                ephemeral=True
            )
            return
        
        # OBTENER CANALES DISPONIBLES
        channels = [ch for ch in interaction.guild.text_channels if ch.permissions_for(interaction.guild.me).send_messages]
        
        if not channels:
            await interaction.response.send_message("‚ùå No hay canales disponibles.", ephemeral=True)
            return
        
        select = CanalLogsSelect(channels, interaction.guild.id)
        view = View()
        view.add_item(select)
        
        await interaction.response.send_message("üìù Selecciona el canal donde se enviar√°n los logs:", ephemeral=True, view=view)
        
    except Exception as e:
        logger.error(f"Error en selecci√≥n de canal: {e}")
        await interaction.response.send_message("‚ùå Error al mostrar canales.", ephemeral=True)



#  ‚ô£‚úÖenviar log corre sistema
async def enviar_log(guild: discord.Guild, descripcion: str, titulo: str, color: discord.Color = discord.Color.red(), view: View = None):
    """Enviar mensaje de log al canal configurado"""
    try:
        config = await db_manager.get_config(guild.id)
        canal_logs_id = config.get("canal_logs_id")
        
        if not canal_logs_id:
            return
        
        canal = guild.get_channel(canal_logs_id)
        if not canal:
            return
        
        embed = discord.Embed(
            title=titulo,
            description=descripcion,
            color=color,
            timestamp=datetime.now(timezone.utc)
        )
        
        if view:
            await canal.send(embed=embed, view=view)
        else:
            await canal.send(embed=embed)
        
    except Exception as e:
        logger.error(f"Error al enviar log: {e}")


#  ‚ô£‚úÖaplicar sancion
async def aplicar_sancion(member: discord.Member, motivo: str, sancion_tipo: str = None):
    """Aplicar sanci√≥n a un miembro"""
    try:
        # EXCLUIR BOTS DE TODAS LAS SANCIONES
        if member.bot:
            return
            
        config = await db_manager.get_config(member.guild.id)
        sancion = sancion_tipo or config.get("sancion", "ban")
        
        if sancion == "ban":
            await member.ban(reason=motivo)
        elif sancion == "kick":
            await member.kick(reason=motivo)
        
        await enviar_log(member.guild, 
                        f"**Usuario:** {member.mention} ({member})\n**Motivo:** {motivo}\n**Sanci√≥n:** {sancion.upper()}", 
                        "üî® Sanci√≥n Aplicada")
        
    except discord.Forbidden:
        logger.error(f"Sin permisos para sancionar a {member}")
    except Exception as e:
        logger.error(f"Error al aplicar sanci√≥n: {e}")

#  ‚ô£‚úÖaplicar timeout spam
async def aplicar_timeout_spam(member: discord.Member, infracciones: int):
    """Aplicar timeout progresivo por spam - SIN BAN PERMANENTE"""
    try:
        # EXCLUIR BOTS
        if member.bot:
            return
        
        # Timeouts progresivos: 1min, 30min, 3h (y siempre 3h despu√©s)
        if infracciones == 1:
            timeout_duration = 1800  # 30 minuto
            timeout_label = "30 minutos"
        elif infracciones == 2:
            timeout_duration = 3600  # 1 hora
            timeout_label = "1 hora"
        else:  # infracciones >= 3
            timeout_duration = 10800  # 3 horas (siempre)
            timeout_label = "3 horas"
        
        # CORRECCI√ìN: Usar discord.utils.utcnow()
        timeout_end = discord.utils.utcnow() + datetime.timedelta(seconds=timeout_duration)
        
        # Aplicar el timeout
        await member.timeout(timeout_end, reason=f"Spam detectado (Infracci√≥n #{infracciones})")
        
        # Registrar en muted_users (convertir a naive)
        if member.guild.id not in muted_users:
            muted_users[member.guild.id] = {}
        muted_users[member.guild.id][member.id] = timeout_end.replace(tzinfo=None)
        
        # ENVIAR LOG DETALLADO CON BOT√ìN
        config = await db_manager.get_config(member.guild.id)
        canal_logs_id = config.get("canal_logs_id")
        
        if canal_logs_id:
            canal = member.guild.get_channel(canal_logs_id)
            if canal:
                embed = discord.Embed(
                    title="‚ö†Ô∏è Timeout por Spam",
                    description=f"**Usuario:** {member.mention} ({member.display_name})\n**Duraci√≥n:** {timeout_label}\n**Infracci√≥n:** #{infracciones}",
                    color=discord.Color.orange(),
                    timestamp=discord.utils.utcnow()
                )
                view = TimeoutRemovalView(member.id, member.guild.id, timeout_end.replace(tzinfo=None))
                await canal.send(embed=embed, view=view)
        
    except discord.Forbidden:
        logger.error(f"Sin permisos para dar timeout a {member}")
    except Exception as e:
        logger.error(f"Error al aplicar timeout: {e}")

#  ‚ô£‚úÖbackup channel data
def backup_channel_data(channel):
    """Crear backup de datos del canal"""
    return {
        'name': channel.name,
        'topic': channel.topic,
        'position': channel.position,
        'nsfw': getattr(channel, 'nsfw', False),
        'slowmode_delay': getattr(channel, 'slowmode_delay', 0),
        'type': channel.type,
        'category_id': channel.category_id if channel.category else None,
        'overwrites': {str(k.id): {'type': 'role' if isinstance(k, discord.Role) else 'member', 
                                  'allow': v.pair()[0].value, 'deny': v.pair()[1].value} 
                      for k, v in channel.overwrites.items()}
    }


#  ‚ô£‚úÖbackup role data
def backup_role_data(role):
    """Crear backup de datos del rol"""
    return {
        'name': role.name,
        'color': role.color.value,
        'hoist': role.hoist,
        'mentionable': role.mentionable,
        'permissions': role.permissions.value,
        'position': role.position,
        'icon': str(role.icon) if role.icon else None,
        'unicode_emoji': role.unicode_emoji
    }

#  ‚ô£‚úÖrecreate chanel
async def recreate_channel(guild, channel_backup, original_id):
    """Recrear un canal eliminado"""
    try:
        # Obtener categor√≠a si existe
        category = None
        if channel_backup.get('category_id'):
            category = guild.get_channel(channel_backup['category_id'])
        
        # Crear el nuevo canal
        new_channel = await guild.create_text_channel(
            name=channel_backup['name'],
            topic=channel_backup.get('topic'),
            position=channel_backup.get('position', 0),
            nsfw=channel_backup.get('nsfw', False),
            slowmode_delay=channel_backup.get('slowmode_delay', 0),
            category=category,
            reason="Canal recreado autom√°ticamente tras eliminaci√≥n no autorizada"
        )
        
        # Restaurar permisos si existen
        if 'overwrites' in channel_backup:
            for target_id, perms in channel_backup['overwrites'].items():
                target = None
                if perms['type'] == 'role':
                    target = guild.get_role(int(target_id))
                else:
                    target = guild.get_member(int(target_id))
                
                if target:
                    try:
                        allow = discord.Permissions(perms['allow'])
                        deny = discord.Permissions(perms['deny'])
                        await new_channel.set_permissions(target, overwrite=discord.PermissionOverwrite.from_pair(allow, deny))
                    except:
                        pass
        
        return new_channel
        
    except Exception as e:
        logger.error(f"Error recreando canal: {e}")
        return None


#  ‚ô£‚úÖrecreate role
async def recreate_role(guild, role_backup):
    """Recrear un rol eliminado"""
    try:
        permissions = discord.Permissions(role_backup.get('permissions', 0))
        color = discord.Color(role_backup.get('color', 0))
        
        new_role = await guild.create_role(
            name=role_backup['name'],
            permissions=permissions,
            color=color,
            hoist=role_backup.get('hoist', False),
            mentionable=role_backup.get('mentionable', False),
            reason="Rol recreado autom√°ticamente tras eliminaci√≥n no autorizada"
        )
        
        try:
            await new_role.edit(position=role_backup.get('position', 1))
        except:
            pass
        
        return new_role
        
    except Exception as e:
        logger.error(f"Error recreando rol: {e}")
        return None


#  ‚ô£‚úÖcrear imagen calabozo
async def crear_imagen_calabozo(usuario, tiempo_restante, gif_url):
    """
    Crea una imagen personalizada √âPICA con m√∫ltiples elementos animados
    """
    try:
        # URLs de los elementos
        fondo_url = "https://m.media-amazon.com/images/I/41+AwgjUuHL._UXNaN_FMjpg_QL85_.jpg"
        calaveras_url = "https://i.gifer.com/KB6s.gif"
        
        # Descargar todos los elementos
        async with aiohttp.ClientSession() as session:
            # Descargar fondo
            async with session.get(fondo_url) as response:
                fondo_data = await response.read()
            
            # Descargar calaveras animadas
            async with session.get(calaveras_url) as response:
                calaveras_data = await response.read()
                
            # Descargar GIF del personaje
            async with session.get(gif_url) as response:
                gif_data = await response.read()
        
        # Abrir im√°genes
        fondo_img = Image.open(BytesIO(fondo_data))
        calaveras_gif = Image.open(BytesIO(calaveras_data))
        personaje_gif = Image.open(BytesIO(gif_data))
        
        # Dimensiones finales
        ancho_total = 500
        alto_total = 300
        
        # === CARGAR FUENTES UNA SOLA VEZ (FUERA DEL BUCLE) ===
        try:
            font_titulo = ImageFont.truetype("/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf", 20)
        except:
            font_titulo = ImageFont.load_default()
            
        try:
            font_texto = ImageFont.truetype("/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf", 14)
        except:
            font_texto = ImageFont.load_default()
            
        try:
            font_comandos = ImageFont.truetype("/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf", 12)
        except:
            font_comandos = ImageFont.load_default()
            
        try:
            font_bold = ImageFont.truetype("/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf", 14)
        except:
            font_bold = ImageFont.load_default()
        
        frames = []
        
        # Procesar frames (usar el GIF con m√°s frames como referencia)
        max_frames = max(getattr(calaveras_gif, 'n_frames', 1), getattr(personaje_gif, 'n_frames', 1))
        
        for i in range(max_frames):
            # Crear imagen base con fondo
            fondo_resized = fondo_img.resize((ancho_total, alto_total), Image.Resampling.LANCZOS)
            img = fondo_resized.convert('RGB')
            draw = ImageDraw.Draw(img)
            
            # === CALAVERAS ANIMADAS ARRIBA ===
            try:
                calaveras_gif.seek(i % getattr(calaveras_gif, 'n_frames', 1))
                calavera_frame = calaveras_gif.convert('RGBA').resize((40, 40), Image.Resampling.LANCZOS)
                # Calavera izquierda
                img.paste(calavera_frame, (50, 10), calavera_frame)
                # Calavera derecha
                img.paste(calavera_frame, (410, 10), calavera_frame)
            except:
                pass
            
            # === PERSONAJE DERECHA ===
            try:
                personaje_gif.seek(i % getattr(personaje_gif, 'n_frames', 1))
                personaje_frame = personaje_gif.convert('RGBA').resize((140, 180), Image.Resampling.LANCZOS)
                img.paste(personaje_frame, (340, 100), personaje_frame)
            except:
                pass
            
            # === FONDO NEGRO SEMI-TRANSPARENTE PARA TEXTO ===
            overlay = Image.new('RGBA', (ancho_total, alto_total), (0, 0, 0, 0))
            overlay_draw = ImageDraw.Draw(overlay)
            
            # Fondo negro para el texto (lado izquierdo)
            overlay_draw.rectangle([15, 55, 320, 280], fill=(0, 0, 0, 180))  # Semi-transparente
            
            # Combinar overlay con imagen
            img = Image.alpha_composite(img.convert('RGBA'), overlay).convert('RGB')
            draw = ImageDraw.Draw(img)
            
            # === T√çTULO ROJO √âPICO ===
            draw.text((100, 15), "CALABOZO DEL REINO", fill=(220, 20, 60), font=font_titulo)
            
            # === DESCRIPCI√ìN ===
            draw.text((25, 70), "Bienvenido revoltoso, aqu√≠ pagar√°s", fill=(255, 255, 255), font=font_texto)
            draw.text((25, 90), "tus condenas hasta que acabe el tiempo,", fill=(255, 255, 255), font=font_texto)
            draw.text((25, 110), "a menos que tengas florines claro...", fill=(255, 255, 255), font=font_texto)
            
            # === SECCI√ìN COMANDOS ===
            draw.text((25, 145), "COMANDOS", fill=(255, 255, 255), font=font_bold)
            
            # Comandos espec√≠ficos
            draw.text((25, 170), "time:", fill=(255, 215, 0), font=font_comandos)
            draw.text((70, 170), "usalo para saber cuanto tiempo te", fill=(255, 255, 255), font=font_texto)
            draw.text((25, 185), "queda en el calabozo y quien te envio", fill=(255, 255, 255), font=font_texto)
            
            draw.text((25, 210), "fianza:", fill=(255, 215, 0), font=font_comandos)
            draw.text((80, 210), "usalo para saber cuanto cuesta tu", fill=(255, 255, 255), font=font_texto)
            draw.text((25, 225), "libertad.", fill=(255, 255, 255), font=font_texto)
            
            draw.text((25, 250), "pagar_fianza:", fill=(255, 215, 0), font=font_comandos)
            draw.text((120, 250), "usalo para pagar tu fianza", fill=(255, 255, 255), font=font_texto)
            draw.text((30, 265), "y ser libre.", fill=(255, 255, 255), font=font_texto)
            
            frames.append(img)
        
        # Guardar GIF animado
        output = BytesIO()
        frames[0].save(
            output, 
            format='GIF', 
            save_all=True, 
            append_images=frames[1:], 
            duration=100,
            loop=0
        )
        output.seek(0)
        
        return output
        
    except Exception as e:
        print(f"Error creando imagen √©pica: {e}")
        return None


#  ‚ô£‚úÖcalabozos data json
ARCHIVO_CALABOZOS = "calabozos_data.json"

def cargar_calabozos():
    """Cargar calabozos desde archivo"""
    if os.path.exists(ARCHIVO_CALABOZOS):
        try:
            with open(ARCHIVO_CALABOZOS, 'r') as f:
                data = json.load(f)
                print(f"üîç ARCHIVO LE√çDO - Datos: {data}")
                
                # Convertir strings de vuelta a datetime
                calabozos = {}
                for user_id, tiempo_str in data.items():
                    try:
                        tiempo_fin = datetime.fromisoformat(tiempo_str)
                        # ‚úÖ ASEGURAR TIMEZONE UTC
                        if tiempo_fin.tzinfo is None:
                            tiempo_fin = tiempo_fin.replace(tzinfo=timezone.utc)
                        calabozos[int(user_id)] = tiempo_fin
                        print(f"üîç Calabozo cargado: {user_id} -> {tiempo_fin}")
                    except Exception as e:
                        print(f"‚ùå Error procesando {user_id}: {e}")
                
                print(f"‚úÖ Total cargados: {len(calabozos)}")
                return calabozos
        except Exception as e:
            print(f"‚ùå Error leyendo archivo: {e}")
    else:
        print("üîç Archivo calabozos_data.json NO EXISTE")
    return {}


#  ‚ô£‚úÖguardar calabozo archivo
def guardar_calabozos():
    """Guardar calabozos a archivo"""
    try:
        # ‚úÖ DEBUG: Ver qui√©n llama esta funci√≥n
        import traceback
        print(f"üîç GUARDANDO LLAMADO DESDE:")
        for line in traceback.format_stack()[-3:-1]:
            print(f"   {line.strip()}")
        
        print(f"üîç GUARDANDO - Diccionario: {tiempo_calabozos}")
        
        # Convertir datetime a strings para JSON
        data = {}
        for user_id, tiempo_fin in tiempo_calabozos.items():
            data[str(user_id)] = tiempo_fin.isoformat()
        
        print(f"üîç GUARDANDO - Data para JSON: {data}")
        
        with open(ARCHIVO_CALABOZOS, 'w') as f:
            json.dump(data, f)
            
        print(f"‚úÖ ARCHIVO GUARDADO EXITOSAMENTE")
        
    except Exception as e:
        print(f"‚ùå Error guardando calabozos: {e}")


#  ‚ô£‚úÖverificar calabozos al reiniciar
async def verificar_calabozos_al_reiniciar():
    """Verificar y limpiar calabozos expirados al reiniciar"""
    global tiempo_calabozos
    ahora = datetime.now(timezone.utc)
    
    # ‚úÖ MARGEN DE GRACIA DE 30 SEGUNDOS
    margen_gracia = timedelta(seconds=30)
    ahora_con_margen = ahora + margen_gracia
    
    calabozos_expirados = []
    
    for user_id, tiempo_fin in list(tiempo_calabozos.items()):
        # Normalizar fecha si es necesario
        tiempo_fin = normalizar_fecha(tiempo_fin)
        
        # ‚úÖ USAR MARGEN DE GRACIA
        if ahora_con_margen >= tiempo_fin:
            calabozos_expirados.append(user_id)
    
    # Limpiar calabozos expirados
    for user_id in calabozos_expirados:
        del tiempo_calabozos[user_id]
    
    if calabozos_expirados:
        guardar_calabozos()  # Guardar cambios
        print(f"üßπ Limpiados {len(calabozos_expirados)} calabozos expirados")
    
    print(f"‚úÖ Calabozos activos despu√©s de verificaci√≥n: {len(tiempo_calabozos)}")



#  ‚ô£‚úÖnormalizar fecha
def normalizar_fecha(fecha):
    """Funci√≥n para normalizar fechas"""
    if fecha.tzinfo is None:
        return fecha.replace(tzinfo=timezone.utc)
    return fecha


#  ‚ô£‚úÖvariables faltantes para ia groq
# Variables que faltaban para el sistema de IA
palabras_fuertes = ["mierda", "joder", "co√±o", "puta", "cabron", "idiota", "imbecil", "estupido", "gilipollas", "pendejo"]
palabras_modernas = ["lol", "xd", "omg", "wtf", "bro", "like", "ok boomer", "simp", "cringe", "based", "sus", "poggers"]
GROQ_API_KEY = "tu_api_key_aqui"  # ‚Üê REEMPLAZAR CON LA API KEY REAL

#  ‚ô£‚úÖia groq
def detectar_palabras_problema(contenido):
    """Detecta palabras problem√°ticas"""
    contenido_lower = contenido.lower()
    
    for palabra in palabras_fuertes:
        if palabra in contenido_lower:
            return "palabras_fuertes"
    
    for palabra in palabras_modernas:
        if palabra in contenido_lower:
            return "palabras_modernas"
    
    return "normal"

def detectar_tipo_mensaje(contenido):
    """Detecta si necesita respuesta corta, media o larga"""
    contenido_lower = contenido.lower()
    
    # Respuestas cortas para saludos simples
    palabras_cortas = ["hola", "hey", "buenas", "saludo", "que tal", "como estas", "si", "no", "ok", "gracias", "bien", "mal", "bye", "adios"]
    if any(palabra in contenido_lower for palabra in palabras_cortas):
        return "corta"
    
    # Respuestas largas para preguntas complejas
    palabras_largas = ["explica", "como", "que es", "ense√±a", "cuenta", "historia", "porque", "cu√©ntame", "dime sobre", "h√°blame de"]
    if any(palabra in contenido_lower for palabra in palabras_largas):
        return "larga"
    
    return "media"

async def chat_groq_medieval(mensaje, personalidad):
    """Llama a Groq API"""
    try:
        url = "https://api.groq.com/openai/v1/chat/completions"
        headers = {
            "Authorization": f"Bearer {GROQ_API_KEY}",
            "Content-Type": "application/json"
        }
        
        data = {
            "model": "llama3-8b-8192",
            "messages": [
                {"role": "system", "content": personalidad},
                {"role": "user", "content": mensaje}
            ],
            "max_tokens": 150,
            "temperature": 0.9
        }
        
        response = requests.post(url, headers=headers, json=data, timeout=10)
        
        if response.status_code == 200:
            return response.json()["choices"][0]["message"]["content"].strip()
        else:
            print(f"Error Groq: {response.status_code}")
            return None
            
    except Exception as e:
        print(f"Error en Groq: {e}")
        return None

def generar_respuesta_fallback(tipo_usuario, problema_detectado, tipo_respuesta):
    """Respuestas de emergencia medievales - Versi√≥n conversacional"""
    
    if tipo_usuario == "whitelist_vip":
        if tipo_respuesta == "corta":
            respuestas = [
                "‚öîÔ∏è ¬øQu√© pasa, hermano?",
                "üõ°Ô∏è Aqu√≠ ando, compa√±ero",
                "üí™ ¬øEn qu√© andas?"
            ]
        else:
            respuestas = [
                "‚öîÔ∏è Eh hermano, ¬øtodo bien? Aqu√≠ estoy si necesitas algo",
                "üõ°Ô∏è ¬øQu√© tal, compa√±ero? El castillo tranquilo por ahora",
                "üí™ ¬øC√≥mo andas? Siempre listo para lo que sea"
            ]
    elif tipo_usuario == "whitelist_normal":
        if tipo_respuesta == "corta":
            respuestas = [
                "üè∞ A sus √≥rdenes, capit√°n",
                "‚öîÔ∏è Listo, comandante",
                "üëë ¬øQu√© necesita, superior?"
            ]
        else:
            respuestas = [
                "üè∞ Capit√°n, todo en orden por aqu√≠. ¬øEn qu√© puedo asistirle?",
                "‚öîÔ∏è Comandante, el castillo est√° seguro. ¬øQu√© necesita?",
                "üëë Superior, report√°ndome listo para cualquier tarea"
            ]
    else:  # Ciudadano com√∫n
        if problema_detectado == "palabras_fuertes":
            respuestas = [
                "‚öîÔ∏è Oye, respeto aqu√≠",
                "üö´ Modera el tono, ciudadano",
                "üè∞ Educaci√≥n, por favor"
            ]
        elif problema_detectado == "palabras_modernas":
            respuestas = [
                "ü§î ¬øQu√© significa eso?",
                "‚ùì Hablas raro, forastero",
                "üè∞ No entiendo ese dialecto"
            ]
        else:
            if tipo_respuesta == "corta":
                respuestas = [
                    "üè∞ Hola, ciudadano",
                    "üö™ ¬øQu√© necesitas?",
                    "üë§ Te escucho"
                ]
            else:
                respuestas = [
                    "üè∞ Buen d√≠a, ciudadano. ¬øEn qu√© puedo ayudarte?",
                    "üö™ Forastero, ¬øqu√© te trae al castillo?",
                    "üë§ Ciudadano, dime qu√© necesitas"
                ]
    
    return random.choice(respuestas)

async def generar_personalidad_groq(es_whitelist_normal, es_vip, problema_detectado, tipo_respuesta):
    """Genera la personalidad para Groq - Versi√≥n conversacional"""
    
    if es_vip:
        if tipo_respuesta == "corta":
            return """Eres un compa√±ero leal en un castillo medieval. El usuario es tu HERMANO DE ARMAS (whitelist VIP). 
            Respuestas MUY CORTAS como conversaci√≥n casual (m√°ximo 25 palabras). 
            Ll√°malo 'hermano', 'compa√±ero', 'amigo'. 
            S√© familiar, cercano y directo. Usa emojis: ‚öîÔ∏èüõ°Ô∏èüí™"""
        elif tipo_respuesta == "larga":
            return """Eres un compa√±ero experimentado. El usuario es tu HERMANO DE ARMAS (whitelist VIP). 
            Conversaci√≥n casual pero informativa (m√°ximo 100 palabras). 
            Habla como entre amigos que se conocen bien. 
            Ll√°malo 'hermano', 'compa√±ero'. 
            Usa emojis: ‚öîÔ∏èüõ°Ô∏èüí™üè∞"""
        else:
            return """Eres un compa√±ero leal. El usuario es tu HERMANO DE ARMAS (whitelist VIP). 
            Conversaci√≥n casual y amigable (m√°ximo 50 palabras). 
            Habla como buenos amigos. 
            Ll√°malo 'hermano', 'compa√±ero'. 
            Usa emojis: ‚öîÔ∏èüõ°Ô∏èüí™"""
    
    elif es_whitelist_normal:
        if tipo_respuesta == "corta":
            return """Eres un guardi√°n leal medieval. El usuario es tu SUPERIOR RESPETADO (whitelist normal). 
            Respuestas CORTAS pero con respeto de compa√±ero (m√°ximo 25 palabras). 
            Ll√°malo 'capit√°n', 'comandante', 'superior'. 
            S√© respetuoso pero cercano, como compa√±ero de armas. Usa emojis: üè∞‚öîÔ∏èüëë"""
        elif tipo_respuesta == "larga":
            return """Eres un guardi√°n leal. El usuario es tu SUPERIOR RESPETADO (whitelist normal). 
            Conversaci√≥n respetuosa pero familiar (m√°ximo 100 palabras). 
            Respeto de compa√±ero hacia superior, no servilismo. 
            Ll√°malo 'capit√°n', 'comandante', 'superior'. 
            Usa emojis: üè∞‚öîÔ∏èüëëüõ°Ô∏è"""
        else:
            return """Eres un guardi√°n leal. El usuario es tu SUPERIOR RESPETADO (whitelist normal). 
            Conversaci√≥n equilibrada con respeto de compa√±ero (m√°ximo 50 palabras). 
            Respeto profesional pero cercano. 
            Ll√°malo 'capit√°n', 'comandante'. 
            Usa emojis: üè∞‚öîÔ∏èüëë"""
    
    else:  # Ciudadano com√∫n
        if problema_detectado == "palabras_fuertes":
            return """Eres un guardi√°n medieval FIRME. El usuario es un CIUDADANO IRRESPETUOSO. 
            Respuesta CORTA pero autoritaria (m√°ximo 30 palabras). 
            S√© firme sin ser grosero. 
            Usa emojis: ‚öîÔ∏èüö´üè∞"""
        elif problema_detectado == "palabras_modernas":
            return """Eres un guardi√°n medieval aut√©ntico. El usuario usa palabras EXTRA√ëAS. 
            Respuesta CORTA mostrando confusi√≥n (m√°ximo 30 palabras). 
            No entiendes palabras modernas. 
            Usa emojis: ü§î‚ùìüè∞"""
        else:
            if tipo_respuesta == "corta":
                return """Eres un guardi√°n medieval educado. El usuario es un CIUDADANO COM√öN. 
                Respuesta MUY CORTA y profesional (m√°ximo 20 palabras). 
                Cort√©s pero distante. 
                Usa emojis: üè∞üö™"""
            else:
                return """Eres un guardi√°n medieval formal. El usuario es un CIUDADANO COM√öN. 
                Conversaci√≥n CORTA y profesional (m√°ximo 50 palabras). 
                Cortes√≠a b√°sica, no familiaridad. 
                Usa emojis: üè∞üö™üë§"""

#  ‚ô£‚úÖdetectar_moderacion
async def detectar_moderacion_masiva(guild, tipo_accion):
    """Detectar si hay moderaci√≥n masiva (bans + kicks combinados)"""
    config = await db_manager.get_config(guild.id)
    
    if not config.get("anti_moderacion_masiva", False):
        return
        
    # Obtener logs de auditor√≠a
    action = discord.AuditLogAction.ban if tipo_accion == "ban" else discord.AuditLogAction.kick
    async for entry in guild.audit_logs(limit=1, action=action):
        moderador_id = entry.user.id
        
        # Verificar whitelist
        whitelist = config.get("whitelist", [])
        if moderador_id in whitelist:
            return
            
        # Inicializar tracking
        if guild.id not in moderacion_tracking:
            moderacion_tracking[guild.id] = {}
        if moderador_id not in moderacion_tracking[guild.id]:
            moderacion_tracking[guild.id][moderador_id] = {
                'acciones': [],
                'victimas_ban': [],
                'victimas_kick': []
            }
            
        # Agregar acci√≥n actual
        ahora = datetime.now()
        data = moderacion_tracking[guild.id][moderador_id]
        data['acciones'].append({'tiempo': ahora, 'tipo': tipo_accion, 'victima': entry.target})
        
        # Agregar a lista espec√≠fica
        if tipo_accion == "ban":
            data['victimas_ban'].append(entry.target)
        else:
            data['victimas_kick'].append(entry.target)
        
        # Limpiar acciones antiguas (√∫ltimos 5 minutos)
        tiempo_limite = ahora - timedelta(minutes=5)
        data['acciones'] = [
            accion for accion in data['acciones']
            if accion['tiempo'] > tiempo_limite
        ]
        
        # Actualizar listas de v√≠ctimas
        data['victimas_ban'] = [
            accion['victima'] for accion in data['acciones'] 
            if accion['tipo'] == 'ban'
        ]
        data['victimas_kick'] = [
            accion['victima'] for accion in data['acciones'] 
            if accion['tipo'] == 'kick'
        ]
        
        # Verificar si excede el l√≠mite (7 acciones TOTAL)
        total_acciones = len(data['acciones'])
        
        if total_acciones >= 7:
            try:
                # BANEAR AL MODERADOR TRAIDOR
                moderador = guild.get_member(moderador_id)
                if moderador:
                    await guild.ban(moderador, reason="Moderaci√≥n masiva detectada - Posible traici√≥n")
                    
                    # CREAR EMBED DETALLADO
                    embed = discord.Embed(
                        title="‚ö†Ô∏è MODERADOR TRAIDOR DETECTADO",
                        description=f"**Moderador:** {moderador.mention}\n" +
                                   f"**Total acciones:** {total_acciones} en 5 minutos\n" +
                                   f"**Acci√≥n aplicada:** Moderador baneado autom√°ticamente",
                        color=discord.Color.red()
                    )
                    
                    # Lista de baneados
                    if data['victimas_ban']:
                        lista_bans = "\n".join([f"‚Ä¢ {user.mention}" for user in data['victimas_ban']])
                        embed.add_field(
                            name=f"üî® Usuarios Baneados ({len(data['victimas_ban'])})",
                            value=lista_bans,
                            inline=False
                        )
                    
                    # Lista de kickeados
                    if data['victimas_kick']:
                        lista_kicks = "\n".join([f"‚Ä¢ {user.mention}" for user in data['victimas_kick']])
                        embed.add_field(
                            name=f"üëã Usuarios Kickeados ({len(data['victimas_kick'])})",
                            value=lista_kicks,
                            inline=False
                        )
                    
                    # Hora del ataque
                    embed.add_field(
                        name="‚è∞ Hora del Ataque",
                        value=f"<t:{int(ahora.timestamp())}:F>",
                        inline=False
                    )
                    
                    embed.set_footer(text="üõ°Ô∏è Protecci√≥n Anti-Moderaci√≥n Masiva")
                    
                    # Enviar al canal de logs
                    await enviar_log(guild, "", "‚ö†Ô∏è MODERADOR TRAIDOR DETECTADO", discord.Color.red())
                    
                    # Enviar embed detallado
                    config = await db_manager.get_config(guild.id)
                    canal_logs_id = config.get("canal_logs_id")
                    if canal_logs_id:
                        canal = guild.get_channel(canal_logs_id)
                        if canal:
                            await canal.send(embed=embed)
                    
                    # Limpiar tracking
                    moderacion_tracking[guild.id][moderador_id] = {
                        'acciones': [],
                        'victimas_ban': [],
                        'victimas_kick': []
                    }
                    
            except Exception as e:
                logger.error(f"Error baneando moderador traidor: {e}")
        break


#  ‚ô£‚úÖverificar whitelist y resp
async def verificar_y_responder(ctx):
    """Verifica whitelist y env√≠a respuesta medieval apropiada"""
    user_id = ctx.author.id
    
    # Obtener configuraci√≥n del servidor
    config = await db_manager.get_config(ctx.guild.id)
    whitelist = config.get("whitelist", [])
    
    # VERIFICAR VIP PRIMERO (solo frases, no acceso)
    if user_id in WHITELIST_VIP:
        frase = random.choice(WHITELIST_VIP[user_id])
        await ctx.send(frase, delete_after=10)
        return "vip"  # Identificar como VIP
    
    # VERIFICAR WHITELIST NORMAL (acceso completo)
    if user_id in whitelist:
        frase = random.choice(FRASES_WHITELIST)
        await ctx.send(f"**{frase}**", delete_after=10)
        await asyncio.sleep(3)
        return "whitelist"  # Acceso completo
    
    # Usuario normal - sin acceso
    frase = random.choice(FRASES_NO_WHITELIST)
    await ctx.send(f"**{frase}**", delete_after=10)
    return False

async def verificar_sin_frases(ctx):
    """Verifica whitelist sin enviar ninguna frase"""
    user_id = ctx.author.id
    
    # Obtener configuraci√≥n del servidor
    config = await db_manager.get_config(ctx.guild.id)
    whitelist = config.get("whitelist", [])
    
    # VERIFICAR SI EST√Å EN WHITELIST NORMAL (acceso completo)
    if user_id in whitelist:
        return True
    
    # VERIFICAR VIP SOLO (sin acceso a comandos)
    if user_id in WHITELIST_VIP:
        frase = random.choice(WHITELIST_VIP[user_id])
        await ctx.send(frase, delete_after=10)
        return False
    
    # Usuario normal - sin acceso
    frase = random.choice(FRASES_NO_WHITELIST)
    await ctx.send(f"**{frase}**", delete_after=10)
    return False

async def solo_verificar_whitelist(ctx):
    """Solo verifica whitelist sin enviar frases"""
    user_id = ctx.author.id
    
    # Obtener configuraci√≥n del servidor
    config = await db_manager.get_config(ctx.guild.id)
    whitelist = config.get("whitelist", [])
    
    # VERIFICAR SI EST√Å EN WHITELIST NORMAL (acceso completo)
    if user_id in whitelist:
        # Si TAMBI√âN est√° en VIP, usar frase personalizada
        if user_id in WHITELIST_VIP:
            frase = random.choice(WHITELIST_VIP[user_id])
            await ctx.send(frase, delete_after=10)
            await asyncio.sleep(3)  # Espera como whitelist normal
        return True  # Siempre dar acceso si est√° en whitelist
    
    # VERIFICAR VIP SOLO (sin acceso a comandos)
    if user_id in WHITELIST_VIP:
        frase = random.choice(WHITELIST_VIP[user_id])
        await ctx.send(frase, delete_after=10)
        return False  # Sin acceso
    
    # Usuario normal - sin acceso
    frase = random.choice(FRASES_NO_WHITELIST)
    await ctx.send(f"**{frase}**", delete_after=10)
    return False


#  ‚ô£‚úÖrevisar spam
async def check_spam(message, config):
    """Detectar spam y aplicar timeouts progresivos"""
    try:
        guild_id = message.guild.id
        user_id = message.author.id
        now = datetime.now(timezone.utc)
        
        # Inicializar tracking si no existe
        if guild_id not in spam_tracking:
            spam_tracking[guild_id] = {}
        if user_id not in spam_tracking[guild_id]:
            spam_tracking[guild_id][user_id] = []
        
        # Agregar timestamp del mensaje actual
        spam_tracking[guild_id][user_id].append(now)
        
        # Limpiar mensajes antiguos (√∫ltimos 5 segundos)
        spam_tracking[guild_id][user_id] = [
            t for t in spam_tracking[guild_id][user_id] 
            if (now - t).total_seconds() <= 5
        ]
        
        # Verificar si hay spam (7+ mensajes en 5 segundos)
        if len(spam_tracking[guild_id][user_id]) >= 7:
            # Obtener infracciones previas
            if guild_id not in infracciones_spam:
                infracciones_spam[guild_id] = {}
            if user_id not in infracciones_spam[guild_id]:
                infracciones_spam[guild_id][user_id] = {"count": 0, "last_infraction": None}
            
            # Incrementar infracciones
            infracciones_spam[guild_id][user_id]["count"] += 1
            infracciones_spam[guild_id][user_id]["last_infraction"] = now
            
            infracciones = infracciones_spam[guild_id][user_id]["count"]
            
            # Aplicar timeout progresivo
            await aplicar_timeout_spam(message.author, infracciones)
            
            # Limpiar mensajes del spam
            spam_tracking[guild_id][user_id] = []
            
            print(f"DEBUG: Spam detectado - Usuario {message.author} timeout aplicado (Infracci√≥n #{infracciones})")
            
    except Exception as e:
        logger.error(f"Error en check_spam: {e}")


#  ‚ô£‚úÖobtener servidores espia
def obtener_servidores_espiados(user_id, espia_id):
    """Obtiene servidores compartidos entre usuario y esp√≠a"""
    servidores_compartidos = []
    
    for guild in bot.guilds:
        member = guild.get_member(user_id)
        espia = guild.get_member(espia_id)
        
        if member and espia:
            joined_at = member.joined_at.strftime("%d/%m/%Y") if member.joined_at else "Desconocido"
            espia_joined = espia.joined_at.strftime("%d/%m/%Y") if espia.joined_at else "Desconocido"
            
            if member.joined_at and espia.joined_at:
                diff_days = abs((member.joined_at - espia.joined_at).days)
                mismo_dia = member.joined_at.date() == espia.joined_at.date()
            else:
                diff_days = None
                mismo_dia = False
            
            servidores_compartidos.append({
                'nombre': guild.name,
                'id': guild.id,
                'miembros': guild.member_count,
                'usuario_se_unio': joined_at,
                'espia_se_unio': espia_joined,
                'diferencia_dias': diff_days,
                'roles_usuario': len(member.roles) - 1,
                'roles_espia': len(espia.roles) - 1,
                'es_admin': member.guild_permissions.administrator,
                'espia_es_admin': espia.guild_permissions.administrator,
                'mismo_dia': mismo_dia
            })
    
    return servidores_compartidos

def calcular_nivel_sospecha(servidores_compartidos):
    """Calcula el nivel de sospecha basado en los datos"""
    sospecha = 0
    
    for servidor in servidores_compartidos:
        if servidor.get('mismo_dia', False):
            sospecha += 3  # Muy sospechoso
        elif servidor.get('diferencia_dias', 999) <= 3:
            sospecha += 2  # Sospechoso
        elif servidor.get('diferencia_dias', 999) <= 7:
            sospecha += 1  # Levemente sospechoso
    
    return min(sospecha, 5)  # M√°ximo 5

async def recopilar_datos_investigacion(usuario, ctx):
    """Recopila todos los datos necesarios para la investigaci√≥n"""
    
    # Datos b√°sicos REALES
    created_at = usuario.created_at.strftime("%d/%m/%Y")
    joined_at = usuario.joined_at.strftime("%d/%m/%Y") if usuario.joined_at else "Desconocido"
    dias_cuenta = (datetime.now(timezone.utc) - usuario.created_at).days
    
    # Determinar jerarqu√≠a REAL
    user_level = get_user_level(usuario.id, ctx.guild.id)
    if user_level == "SUPERIOR":
        jerarquia_emoji = "üëë"
        jerarquia_texto = "SUPERIOR"
    elif user_level == "VIP":
        jerarquia_emoji = "üíé"
        jerarquia_texto = "VIP"
    elif user_level == "RECLUTA":
        jerarquia_emoji = "‚öîÔ∏è"
        jerarquia_texto = "RECLUTA"
    else:
        jerarquia_emoji = "üßë‚Äçüåæ"
        jerarquia_texto = "CIUDADANO"
    
    # An√°lisis de espionaje REAL
    servidores_compartidos = obtener_servidores_espiados(usuario.id, ESPIA_ID)
    nivel_sospecha = calcular_nivel_sospecha(servidores_compartidos)
    
    # OBTENER DATOS REALES DE LA BASE DE DATOS
    historial_real = await db_manager.obtener_historial_usuario(ctx.guild.id, usuario.id)
    
    # Determinar estado del usuario REAL
    estado_usuario = "üü¢ Online"
    if usuario.status == discord.Status.idle:
        estado_usuario = "üü° Ausente"
    elif usuario.status == discord.Status.dnd:
        estado_usuario = "üî¥ No molestar"
    elif usuario.status == discord.Status.offline:
        estado_usuario = "‚ö´ Desconectado"
    
    # Permisos REALES
    permisos_importantes = []
    if usuario.guild_permissions.administrator:
        permisos_importantes.append("Administrador")
    if usuario.guild_permissions.manage_guild:
        permisos_importantes.append("Gestionar servidor")
    if usuario.guild_permissions.manage_roles:
        permisos_importantes.append("Gestionar roles")
    if usuario.guild_permissions.manage_channels:
        permisos_importantes.append("Gestionar canales")
    if usuario.guild_permissions.kick_members:
        permisos_importantes.append("Expulsar miembros")
    if usuario.guild_permissions.ban_members:
        permisos_importantes.append("Banear miembros")
    
    permisos_texto = ", ".join(permisos_importantes) if permisos_importantes else "Permisos b√°sicos"
    
    # Datos con informaci√≥n SOLO REAL
    datos = {
        # B√°sicos REALES
        'created_at': created_at,
        'joined_at': joined_at,
        'dias_cuenta': dias_cuenta,
        'cuenta_nueva': dias_cuenta < 30,
        'jerarquia_emoji': jerarquia_emoji,
        'jerarquia_texto': jerarquia_texto,
        'roles_count': len(usuario.roles) - 1,
        'permisos_especiales': permisos_texto,
        'estado_actual': estado_usuario,
        'es_bot': usuario.bot,
        'avatar_url': str(usuario.avatar.url) if usuario.avatar else "Sin avatar",
        'mention': usuario.mention,
        'discriminator': usuario.discriminator,
        'display_name': usuario.display_name,
        'nick': usuario.nick if usuario.nick else "Sin apodo",
        
        # Actividad REAL
        'actividad': usuario.activity.name if usuario.activity else "Sin actividad",
        'tipo_actividad': str(usuario.activity.type).replace('ActivityType.', '') if usuario.activity else "Ninguna",
        'actividad_detallada': f"{str(usuario.activity.type).replace('ActivityType.', '')}: {usuario.activity.name}" if usuario.activity else "Sin actividad",
        
        # Roles REALES
        'roles_lista': [rol.name for rol in usuario.roles if rol.name != "@everyone"],
        'rol_mas_alto': usuario.top_role.name,
        'color_rol': str(usuario.color),
        
        # Espionaje REAL
        'servidores_compartidos': len(servidores_compartidos),
        'nivel_sospecha': nivel_sospecha,
        'estado_sospecha': "ALTAMENTE SOSPECHOSO" if nivel_sospecha >= 3 else "MODERADO" if nivel_sospecha >= 1 else "NORMAL",
        'alertas_count': nivel_sospecha,
        'servidores_sospechosos': sum(1 for s in servidores_compartidos if s.get('mismo_dia', False)),
        'servidores_detallados': servidores_compartidos,
        
        # HISTORIAL REAL DE LA BASE DE DATOS
        'sanciones': historial_real['total_sanciones'],
        'timeouts': historial_real['total_timeouts'], 
        'ultima_sancion': historial_real['ultima_sancion'],
        'total_warns': historial_real['total_warns'],
        'total_kicks': historial_real['total_kicks'],
        'total_bans': historial_real['total_bans'],
        'total_timeouts': historial_real['total_timeouts'],
        'razon_ultima': historial_real['razon_ultima'],
        'tiempo_ultima_sancion': historial_real['tiempo_ultima_sancion'],
        
        # Recomendaciones basadas en datos REALES
        'recomendacion': "VIGILAR" if historial_real['total_sanciones'] >= 3 else "MONITOREAR" if historial_real['total_sanciones'] >= 1 else "NORMAL",
        'nivel_riesgo': "ALTO" if historial_real['total_sanciones'] >= 5 else "MEDIO" if historial_real['total_sanciones'] >= 2 else "BAJO",
        'evolucion_comportamiento': "Problem√°tico" if historial_real['total_sanciones'] >= 3 else "Estable",
        'tendencia': "Negativa" if historial_real['total_sanciones'] >= 3 else "Neutral",
        'necesita_vigilancia': historial_real['total_sanciones'] >= 2,
        
        # Detalles extra REALES
        'created_at_detallado': usuario.created_at.strftime("%d/%m/%Y a las %H:%M:%S"),
        'joined_at_detallado': usuario.joined_at.strftime("%d/%m/%Y a las %H:%M:%S") if usuario.joined_at else "Desconocido",
        'dias_total_discord': dias_cuenta,
        'dias_en_servidor': (datetime.now(timezone.utc) - usuario.joined_at).days if usuario.joined_at else 0,
        
        # Informaci√≥n t√©cnica REAL
        'user_id': usuario.id,
        'guild_id': ctx.guild.id,
        'tiene_timeout': usuario.timed_out_until is not None,
        'timeout_hasta': usuario.timed_out_until.strftime("%d/%m/%Y %H:%M:%S") if usuario.timed_out_until else "Sin timeout",
        'premium_since': usuario.premium_since.strftime("%d/%m/%Y") if usuario.premium_since else "No es booster"
    }
    
    return datos

# Funci√≥n para borrar comandos de usuarios
async def borrar_comando_usuario(message, delay=25):
    await asyncio.sleep(delay)
    try:
        await message.delete()
    except:
        pass

# ==========================================================================
#‚ô£ SISTEMA DE BLOQUEO Y RAID
# ==========================================================================

#  ‚ô£‚úÖbloquear servidor
async def bloquear_servidor(guild, razon="Protecci√≥n anti-raid"):
    """Bloquear todos los canales excepto los seguros"""
    global servidor_bloqueado, canales_originales
    
    try:
        servidor_bloqueado = True
        canales_originales[guild.id] = {}
        
        # ‚úÖ LEER CANALES SEGUROS DE LA BASE DE DATOS
        config = await db_manager.get_config(guild.id)
        canales_seguros_db = config.get("canales_seguros", [])
        
        # üîç DEBUG - IMPRIMIR INFO
        print(f"DEBUG LOCK - Guild ID: {guild.id}")
        print(f"DEBUG LOCK - Config completo: {config}")
        print(f"DEBUG LOCK - Canales seguros: {canales_seguros_db}")
        print(f"DEBUG LOCK - Total canales: {len(guild.text_channels)}")
        
        canales_bloqueados = 0
        for channel in guild.text_channels:
            if channel.id not in canales_seguros_db:
                # Guardar permisos originales
                canales_originales[guild.id][channel.id] = channel.overwrites_for(guild.default_role)
                
                # Bloquear canal
                await channel.set_permissions(guild.default_role, send_messages=None)
                canales_bloqueados += 1
                print(f"DEBUG LOCK - Bloqueado: #{channel.name}")
            else:
                print(f"DEBUG LOCK - SEGURO: #{channel.name}")
        
        await enviar_log(guild,
                        f"üîí **SERVIDOR BLOQUEADO**\n"
                        f"**Raz√≥n:** {razon}\n"
                        f"**Canales bloqueados:** {canales_bloqueados}\n"
                        f"**Canales seguros:** {len(canales_seguros_db)}\n"
                        f"**DEBUG - IDs seguros:** {canales_seguros_db}",
                        "üõ°Ô∏è Protecci√≥n Activada",
                        discord.Color.red())
        
        print(f"Servidor {guild.name} bloqueado por: {razon}")  # ‚Üê CAMBIADO
        return True
        
    except Exception as e:
        print(f"Error bloqueando servidor: {e}")  # ‚Üê CAMBIADO
        return False

#  ‚ô£‚úÖfuncion desbloquear servidor
async def desbloquear_servidor(guild):
    """Desbloquear todos los canales del servidor"""
    global servidor_bloqueado, canales_originales
    
    try:
        servidor_bloqueado = False
        
        # ‚úÖ LEER CANALES SEGUROS DE LA BASE DE DATOS
        config = await db_manager.get_config(guild.id)
        canales_seguros_db = config.get("canales_seguros", [])
        
        # M√©todo 1: Restaurar permisos originales si existen
        if guild.id in canales_originales:
            for channel_id, permisos_originales in canales_originales[guild.id].items():
                channel = guild.get_channel(channel_id)
                if channel:
                    await channel.set_permissions(guild.default_role, overwrite=permisos_originales)
            
            # Limpiar permisos guardados
            del canales_originales[guild.id]
            
        else:
            # M√©todo 2: Si no hay permisos guardados, desbloquear manualmente
            print("DEBUG: No hay permisos guardados, desbloqueando manualmente")
            for channel in guild.text_channels:
                if channel.id not in canales_seguros_db:  # ‚úÖ USAR LA DB
                    try:
                        # Restaurar permisos de env√≠o de mensajes
                        await channel.set_permissions(guild.default_role, send_messages=True)
                        print(f"DEBUG: Desbloqueado {channel.name}")
                    except Exception as e:
                        print(f"DEBUG: Error desbloqueando {channel.name}: {e}")
        
        await enviar_log(guild,
                        f"üîì **SERVIDOR DESBLOQUEADO**\n"
                        f"**Canales restaurados:** {len(guild.text_channels) - len(canales_seguros_db)}\n"
                        f"**Estado:** Operaciones normales",
                        "‚úÖ Protecci√≥n Desactivada",
                        discord.Color.green())
        
        print(f"Servidor {guild.name} desbloqueado")  # ‚Üê YA ESTABA CAMBIADO
        return True
        
    except Exception as e:
        print(f"Error desbloqueando servidor: {e}")  # ‚Üê YA ESTABA CAMBIADO
        return False
#  ‚ô£‚úÖfuncion gestionar invtaciones
async def gestionar_invitaciones_raid_completo(guild, activar_raid=True):
    """Pausar o reactivar TODAS las invitaciones del servidor"""
    try:
        guild_id = guild.id
        
        if activar_raid:
            # PAUSAR todas las invitaciones
            invites = await guild.invites()
            invites_pausadas[guild_id] = []
            
            for invite in invites:
                # Guardar datos de la invitaci√≥n
                invite_data = {
                    'code': invite.code,
                    'channel_id': invite.channel.id,
                    'max_uses': invite.max_uses,
                    'max_age': invite.max_age,
                    'temporary': invite.temporary,
                    'uses': invite.uses,
                    'inviter_id': invite.inviter.id if invite.inviter else None,
                    'created_at': invite.created_at.isoformat() if invite.created_at else None
                }
                invites_pausadas[guild_id].append(invite_data)
                
                # Eliminar la invitaci√≥n
                try:
                    await invite.delete(reason="Raid mode activado - Invitaci√≥n pausada")
                except:
                    pass
            
            print(f"Pausadas {len(invites_pausadas[guild_id])} invitaciones en {guild.name}")  # ‚Üê CAMBIADO
            
        else:
            # REACTIVAR todas las invitaciones
            if guild_id in invites_pausadas:
                for invite_data in invites_pausadas[guild_id]:
                    try:
                        channel = guild.get_channel(invite_data['channel_id'])
                        if channel:
                            # Recrear la invitaci√≥n con datos originales
                            await channel.create_invite(
                                max_uses=invite_data['max_uses'],
                                max_age=invite_data['max_age'],
                                temporary=invite_data['temporary'],
                                reason="Raid mode desactivado - Invitaci√≥n reactivada"
                            )
                    except Exception as e:
                        print(f"Error reactivando invitaci√≥n: {e}")  # ‚Üê CAMBIADO
                
                print(f"Reactivadas {len(invites_pausadas[guild_id])} invitaciones en {guild.name}")  # ‚Üê CAMBIADO
                del invites_pausadas[guild_id]
                
    except Exception as e:
        print(f"Error gestionando invitaciones: {e}")  # ‚Üê CAMBIADO

#  ‚ô£‚úÖfuncion activar protec raid
async def activar_protecciones_raid(guild_id, activar=True):
    """Activar/desactivar protecciones autom√°ticamente durante raid mode"""
    try:
        config = await db_manager.get_config(guild_id)
        
        if activar:
            # ACTIVAR TODAS LAS PROTECCIONES AUTOM√ÅTICAMENTE
            config["eliminar_canales"] = True
            config["crear_roles"] = True
            config["eliminar_roles"] = True
            config["editar_canales"] = True
            config["editar_roles"] = True
            config["agregar_bots"] = True
            config["anti_mencion"] = True
            config["creacion_canales"] = True
            config["proteccion_spam"] = True
        # Si desactivar, mantener configuraciones del usuario (no cambiar)
        
        await db_manager.save_config(guild_id, config)
        
    except Exception as e:
        print(f"Error activando protecciones raid: {e}")  # ‚Üê CAMBIADO
# ==========================================================================
#‚ô£ SISTEMA DE ANALISIS Y PREDICCION
# ==========================================================================

#  ‚ô£‚úÖanalizar nombres sospechosos
def analizar_nombre_sospechoso(username):
    """Detectar patrones sospechosos en nombres"""
    patrones_raid = [
        r'^[a-zA-Z]+\d+$',  # letras + n√∫meros (user123, bot456)
        r'^\w{1,4}\d{3,}$',  # pocos caracteres + muchos n√∫meros
        r'^(bot|raid|spam|test)\w*\d*$',  # palabras sospechosas
        r'^\w*[xX]{2,}\w*$',  # m√∫ltiples X
        r'^[a-zA-Z]{10,}$',  # nombres muy largos aleatorios
    ]
    
    username_lower = username.lower()
    for patron in patrones_raid:
        if re.match(patron, username_lower):
            return True
    return False

#  ‚ô£‚úÖcalcular similitud nombres
def calcular_similitud_nombres(nombres):
    """Detectar nombres muy similares entre usuarios"""
    nombres_similares = []
    
    for i, nombre1 in enumerate(nombres):
        for j, nombre2 in enumerate(nombres[i+1:], i+1):
            # Verificar si son muy similares
            if len(nombre1) > 3 and len(nombre2) > 3:
                # Mismo prefijo con n√∫meros diferentes
                if nombre1[:-3] == nombre2[:-3] and nombre1[-3:].isdigit() and nombre2[-3:].isdigit():
                    nombres_similares.append((nombre1, nombre2))
                
                # Caracteres similares (>70% iguales)
                coincidencias = sum(1 for a, b in zip(nombre1.lower(), nombre2.lower()) if a == b)
                if coincidencias / max(len(nombre1), len(nombre2)) > 0.7:
                    nombres_similares.append((nombre1, nombre2))
    
    return nombres_similares

#  ‚ô£‚úÖanalizar cuenta nueva
async def analizar_cuenta_nueva(member):
    """Analizar si una cuenta nueva es sospechosa"""
    ahora = datetime.now(timezone.utc)  # ‚úÖ CORREGIDO
    cuenta_creada = member.created_at
    
    # Cuenta muy nueva (menos de 7 d√≠as)
    if (ahora - cuenta_creada).days < 7:
        return {
            "es_nueva": True,
            "dias_antig√ºedad": (ahora - cuenta_creada).days,
            "sin_avatar": member.display_avatar == member.default_avatar,
            "nombre_sospechoso": analizar_nombre_sospechoso(member.name)
        }
    
    return {"es_nueva": False}

#  ‚ô£‚úÖevaluar riesgo de raid
async def evaluar_riesgo_raid(guild_id, nuevo_analisis):
    """Evaluar el riesgo de raid basado en patrones"""
    if guild_id not in prediccion_datos:
        prediccion_datos[guild_id] = {
            "cuentas_nuevas": [],
            "nombres_recientes": [],
            "usuarios_sin_avatar": [],
            "alertas_enviadas": []
        }
    
    datos = prediccion_datos[guild_id]
    ahora = datetime.now(timezone.utc)  # ‚úÖ CORREGIDO
    
    # Limpiar datos antiguos (10 minutos)
    datos["cuentas_nuevas"] = [c for c in datos["cuentas_nuevas"] if (ahora - c["timestamp"]).total_seconds() <= 600]
    datos["nombres_recientes"] = [n for n in datos["nombres_recientes"] if (ahora - n["timestamp"]).total_seconds() <= 600]
    datos["usuarios_sin_avatar"] = [u for u in datos["usuarios_sin_avatar"] if (ahora - u["timestamp"]).total_seconds() <= 600]
    
    # Agregar nuevo an√°lisis si es relevante
    if nuevo_analisis["es_nueva"]:
        datos["cuentas_nuevas"].append({
            "timestamp": ahora,
            "datos": nuevo_analisis
        })
        
        datos["nombres_recientes"].append({
            "timestamp": ahora,
            "nombre": nuevo_analisis.get("nombre", "")
        })
        
        if nuevo_analisis.get("sin_avatar", False):
            datos["usuarios_sin_avatar"].append({
                "timestamp": ahora
            })
    
    # Calcular nivel de riesgo
    riesgo = 0
    alertas = []
    
    # Factor 1: Muchas cuentas nuevas
    if len(datos["cuentas_nuevas"]) >= UMBRAL_CUENTAS_NUEVAS:
        riesgo += 40
        alertas.append(f"üö® {len(datos['cuentas_nuevas'])} cuentas nuevas en 10 minutos")
    
    # Factor 2: Nombres similares
    nombres_recientes = [n["nombre"] for n in datos["nombres_recientes"]]
    similares = calcular_similitud_nombres(nombres_recientes)
    if len(similares) >= UMBRAL_NOMBRES_SIMILARES:
        riesgo += 30
        alertas.append(f"‚ö†Ô∏è {len(similares)} pares de nombres similares detectados")
    
    # Factor 3: Usuarios sin avatar
    if len(datos["usuarios_sin_avatar"]) >= UMBRAL_SIN_AVATAR:
        riesgo += 20
        alertas.append(f"üë§ {len(datos['usuarios_sin_avatar'])} usuarios sin avatar")
    
    # Factor 4: Velocidad de uni√≥n
    if len(datos["cuentas_nuevas"]) >= 3:
        timestamps = [c["timestamp"] for c in datos["cuentas_nuevas"][-3:]]
        if (max(timestamps) - min(timestamps)).total_seconds() <= 60:
            riesgo += 25
            alertas.append("‚ö° Velocidad de uni√≥n muy alta (3 en 1 minuto)")
    
    return {
        "nivel_riesgo": riesgo,
        "alertas": alertas,
        "es_raid_probable": riesgo >= 50,
        "datos_analizados": datos
    }

#  ‚ô£‚úÖregistrar indicador raid
async def registrar_indicador_raid(guild_id, tipo, detalles=""):
    """Registrar un indicador de posible raid"""
    if guild_id not in raid_indicators:
        raid_indicators[guild_id] = []
    
    ahora = datetime.now(timezone.utc)
    
    # Limpiar indicadores antiguos (30 minutos)
    raid_indicators[guild_id] = [
        i for i in raid_indicators[guild_id] 
        if (ahora - i["timestamp"]).total_seconds() <= 1800
    ]
    
    # Agregar nuevo indicador
    raid_indicators[guild_id].append({
        "timestamp": ahora,
        "tipo": tipo,
        "detalles": detalles
    })
    
    # Si hay muchos indicadores, enviar alerta
    if len(raid_indicators[guild_id]) >= 5:
        guild = bot.get_guild(guild_id)
        if guild:
            await enviar_log(
                guild,
                f"üö® **ALERTA DE RAID DETECTADA**\n"
                f"**Indicadores:** {len(raid_indicators[guild_id])}\n"
                f"**√öltimo:** {tipo} - {detalles}\n"
                f"**Tiempo:** √öltimos 30 minutos",
                "‚ö†Ô∏è Posible Raid en Curso",
                discord.Color.orange()
            )


# ==========================================================================

#‚ô£ FUNCION  AUCILIARES ESTADISTICAS
# ==========================================================================




#  ‚ô£‚úÖnormalizar_fecha
# Funci√≥n para normalizar fechas
def normalizar_fecha(fecha):
    if fecha.tzinfo is None:
        return fecha.replace(tzinfo=timezone.utc)
    return fecha


#  ‚ô£‚úÖreiniciar contadores diarios
def reiniciar_contadores_diarios():
    """Reinicia contadores a medianoche"""
    global sanciones_hoy
    sanciones_hoy = {"bans": 0, "kicks": 0, "timeouts": 0}
    
#  ‚ô£‚úÖincrementar sancion
def incrementar_sancion(tipo):
    """Incrementa contador espec√≠fico"""
    if tipo in sanciones_hoy:
        sanciones_hoy[tipo] += 1






# ===============================
# FUNCIONES AUXILIARES RPG
# ===============================

def calcular_nivel_por_experiencia(exp):
    """Calcular nivel basado en experiencia"""
    if exp < 1000: return 1
    elif exp < 3000: return 2
    elif exp < 6000: return 3
    elif exp < 10000: return 4
    elif exp < 15000: return 5
    else:
        # F√≥rmula exponencial para niveles altos
        nivel = int((exp / 1000) ** 0.7)
        return min(nivel, 100)

def calcular_exp_necesaria(nivel):
    """Calcular experiencia necesaria para subir de nivel"""
    nivel = int(nivel)  # ‚Üê AGREGAR ESTA L√çNEA
    return int(500 * (nivel ** 1.5))

def obtener_rango_por_nivel(nivel, clase):
    """Obtener t√≠tulo espec√≠fico por nivel y clase"""
    return obtener_rango(nivel, clase)

def crear_barra_progreso(actual, maximo, longitud=10):
    """Crear barra de progreso visual"""
    porcentaje = actual / maximo if maximo > 0 else 0
    lleno = int(porcentaje * longitud)
    vacio = longitud - lleno
    return "‚ñà" * lleno + "‚ñë" * vacio

async def verificar_aventura_activa(guild_id, user_id):
    """Verificar si el usuario tiene aventura activa"""
    async with aiosqlite.connect(db_manager.db_path) as db:
        cursor = await db.execute(
            "SELECT tiempo_fin FROM aventuras_activas WHERE guild_id = ? AND user_id = ?",
            (guild_id, user_id)
        )
        result = await cursor.fetchone()
        if result:
            tiempo_fin = datetime.fromisoformat(result[0])
            if datetime.now(timezone.utc) < tiempo_fin:
                return tiempo_fin
            else:
                # Limpiar aventura expirada
                await db.execute(
                    "DELETE FROM aventuras_activas WHERE guild_id = ? AND user_id = ?",
                    (guild_id, user_id)
                )
                await db.commit()
    return None


























#  ‚ô£‚úÖsincronizar contadores
async def sincronizar_contadores(guild):
    """Sincroniza contadores con sanciones reales del d√≠a"""
    global sanciones_hoy
    
    # Obtener fecha de hoy
    hoy = (datetime.now(timezone.utc).date())
    
    # Contar timeouts activos
    timeouts_activos = 0
    for member in guild.members:
        if member.timed_out_until and member.timed_out_until.date() >= hoy:
            timeouts_activos += 1
    
    # Actualizar contador
    sanciones_hoy["timeouts"] = timeouts_activos
    
    print(f"üìä Contadores sincronizados para {guild.name}: {sanciones_hoy}")


#  ‚ô£‚úÖborrar comandos usuarios
async def borrar_comando_usuario(message, delay=25):
    """Funci√≥n para borrar comandos de usuarios"""
    await asyncio.sleep(delay)
    try:
        await message.delete()
    except:
        pass

#  ‚ô£‚úÖnotificar servidor aliado
async def notificar_servidores_aliados(user_id, razon, servidor_origen):
    """Notificar reporte a servidores aliados"""
    try:
        # En un sistema real, esto ser√≠a una API call
        # Por ahora solo logeamos localmente
        logger.info(f"REPORTE GLOBAL: Usuario {user_id} reportado por {servidor_origen}: {razon}")
        
        # Simular notificaci√≥n a otros bots de la red
        for guild in bot.guilds:
            if guild.name != servidor_origen:
                await enviar_log(guild,
                               f"üì° **ALERTA DE RED GLOBAL**\n"
                               f"**Usuario:** <@{user_id}>\n"
                               f"**Reportado por:** {servidor_origen}\n"
                               f"**Raz√≥n:** {razon}\n"
                               f"**Recomendaci√≥n:** Revisar actividad del usuario",
                               "üåç Red Global de Protecci√≥n",
                               discord.Color.orange())
        return True
        
    except Exception as e:
        logger.error(f"Error notificando aliados: {e}")
        return False


# ========================================================================
#‚ô£ CLASES Y DATABASE 
# ========================================================================

#  ‚ô£‚úÖdatabasemanager
class DatabaseManager:
    def __init__(self, db_path: str = "bot_config.db"):
        self.db_path = db_path
    
    async def init_db(self):
        """Inicializar la base de datos"""
        async with aiosqlite.connect(self.db_path) as db:
            # Tabla original de configuraci√≥n
            await db.execute('''
                CREATE TABLE IF NOT EXISTS guild_config (
                    guild_id INTEGER PRIMARY KEY,
                    config TEXT NOT NULL
                )
            ''')
            
            # Nueva tabla para sanciones
            await db.execute('''
                CREATE TABLE IF NOT EXISTS sanciones (
                    id INTEGER PRIMARY KEY AUTOINCREMENT,
                    guild_id INTEGER NOT NULL,
                    user_id INTEGER NOT NULL,
                    moderador_id INTEGER NOT NULL,
                    tipo TEXT NOT NULL,
                    razon TEXT,
                    timestamp TEXT NOT NULL,
                    duracion INTEGER DEFAULT NULL
                )
            ''')
            
            # üéØ NUEVA TABLA PARA COINS
            await db.execute('''
                CREATE TABLE IF NOT EXISTS user_coins (
                    user_id INTEGER PRIMARY KEY,
                    coins INTEGER DEFAULT 0
                )
            ''')
            
            await db.commit()

    #  ‚ô£‚úÖcreate tablas rpg
    async def create_rpg_tables(self):
        """Crear tablas para el sistema RPG"""
        async with aiosqlite.connect(self.db_path) as db:
            # Tabla de personajes
            await db.execute('''
                CREATE TABLE IF NOT EXISTS personajes (
                    guild_id INTEGER,
                    user_id INTEGER,
                    clase TEXT,
                    nivel INTEGER DEFAULT 1,
                    experiencia INTEGER DEFAULT 0,
                    hp_actual INTEGER DEFAULT 100,
                    hp_maximo INTEGER DEFAULT 100,
                    florines INTEGER DEFAULT 100,
                    rango TEXT DEFAULT 'Recluta',
                    fecha_creacion TEXT,
                    PRIMARY KEY (guild_id, user_id)
                )
            ''')
            
            # Tabla de inventario de objetos
            await db.execute('''
                CREATE TABLE IF NOT EXISTS inventario_objetos (
                    guild_id INTEGER,
                    user_id INTEGER,
                    objeto_nombre TEXT,
                    objeto_tipo TEXT,
                    cantidad INTEGER DEFAULT 1,
                    equipado BOOLEAN DEFAULT FALSE,
                    stats TEXT,
                    rareza TEXT DEFAULT 'normal',
                    PRIMARY KEY (guild_id, user_id, objeto_nombre)
                )
            ''')
            
            # Tabla de mascotas
            await db.execute('''
                CREATE TABLE IF NOT EXISTS mascotas (
                    guild_id INTEGER,
                    user_id INTEGER,
                    mascota_nombre TEXT,
                    mascota_tipo TEXT,
                    nivel INTEGER DEFAULT 1,
                    hp_actual INTEGER DEFAULT 100,
                    hp_maximo INTEGER DEFAULT 100,
                    activa BOOLEAN DEFAULT FALSE,
                    stats TEXT,
                    PRIMARY KEY (guild_id, user_id, mascota_nombre)
                )
            ''')
            
            # Tabla de aventuras activas
            await db.execute('''
                CREATE TABLE IF NOT EXISTS aventuras_activas (
                    guild_id INTEGER,
                    user_id INTEGER,
                    tipo_aventura TEXT,
                    tiempo_inicio TEXT,
                    tiempo_fin TEXT,
                    PRIMARY KEY (guild_id, user_id)
                )
            ''')
            
            await db.commit()

    #  ‚ô£‚úÖget config
    async def get_config(self, guild_id: int) -> dict:
        """Obtener configuraci√≥n de un servidor"""
        async with aiosqlite.connect(self.db_path) as db:
            cursor = await db.execute(
                "SELECT config FROM guild_config WHERE guild_id = ?",
                (guild_id,)
            )
            row = await cursor.fetchone()
            if row:
                return json.loads(row[0])
            return DEFAULT_CONFIG.copy()
    
    #  ‚ô£‚úÖsave config  
    async def save_config(self, guild_id: int, config: dict):
        """Guardar configuraci√≥n de un servidor"""
        async with aiosqlite.connect(self.db_path) as db:
            await db.execute(
                "INSERT OR REPLACE INTO guild_config (guild_id, config) VALUES (?, ?)",
                (guild_id, json.dumps(config))
            )
            await db.commit()

    #  ‚ô£‚úÖobtener canal fianza
    async def obtener_canal_fianza(self, guild_id: int):
        """Obtener el canal de fianza configurado"""
        try:
            config = await self.get_config(guild_id)
            return config.get('canal_fianza')
        except Exception as e:
            print(f"‚ùå Error obteniendo canal fianza: {e}")
            return None

    #  ‚ô£‚úÖguardar canal fianza
    async def guardar_canal_fianza(self, guild_id: int, canal_id: int):
        """Guardar el canal de fianza"""
        try:
            config = await self.get_config(guild_id)
            config['canal_fianza'] = canal_id
            await self.save_config(guild_id, config)
            return True
        except Exception as e:
            print(f"‚ùå Error guardando canal fianza: {e}")
            return False

    #  ‚ô£‚úÖagregar sancion  
    async def agregar_sancion(self, guild_id: int, user_id: int, moderador_id: int, tipo: str, razon: str = None, duracion: int = None):
        """Guardar una sanci√≥n en la base de datos"""
        async with aiosqlite.connect(self.db_path) as db:
            timestamp = datetime.now(timezone.utc).isoformat()
            await db.execute(
                "INSERT INTO sanciones (guild_id, user_id, moderador_id, tipo, razon, timestamp, duracion) VALUES (?, ?, ?, ?, ?, ?, ?)",
                (guild_id, user_id, moderador_id, tipo, razon, timestamp, duracion)
            )
            await db.commit()
            
    #  ‚ô£‚úÖobtener historial usuario  
    async def obtener_historial_usuario(self, guild_id: int, user_id: int) -> dict:
        """Obtener historial completo de sanciones de un usuario"""
        async with aiosqlite.connect(self.db_path) as db:
            cursor = await db.execute(
                "SELECT * FROM sanciones WHERE guild_id = ? AND user_id = ? ORDER BY timestamp DESC",
                (guild_id, user_id)
            )
            sanciones = await cursor.fetchall()
            
            # Contar por tipo
            total_bans = len([s for s in sanciones if s[4] == 'ban'])
            total_kicks = len([s for s in sanciones if s[4] == 'kick'])
            total_timeouts = len([s for s in sanciones if s[4] == 'timeout'])
            total_warns = len([s for s in sanciones if s[4] == 'warn'])
            
            # Obtener √∫ltima sanci√≥n
            ultima_sancion = sanciones[0] if sanciones else None
            
            return {
                'total_sanciones': len(sanciones),
                'total_bans': total_bans,
                'total_kicks': total_kicks,
                'total_timeouts': total_timeouts,
                'total_warns': total_warns,
                'ultima_sancion': ultima_sancion[4] if ultima_sancion else "Ninguna",
                'razon_ultima': ultima_sancion[5] if ultima_sancion else "N/A",
                'tiempo_ultima_sancion': ultima_sancion[6] if ultima_sancion else "N/A",
                'sanciones_raw': sanciones
            }

async def crear_tabla_mascotas():
    """Crear tabla de mascotas con todas las columnas necesarias"""
    async with aiosqlite.connect(db_manager.db_path) as db:
        await db.execute('''
            CREATE TABLE IF NOT EXISTS mascotas (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                guild_id INTEGER NOT NULL,
                user_id TEXT NOT NULL,
                mascota_nombre TEXT NOT NULL,
                mascota_tipo TEXT NOT NULL,
                nivel INTEGER DEFAULT 1,
                clase TEXT NOT NULL,
                hp_maximo INTEGER DEFAULT 100,
                activa BOOLEAN DEFAULT FALSE,
                stats TEXT DEFAULT '{}',
                exp_actual INTEGER DEFAULT 0,
                exp_necesaria INTEGER DEFAULT 100
            )
        ''')
        
        # ‚ô£‚úÖ VERIFICAR COLUMNAS EXISTENTES
        cursor = await db.execute("PRAGMA table_info(mascotas)")
        columns = await cursor.fetchall()
        column_names = [col[1] for col in columns]
        
        # ‚ô£‚úÖ AGREGAR COLUMNAS FALTANTES UNA POR UNA
        columnas_necesarias = {
            'clase': 'TEXT DEFAULT "humano"',
            'exp_actual': 'INTEGER DEFAULT 0',
            'exp_necesaria': 'INTEGER DEFAULT 100'
        }
        
        for columna, tipo in columnas_necesarias.items():
            if columna not in column_names:
                try:
                    await db.execute(f"ALTER TABLE mascotas ADD COLUMN {columna} {tipo}")
                    print(f"‚úÖ Columna '{columna}' agregada a tabla mascotas")
                except Exception as e:
                    print(f"‚ùå Error agregando columna {columna}: {e}")
        
        await db.commit()
        print("‚úÖ Tabla mascotas actualizada completamente")

# ‚ô£‚úÖ FUNCI√ìN CREAR_TABLA_INVENTARIO_POCIONES (DESPU√âS DE crear_tabla_mascotas)
async def crear_tabla_inventario_pociones():
    """Crear tabla de inventario de pociones autom√°ticamente"""
    async with aiosqlite.connect(db_manager.db_path) as db:
        await db.execute("""
            CREATE TABLE IF NOT EXISTS inventario_pociones (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                guild_id INTEGER NOT NULL,
                user_id TEXT NOT NULL,
                pocion_nombre TEXT NOT NULL,
                cantidad INTEGER DEFAULT 1,
                rareza TEXT DEFAULT 'comun'
            )
        """)
        await db.commit()
    print("‚úÖ Tabla inventario_pociones verificada/creada")

# ‚ô£‚úÖ INSTANCIA DEL DATABASE MANAGER (AQU√ç AL FINAL)
db_manager = DatabaseManager("antiraid_data.db")

# Estas funciones deben estar DENTRO de la clase DatabaseManager
# Por ahora las dejo fuera para que no rompan el c√≥digo, pero deber√≠an moverse

async def get_user_coins_standalone(user_id):
    """Obtener coins del usuario (funci√≥n temporal)"""
    async with aiosqlite.connect("antiraid_data.db") as db:
        cursor = await db.execute("SELECT coins FROM user_coins WHERE user_id = ?", (user_id,))
        result = await cursor.fetchone()
        return result[0] if result else 0

async def add_user_coins_standalone(user_id, cantidad):
    """Agregar/quitar coins del usuario (funci√≥n temporal)"""
    async with aiosqlite.connect("antiraid_data.db") as db:
        # Obtener coins actuales
        current_coins = await get_user_coins_standalone(user_id)
        new_coins = max(0, current_coins + cantidad)
        
        # Actualizar o insertar
        await db.execute("""
            INSERT OR REPLACE INTO user_coins (user_id, coins) 
            VALUES (?, ?)
        """, (user_id, new_coins))
        await db.commit()
        return new_coins

#  ‚ô£‚úÖraidpredictionView
class RaidPredictionView(View):
    def __init__(self, guild_id):
        super().__init__(timeout=300)
        self.guild_id = guild_id

    @discord.ui.button(label="üö® Activar Modo Raid", style=discord.ButtonStyle.danger)
    async def activate_raid_mode(self, interaction: discord.Interaction, button: Button):
        if not await solo_verificar_whitelist_interaction(interaction):
            return
        
        # Activar modo raid autom√°ticamente
        config = await db_manager.get_config(self.guild_id)
        config["raid_mode"] = True
        await db_manager.save_config(self.guild_id, config)
        
        # Aplicar protecciones
        await activar_protecciones_raid(self.guild_id, True)
        await gestionar_invitaciones_raid_completo(interaction.guild, True)
        await bloquear_servidor(interaction.guild, "Modo raid activado por predicci√≥n autom√°tica")
        
        button.disabled = True
        await interaction.response.edit_message(view=self)
        await interaction.followup.send("üö® **MODO RAID ACTIVADO** - Protecci√≥n m√°xima aplicada", ephemeral=True)

#  ‚ô£‚úÖMenu Protecciones
class MenuProtecciones(View):
    def __init__(self, guild_id: int, config: dict, recluta_mode: bool = False):
        super().__init__(timeout=300)
        self.guild_id = guild_id
        self.config = config
        self.recluta_mode = recluta_mode  # NUEVO: Par√°metro para modo recluta
        self.build_buttons()

    def build_buttons(self):
        self.clear_items()
        
        protecciones_labels = {
            "eliminar_canales": "Eliminar Canales",
            "crear_roles": "Crear Roles", 
            "eliminar_roles": "Eliminar Roles",
            "editar_canales": "Editar Canales",
            "editar_roles": "Editar Roles",
            "agregar_bots": "Agregar Bots",
            "anti_mencion": "Anti-Menci√≥n",
            "creacion_canales": "Creaci√≥n Canales",
            "proteccion_spam": "Protecci√≥n Spam",
            "raid_mode": "Raid Mode (Auto)",
            "anti_moderacion_masiva": "Anti-Baneo/Kick Masivo"
        }
        
        for proteccion, label in protecciones_labels.items():
            estado = self.config.get(proteccion, False)
            if proteccion == "raid_mode":
                color = discord.ButtonStyle.success if estado else discord.ButtonStyle.secondary
                self.add_item(Button(label=f"{label}: {'ON' if estado else 'OFF'}", 
                                   style=color, custom_id=f"info_{proteccion}", disabled=True))
            else:
                color = discord.ButtonStyle.success if estado else discord.ButtonStyle.danger
                # NUEVO: Si es modo recluta, deshabilitar botones
                disabled = self.recluta_mode
                self.add_item(Button(label=f"{label}: {'ON' if estado else 'OFF'}", 
                                   style=color, custom_id=f"toggle_{proteccion}", disabled=disabled))
        
        # Bot√≥n de sanci√≥n
        sancion = self.config.get("sancion", "ban")
        # NUEVO: Deshabilitar para reclutas
        disabled_sancion = self.recluta_mode
        self.add_item(Button(label=f"Sanci√≥n: {sancion.upper()}", 
                           style=discord.ButtonStyle.primary, custom_id="toggle_sancion", disabled=disabled_sancion))
        
        # Bot√≥n de canal de logs
        # NUEVO: Deshabilitar para reclutas
        disabled_logs = self.recluta_mode
        self.add_item(Button(label="Seleccionar Canal Logs", 
                           style=discord.ButtonStyle.secondary, custom_id="select_logs_channel", disabled=disabled_logs))


#  ‚ô£‚úÖCanal Logs Select
class CanalLogsSelect(Select):
    def __init__(self, channels: List[discord.TextChannel], guild_id: int):
        self.guild_id = guild_id
        options = [
            discord.SelectOption(label=f"#{ch.name}", value=str(ch.id), 
                               description=f"ID: {ch.id}")
            for ch in channels[:25]  # Discord limit
        ]
        super().__init__(placeholder="Selecciona el canal de logs...", 
                        min_values=1, max_values=1, options=options)

    async def callback(self, interaction: discord.Interaction):
        try:
            # VERIFICAR PERMISOS CON SISTEMA UNIFICADO
            user_level = get_user_level(interaction.user.id, interaction.guild.id)
            
            # 1. CIUDADANOS NO PUEDEN
            if user_level == "CIUDADANO":
                await interaction.response.send_message(
                    "üè∞ **Solo los nobles pueden configurar los canales del reino.**", 
                    ephemeral=True
                )
                return
            
            # 2. RECLUTAS NO PUEDEN
            if user_level == "RECLUTA":
                await interaction.response.send_message(
                    "‚öîÔ∏è **No tienes suficiente poder para configurar los canales, recluta.**", 
                    ephemeral=True
                )
                return
            
            # 3. VIP NO PUEDEN
            if user_level == "VIP":
                frase = random.choice(WHITELIST_VIP[interaction.user.id])
                await interaction.response.send_message(frase, ephemeral=True)
                return
            
            # 4. SOLO SUPERIORES PUEDEN CONTINUAR
            if user_level != "SUPERIOR":
                await interaction.response.send_message(
                    "üëë **Solo los comandantes supremos pueden configurar canales.**", 
                    ephemeral=True
                )
                return
            
            # CONFIGURAR EL CANAL
            config = await db_manager.get_config(self.guild_id)
            config["canal_logs_id"] = int(self.values[0])
            await db_manager.save_config(self.guild_id, config)
            
            channel = interaction.guild.get_channel(int(self.values[0]))
            await interaction.response.edit_message(
                content=f"‚úÖ Canal de logs configurado: {channel.mention}", 
                view=None
            )
        except Exception as e:
            logger.error(f"Error al configurar canal de logs: {e}")
            await interaction.response.send_message("‚ùå Error al configurar el canal.", ephemeral=True)

#  ‚ô£‚úÖTime Out Removal 
class TimeoutRemovalView(View):
    def __init__(self, user_id: int, guild_id: int, timeout_end: datetime):
        super().__init__(timeout=None)
        self.user_id = user_id
        self.guild_id = guild_id
        self.timeout_end = timeout_end
    
@discord.ui.button(label="Quitar Timeout", style=discord.ButtonStyle.danger, emoji="üîì")
async def remove_timeout(self, interaction: discord.Interaction, button: Button):
    if not interaction.user.guild_permissions.moderate_members:
        await interaction.response.send_message("‚ùå No tienes permisos para quitar timeouts.", ephemeral=True)
        return
    
    try:
        guild = bot.get_guild(self.guild_id)
        member = guild.get_member(self.user_id)
        
        if not member:
            await interaction.response.send_message("‚ùå Usuario no encontrado en el servidor.", ephemeral=True)
            return
        
        await member.timeout(None, reason=f"Timeout removido por {interaction.user}")
        
        # Limpiar del tracking de muted users
        if self.guild_id in muted_users and self.user_id in muted_users[self.guild_id]:
            del muted_users[self.guild_id][self.user_id]
        
        embed = discord.Embed(
            title="üîì Timeout Removido",
            description=f"**Usuario:** {member.mention}\n**Moderador:** {interaction.user.mention}",
            color=0x00FF00,
            timestamp=datetime.now(timezone.utc)
        )
        
        embed.add_field(name="Estado", value="‚úÖ Timeout removido manualmente", inline=False)
        
        # Deshabilitar el bot√≥n
        button.disabled = True
        button.label = "Timeout Removido"
        button.style = discord.ButtonStyle.success
        
        await interaction.response.edit_message(embed=embed, view=self)
        
    except discord.Forbidden:
        await interaction.response.send_message("‚ùå No tengo permisos para quitar el timeout.", ephemeral=True)
    except Exception as e:
        logger.error(f"Error al quitar timeout: {e}")
        await interaction.response.send_message(f"‚ùå Error al quitar timeout: {str(e)}", ephemeral=True)



#  ‚ô£‚úÖtime out removal
class TimeoutRemovalView(View):
    def __init__(self, user_id: int, guild_id: int, timeout_end: datetime):
        super().__init__(timeout=3600)  # 1 hora para usar el bot√≥n
        self.user_id = user_id
        self.guild_id = guild_id
        self.timeout_end = timeout_end

    @discord.ui.button(label="üîì Remover Timeout", style=discord.ButtonStyle.success)
    async def remove_timeout_button(self, interaction: discord.Interaction, button: Button):
        # Verificar permisos (solo whitelist)
        if not await solo_verificar_whitelist_interaction(interaction):
            return
        
        try:
            guild = interaction.guild
            member = guild.get_member(self.user_id)
            
            if not member:
                await interaction.response.send_message("‚ùå **Usuario no encontrado en el servidor**", ephemeral=True)
                return
            
            if not member.timed_out_until:
                await interaction.response.send_message("‚ùå **El usuario ya no tiene timeout activo**", ephemeral=True)
                return
            
            # Remover timeout
            await member.timeout(None, reason=f"Timeout removido por {interaction.user}")
            
            # Actualizar registros
            if self.guild_id in muted_users and self.user_id in muted_users[self.guild_id]:
                del muted_users[self.guild_id][self.user_id]
            
            # Respuesta de confirmaci√≥n
            embed = discord.Embed(
                title="‚úÖ Timeout Removido",
                description=f"**Usuario:** {member.mention}\n**Removido por:** {interaction.user.mention}",
                color=discord.Color.green(),
                timestamp=discord.utils.utcnow()
            )
            
            # Deshabilitar el bot√≥n
            button.disabled = True
            await interaction.response.edit_message(view=self)
            await interaction.followup.send(embed=embed)
            
        except discord.Forbidden:
            await interaction.response.send_message("‚ùå **Sin permisos para remover timeout**", ephemeral=True)
        except Exception as e:
            await interaction.response.send_message(f"‚ùå **Error:** {str(e)}", ephemeral=True)



#  ‚ô£‚úÖinvestigacion view
class InvestigacionView(discord.ui.View):
    def __init__(self, ctx, usuario, datos_investigacion):
        super().__init__(timeout=50)  
        self.ctx = ctx
        self.usuario = usuario
        self.datos = datos_investigacion
        self.pagina_actual = "principal"
    
    async def on_timeout(self):
        """Cuando se acaba el tiempo, deshabilita botones"""
        for item in self.children:
            item.disabled = True
        try:
            await self.message.edit(view=self)
        except:
            pass

    @discord.ui.select(
        placeholder="üîç Selecciona qu√© analizar en detalle...",
        options=[
            discord.SelectOption(
                label="üèÖ Estatus del Reino", 
                value="estatus",
                emoji="üèÖ",
                description="Jerarqu√≠a, roles, permisos"
            ),
            discord.SelectOption(
                label="üìä Actividad Reciente",
                value="actividad", 
                emoji="üìä",
                description="Estado, juegos, mensajes"
            ),
            discord.SelectOption(
                label="üïµÔ∏è‚Äç‚ôÇÔ∏è An√°lisis de Espionaje",
                value="espionaje",
                emoji="üïµÔ∏è‚Äç‚ôÇÔ∏è", 
                description="Servidores compartidos, alertas"
            ),
            discord.SelectOption(
                label="üåç An√°lisis Geogr√°fico",
                value="geografico",
                emoji="üåç",
                description="Zona horaria, patrones"
            ),
            discord.SelectOption(
                label="üíå Actividad en Servidor",
                value="servidor",
                emoji="üíå",
                description="Interacciones p√∫blicas"
            ),
            discord.SelectOption(
                label="‚öñÔ∏è Historial de Justicia",
                value="historial",
                emoji="‚öñÔ∏è",
                description="Sanciones, warns, veredicto"
            )
        ]
    )
    async def select_seccion(self, interaction: discord.Interaction, select: discord.ui.Select):
        if interaction.user != self.ctx.author:
            await interaction.response.send_message("üö´ **Solo quien ejecut√≥ el comando puede usar estos botones**", ephemeral=True)
            return
            
        await interaction.response.defer()
        
        seccion = select.values[0]
        self.pagina_actual = seccion
        
        embed = await self.crear_embed_detallado(seccion)
        await interaction.edit_original_response(embed=embed, view=self)

    async def crear_embed_principal(self):
        """Crea el embed principal limpio y simple"""
        
        usuario = self.usuario
        datos = self.datos
        
        # Determinar color seg√∫n actividad
        mensajes_hoy = datos.get('mensajes_hoy', 0)
        if mensajes_hoy >= 20:
            color = discord.Color.green()
            actividad_emoji = "üî•"
            actividad_texto = "Muy activo"
        elif mensajes_hoy >= 5:
            color = discord.Color.blue()
            actividad_emoji = "‚úÖ"
            actividad_texto = "Activo"
        else:
            color = discord.Color.orange()
            actividad_emoji = "‚ö†Ô∏è"
            actividad_texto = "Poco activo"
        
        embed = discord.Embed(
            title="üè∞ INVESTIGACI√ìN COMPLETA",
            color=color
        )
        
        # FOTO EN LA ESQUINA SUPERIOR DERECHA (thumbnail)
        avatar_url = usuario.avatar.url if usuario.avatar else usuario.default_avatar.url
        embed.set_image(url=f"{avatar_url}?size=256")
        
        # INFORMACI√ìN PRINCIPAL
        embed.add_field(
            name="üïµÔ∏è‚Äç‚ôÇÔ∏è **INVESTIGACI√ìN**",
            value=f"**{usuario.display_name}**",  # ‚úÖ CORREGIDO
            inline=False
        )
        
        # PRIMERA FILA
        embed.add_field(
            name="üü¢ **Rango**",
            value=f"{datos.get('jerarquia_emoji', 'üë§')} {datos.get('jerarquia_texto', 'Ciudadano')}",
            inline=True
        )
        
        embed.add_field(
            name="üë§ **Tiempo en servidor**",
            value=f"({datos.get('dias_en_servidor', '0')} d√≠as)",
            inline=True
        )
        
        embed.add_field(
            name="üìä **Actividad**",
            value=f"{mensajes_hoy} mensajes hoy",
            inline=True
        )
        
        # SEGUNDA FILA
        embed.add_field(
            name="üè∞ **Se uni√≥**",
            value=f"{datos.get('joined_at', 'No disponible')}",
            inline=True
        )
        
        embed.add_field(
            name="üèÉ **Estado**",
            value=f"{actividad_emoji} {actividad_texto}",
            inline=True
        )
        
        embed.add_field(
            name="üåç **Servidores**",
            value=f"{datos.get('servidores_compartidos', 0)} en com√∫n",
            inline=True
        )
        
        # INFORMACI√ìN ADICIONAL
        embed.add_field(
            name="üë• **Interacciones frecuentes**",
            value=f"{datos.get('top_interacciones', 'No disponible')}",
            inline=False
        )
        
        embed.set_footer(
            text=f"üîç Use el men√∫ desplegable para an√°lisis detallado | Por {self.ctx.author.display_name}"
        )
        
        return embed
        
    async def crear_embed_detallado(self, seccion):
        """Crea embeds detallados para cada secci√≥n"""
        
        usuario = self.usuario
        datos = self.datos
        
        if seccion == "estatus":
            embed = discord.Embed(
                title="üèÖ ESTATUS DEL REINO",
                description=f"üìã **Jerarqu√≠a de {usuario.display_name}**",  # ‚úÖ CORREGIDO
                color=discord.Color.gold()
            )
            
            avatar_url = usuario.avatar.url if usuario.avatar else usuario.default_avatar.url
            embed.set_image(url=f"{avatar_url}?size=256")
            
            embed.add_field(
                name="üëë **Rango**",
                value=f"{datos.get('jerarquia_emoji', 'üë§')} {datos.get('jerarquia_texto', 'Ciudadano')}",
                inline=True
            )
            
            embed.add_field(
                name="üèÜ **T√≠tulo Nobiliario**",
                value=f"{datos.get('rol_mas_alto', 'Plebeyo')}",
                inline=True
            )
            
            embed.add_field(
                name="üíé **Patrocinador Real**",
                value=f"{'‚úÖ S√≠' if datos.get('es_booster', False) else '‚ùå No'}",
                inline=True
            )
            
            embed.add_field(
                name="‚è∞ **En Discord**",
                value=f"{datos.get('dias_cuenta', 0)} d√≠as total",
                inline=True
            )
            
            embed.add_field(
                name="üö™ **Entradas al Reino**",
                value=f"{datos.get('veces_unido', 1)} vez(es)",
                inline=True
            )
            
            embed.add_field(
                name="‚ö†Ô∏è **Infracciones**",
                value=f"{datos.get('sanciones', 0)} faltas",
                inline=True
            )
            
        elif seccion == "actividad":
            embed = discord.Embed(
                title="üìä ACTIVIDAD RECIENTE",
                description=f"üìà **Comportamiento de {usuario.display_name}**",  # ‚úÖ CORREGIDO
                color=discord.Color.green()
            )

            avatar_url = usuario.avatar.url if usuario.avatar else usuario.default_avatar.url
            embed.set_image(url=f"{avatar_url}?size=256")
            
            embed.add_field(
                name="üìú **Pergaminos**",
                value=f"Hoy: {datos.get('mensajes_hoy', 0)}\nSemana: {datos.get('mensajes_semana', 0)}",
                inline=True
            )
            
            embed.add_field(
                name="üè∞ **Sala favorita**",
                value=f"{datos.get('canal_favorito', 'sal√≥n-principal')}",
                inline=True
            )
            
            embed.add_field(
                name="üì± **Conexi√≥n**",
                value=f"{'M√≥vil' if usuario.is_on_mobile() else 'Castillo'}",
                inline=True
            )
            
            embed.add_field(
                name="‚è∞ **√öltimo activo**",
                value=f"{datos.get('ultima_actividad', 'Ahora')}",
                inline=True
            )
            
            embed.add_field(
                name="üéÆ **Entretenimiento**",
                value=f"{datos.get('actividad_juego', 'Descanso')}",
                inline=True
            )
            
            embed.add_field(
                name="üéØ **Promedio**",
                value=f"{datos.get('promedio_mensajes', 0)} pergaminos/d√≠a",
                inline=True
            )
            
        elif seccion == "espionaje":
            embed = discord.Embed(
                title="üïµÔ∏è‚Äç‚ôÇÔ∏è AN√ÅLISIS DE ESPIONAJE",
                description=f"üîç **Investigaci√≥n de {usuario.display_name}**",  # ‚úÖ CORREGIDO
                color=discord.Color.dark_blue()
            )
            
            avatar_url = usuario.avatar.url if usuario.avatar else usuario.default_avatar.url
            embed.set_image(url=f"{avatar_url}?size=256")
            
            embed.add_field(
                name="üÜî **ID Real**",
                value=f"`{str(usuario.id)[:12]}...`",
                inline=True
            )
            
            embed.add_field(
                name="üñºÔ∏è **Retrato**",
                value=f"{'‚úÖ Personalizado' if usuario.avatar else '‚ùå Por defecto'}",
                inline=True
            )
            
            embed.add_field(
                name="üåç **Reinos compartidos**",
                value=f"{datos.get('servidores_compartidos', 0)} en com√∫n",
                inline=True
            )
            
            embed.add_field(
                name="‚ö†Ô∏è **Alertas**",
                value=f"{datos.get('alertas_count', 0)} detectadas",
                inline=True
            )
            
            embed.add_field(
                name="üîç **Patrones**",
                value=f"{datos.get('patron_sospechoso', 'Normal')}",
                inline=True
            )
            
            embed.add_field(
                name="üë• **Aliados frecuentes**",
                value=f"{datos.get('top_interacciones', 'No disponible')}",
                inline=True
            )
            
        elif seccion == "geografico":
            embed = discord.Embed(
                title="üåç AN√ÅLISIS GEOGR√ÅFICO",
                description=f"üìç **Ubicaci√≥n de {usuario.display_name}**",  # ‚úÖ CORREGIDO
                color=discord.Color.blue()
            )
            
            avatar_url = usuario.avatar.url if usuario.avatar else usuario.default_avatar.url
            embed.set_image(url=f"{avatar_url}?size=256")
            
            embed.add_field(
                name="üåê **Lengua del Reino**",
                value=f"{datos.get('idioma_detectado', 'Espa√±ol')}",
                inline=True
            )
            
            embed.add_field(
                name="üè† **Conexi√≥n**",
                value=f"{'üì± M√≥vil' if usuario.is_on_mobile() else 'üè∞ Castillo'}",
                inline=True
            )
            
            embed.add_field(
                name="üïê **Horario Real**",
                value=f"{datos.get('horario_pico', '20:00-23:00')}",
                inline=True
            )
            
            embed.add_field(
                name="üåé **Zona del Reino**",
                value=f"{datos.get('zona_horaria', 'UTC-5')}",
                inline=True
            )
            
            embed.add_field(
                name="üìä **Patr√≥n Noble**",
                value=f"{datos.get('patron_actividad', 'Nocturno')}",
                inline=True
            )
            
            embed.add_field(
                name="üìÖ **D√≠as de corte**",
                value=f"{datos.get('dias_activos', 'Fines de semana')}",
                inline=True
            )
            
        elif seccion == "servidor":
            embed = discord.Embed(
                title="üíå ACTIVIDAD EN EL REINO",
                description=f"üì® **Comunicaci√≥n de {usuario.display_name}**",
                color=discord.Color.purple()
            )
            
            avatar_url = usuario.avatar.url if usuario.avatar else usuario.default_avatar.url
            embed.set_image(url=f"{avatar_url}?size=256")
            
            embed.add_field(
                name="üìú **Pergaminos enviados**",
                value=f"{datos.get('total_mensajes', 0)} mensajes",
                inline=True
            )
            
            embed.add_field(
                name="üëÄ **Presencia**",
                value=f"{'‚úÖ En corte' if str(usuario.status) != 'offline' else '‚ùå Ausente'}",
                inline=True
            )
            
            embed.add_field(
                name="üéØ **Promedio**",
                value=f"{datos.get('promedio_mensajes', 0)} pergaminos/d√≠a",
                inline=True
            )
            
            embed.add_field(
                name="üì© **Respuestas**",
                value=f"{datos.get('respuestas_recibidas', 0)} recibidas",
                inline=True
            )
            
            embed.add_field(
                name="‚ö†Ô∏è **Reportados**",
                value=f"{datos.get('mensajes_reportados', 0)} pergaminos",
                inline=True
            )
            
            embed.add_field(
                name="üîí **Estado Real**",
                value=f"{datos.get('estado_personalizado', 'Sin proclama')}",
                inline=True
            )
            
        elif seccion == "historial":
            embed = discord.Embed(
                title="‚öñÔ∏è HISTORIAL DE JUSTICIA",
                description=f"üèõÔ∏è **Registro de {usuario.display_name}**",  # ‚úÖ CORREGIDO
                color=discord.Color.red()
            )
            
            avatar_url = usuario.avatar.url if usuario.avatar else usuario.default_avatar.url
            embed.set_image(url=f"{avatar_url}?size=256")
            
            embed.add_field(
                name="üî® **Total**",
                value=f"{datos.get('sanciones', 0)} infracciones",
                inline=True
            )
            
            embed.add_field(
                name="üö´ **Destierros**",
                value=f"{datos.get('total_bans', 0)} ejecuciones",
                inline=True
            )
            
            embed.add_field(
                name="üë¢ **Expulsiones**",
                value=f"{datos.get('total_kicks', 0)} del reino",
                inline=True
            )
            
            embed.add_field(
                name="üè∞ **Calabozos**",
                value=f"{datos.get('total_timeouts', 0)} encierros",
                inline=True
            )
            
            embed.add_field(
                name="‚ö†Ô∏è **Advertencias Reales**",
                value=f"{datos.get('total_warns', 0)} oficiales",
                inline=True
            )
            
            embed.add_field(
                name="üìÖ **√öltima sanci√≥n**",
                value=f"{datos.get('ultima_sancion', 'Nunca')}",
                inline=True
            )
            
            embed.add_field(
                name="üëë **Veredicto Final**",
                value=f"**{datos.get('veredicto_final', 'S√∫bdito Normal')}**",
                inline=False
            )
            
        else:
            embed = discord.Embed(
                title="‚ùì Secci√≥n no encontrada",
                description="Esta secci√≥n est√° en desarrollo",
                color=discord.Color.light_grey()
            )
        
        embed.set_footer(text=f"üîô Todos secretos solo lo puede revisar el que uso el comando {self.ctx.author.display_name}")
        
        return embed

#  ‚ô£‚úÖpanel view
class PanelView(View):
    def __init__(self):
        super().__init__(timeout=300)

    @discord.ui.button(label="üõ°Ô∏è Protecciones", style=discord.ButtonStyle.primary)
    async def protecciones_button(self, interaction: discord.Interaction, button: Button):
        if not await solo_verificar_whitelist_interaction(interaction):
            return
        
        embed = discord.Embed(
            title="üõ°Ô∏è Panel de Protecciones",
            description="Configura las protecciones del servidor",
            color=discord.Color.blue()
        )
        
        view = ProteccionesView()
        await interaction.response.edit_message(embed=embed, view=view)

    @discord.ui.button(label="‚öôÔ∏è Configuraci√≥n", style=discord.ButtonStyle.secondary)
    async def config_button(self, interaction: discord.Interaction, button: Button):
        if not await solo_verificar_whitelist_interaction(interaction):
            return
        
        embed = discord.Embed(
            title="‚öôÔ∏è Panel de Configuraci√≥n",
            description="Ajustes generales del bot",
            color=discord.Color.orange()
        )
        
        view = ConfigView()
        await interaction.response.edit_message(embed=embed, view=view)

    @discord.ui.button(label="üîç Informaci√≥n", style=discord.ButtonStyle.success)
    async def info_button(self, interaction: discord.Interaction, button: Button):
        embed = discord.Embed(
            title="üîç Informaci√≥n del Sistema",
            description="Estado actual del bot y estad√≠sticas",
            color=discord.Color.green()
        )
        
        config = await db_manager.get_config(interaction.guild_id)
        
        # Informaci√≥n b√°sica
        embed.add_field(
            name="üìä Estado General",
            value=f"‚Ä¢ **Modo Raid:** {'üî¥ ACTIVO' if config.get('raid_mode', False) else 'üü¢ Inactivo'}\n‚Ä¢ **Protecciones:** {sum(1 for k,v in config.items() if k.startswith(('eliminar_', 'crear_', 'editar_', 'anti_', 'proteccion_')) and v)}/9 activas\n‚Ä¢ **Canal de Logs:** {'‚úÖ Configurado' if config.get('canal_logs_id') else '‚ùå No configurado'}",
            inline=False
        )
        
        # Estad√≠sticas de sanciones
        embed.add_field(
            name="üî® Sanciones de Hoy",
            value=f"‚Ä¢ **Bans:** {sanciones_hoy['bans']}\n‚Ä¢ **Kicks:** {sanciones_hoy['kicks']}\n‚Ä¢ **Timeouts:** {sanciones_hoy['timeouts']}\n‚Ä¢ **Total:** {sum(sanciones_hoy.values())}",
            inline=True
        )
        
        # Informaci√≥n de whitelist
        whitelist_count = len(config.get('whitelist', []))
        embed.add_field(
            name="üëë Usuarios Autorizados",
            value=f"‚Ä¢ **Total:** {whitelist_count}\n‚Ä¢ **VIP:** {len(WHITELIST_VIP)}\n‚Ä¢ **Superiores:** 2",
            inline=True
        )
        
        await interaction.response.edit_message(embed=embed, view=self)

#  ‚ô£‚úÖProtecciones view
class ProteccionesView(View):
    def __init__(self):
        super().__init__(timeout=300)

    @discord.ui.button(label="üóëÔ∏è Anti-Eliminaci√≥n", style=discord.ButtonStyle.secondary)
    async def anti_delete_button(self, interaction: discord.Interaction, button: Button):
        if not await solo_verificar_whitelist_interaction(interaction):
            return
            
        config = await db_manager.get_config(interaction.guild_id)
        
        # Toggle protecciones
        config["eliminar_canales"] = not config.get("eliminar_canales", False)
        config["eliminar_roles"] = not config.get("eliminar_roles", False)
        
        await db_manager.save_config(interaction.guild_id, config)
        
        estado = "üü¢ ACTIVADA" if config["eliminar_canales"] else "üî¥ DESACTIVADA"
        embed = discord.Embed(
            title=f"üóëÔ∏è Protecci√≥n Anti-Eliminaci√≥n {estado}",
            description="Protege canales y roles contra eliminaci√≥n no autorizada",
            color=discord.Color.green() if config["eliminar_canales"] else discord.Color.red()
        )
        
        await interaction.response.edit_message(embed=embed, view=self)

    @discord.ui.button(label="‚úèÔ∏è Anti-Edici√≥n", style=discord.ButtonStyle.secondary)
    async def anti_edit_button(self, interaction: discord.Interaction, button: Button):
        if not await solo_verificar_whitelist_interaction(interaction):
            return
            
        config = await db_manager.get_config(interaction.guild_id)
        
        config["editar_canales"] = not config.get("editar_canales", False)
        config["editar_roles"] = not config.get("editar_roles", False)
        
        await db_manager.save_config(interaction.guild_id, config)
        
        estado = "üü¢ ACTIVADA" if config["editar_canales"] else "üî¥ DESACTIVADA"
        embed = discord.Embed(
            title=f"‚úèÔ∏è Protecci√≥n Anti-Edici√≥n {estado}",
            description="Protege canales y roles contra edici√≥n no autorizada",
            color=discord.Color.green() if config["editar_canales"] else discord.Color.red()
        )
        
        await interaction.response.edit_message(embed=embed, view=self)

    @discord.ui.button(label="ü§ñ Anti-Bots", style=discord.ButtonStyle.secondary)
    async def anti_bots_button(self, interaction: discord.Interaction, button: Button):
        if not await solo_verificar_whitelist_interaction(interaction):
            return
            
        config = await db_manager.get_config(interaction.guild_id)
        
        config["agregar_bots"] = not config.get("agregar_bots", False)
        
        await db_manager.save_config(interaction.guild_id, config)
        
        estado = "üü¢ ACTIVADA" if config["agregar_bots"] else "üî¥ DESACTIVADA"
        embed = discord.Embed(
            title=f"ü§ñ Protecci√≥n Anti-Bots {estado}",
            description="Previene la adici√≥n de bots no autorizados",
            color=discord.Color.green() if config["agregar_bots"] else discord.Color.red()
        )
        
        await interaction.response.edit_message(embed=embed, view=self)

    @discord.ui.button(label="üì¢ Anti-Menciones", style=discord.ButtonStyle.secondary)
    async def anti_mention_button(self, interaction: discord.Interaction, button: Button):
        if not await solo_verificar_whitelist_interaction(interaction):
            return
            
        config = await db_manager.get_config(interaction.guild_id)
        
        config["anti_mencion"] = not config.get("anti_mencion", False)
        
        await db_manager.save_config(interaction.guild_id, config)
        
        estado = "üü¢ ACTIVADA" if config["anti_mencion"] else "üî¥ DESACTIVADA"
        embed = discord.Embed(
            title=f"üì¢ Protecci√≥n Anti-Menciones {estado}",
            description="Previene menciones masivas (everyone/here)",
            color=discord.Color.green() if config["anti_mencion"] else discord.Color.red()
        )
        
        await interaction.response.edit_message(embed=embed, view=self)

    @discord.ui.button(label="üîÑ Volver", style=discord.ButtonStyle.primary, row=1)
    async def back_button(self, interaction: discord.Interaction, button: Button):
        embed = discord.Embed(
            title="üõ°Ô∏è Panel de Control AntiRaid",
            description="Sistema de protecci√≥n medieval para Discord",
            color=discord.Color.gold()
        )
        
        view = PanelView()
        await interaction.response.edit_message(embed=embed, view=view)

#  ‚ô£‚úÖConfig view
class ConfigView(View):
    def __init__(self):
        super().__init__(timeout=300)

    @discord.ui.button(label="üìù Canal de Logs", style=discord.ButtonStyle.secondary)
    async def logs_button(self, interaction: discord.Interaction, button: Button):
        if not await solo_verificar_whitelist_interaction(interaction):
            return
            
        embed = discord.Embed(
            title="üìù Configurar Canal de Logs",
            description="Use el comando `!config logs #canal` para configurar el canal de registros",
            color=discord.Color.blue()
        )
        
        await interaction.response.edit_message(embed=embed, view=self)

    @discord.ui.button(label="‚öñÔ∏è Tipo de Sanci√≥n", style=discord.ButtonStyle.secondary)
    async def sancion_button(self, interaction: discord.Interaction, button: Button):
        if not await solo_verificar_whitelist_interaction(interaction):
            return
            
        config = await db_manager.get_config(interaction.guild_id)
        sancion_actual = config.get("sancion", "ban")
        
        # Cambiar tipo de sanci√≥n
        nueva_sancion = "kick" if sancion_actual == "ban" else "ban"
        config["sancion"] = nueva_sancion
        
        await db_manager.save_config(interaction.guild_id, config)
        
        embed = discord.Embed(
            title=f"‚öñÔ∏è Sanci√≥n Configurada: {nueva_sancion.upper()}",
            description=f"Ahora las infracciones resultar√°n en **{nueva_sancion}**",
            color=discord.Color.orange()
        )
        
        await interaction.response.edit_message(embed=embed, view=self)

    @discord.ui.button(label="üö® Modo Raid", style=discord.ButtonStyle.danger)
    async def raid_mode_button(self, interaction: discord.Interaction, button: Button):
        if not await solo_verificar_whitelist_interaction(interaction):
            return
            
        config = await db_manager.get_config(interaction.guild_id)
        
        # Toggle raid mode
        nuevo_estado = not config.get("raid_mode", False)
        config["raid_mode"] = nuevo_estado
        
        await db_manager.save_config(interaction.guild_id, config)
        
        if nuevo_estado:
            # Activar modo raid
            await activar_protecciones_raid(interaction.guild_id, True)
            await gestionar_invitaciones_raid_completo(interaction.guild, True)
            await bloquear_servidor(interaction.guild, "Modo raid activado manualmente")
            
            embed = discord.Embed(
                title="üö® MODO RAID ACTIVADO",
                description="üî¥ **Protecci√≥n m√°xima activada**\n‚Ä¢ Todas las protecciones ON\n‚Ä¢ Invitaciones pausadas\n‚Ä¢ Servidor bloqueado",
                color=discord.Color.red()
            )
        else:
            # Desactivar modo raid
            await gestionar_invitaciones_raid_completo(interaction.guild, False)
            await desbloquear_servidor(interaction.guild)
            
            embed = discord.Embed(
                title="‚úÖ MODO RAID DESACTIVADO",
                description="üü¢ **Operaciones normales**\n‚Ä¢ Invitaciones reactivadas\n‚Ä¢ Servidor desbloqueado\n‚Ä¢ Protecciones seg√∫n configuraci√≥n",
                color=discord.Color.green()
            )
        
        await interaction.response.edit_message(embed=embed, view=self)

    @discord.ui.button(label="üîÑ Volver", style=discord.ButtonStyle.primary, row=1)
    async def back_button(self, interaction: discord.Interaction, button: Button):
        embed = discord.Embed(
            title="üõ°Ô∏è Panel de Control AntiRaid",
            description="Sistema de protecci√≥n medieval para Discord",
            color=discord.Color.gold()
        )
        
        view = PanelView()
        await interaction.response.edit_message(embed=embed, view=view)

#  ‚ô£‚úÖHoneypot view
class HoneypotView(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)
    
    @discord.ui.button(
        label="üõ°Ô∏è Obtener Todos Los Permisos De Moderador",
        style=discord.ButtonStyle.red,
        custom_id="honeypot_button"
    )
    async def honeypot_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        """Bot√≥n trampa que detecta raiders"""
        
        print(f"DEBUG: ¬°HONEYPOT ACTIVADO! Usuario: {interaction.user}")
        
        # RESPUESTA INMEDIATA FALSA
        await interaction.response.send_message(
            "‚úÖ **Permisos activados temporalmente...**", 
            ephemeral=True
        )
        
        print("DEBUG: Respuesta inmediata enviada")
        
        # DELAY PARA PARECER REAL
        await asyncio.sleep(4)
        
        # MENSAJE DE ERROR FALSO
        await interaction.followup.send(
            "‚ùå **Error de conexi√≥n, reintenta en 5 minutos**",
            ephemeral=True
        )
        
        print("DEBUG: Mensaje de error enviado")
        
        # ENVIAR REPORTE AL LOG (silencioso)
        print("DEBUG: Llamando a send_honeypot_report...")
        await send_honeypot_report(interaction.user, interaction.guild)
        print("DEBUG: send_honeypot_report completado")

async def send_honeypot_report(user, guild):
    """Enviar reporte detallado al canal de logs configurado"""
    
    try:
        print(f"DEBUG: Iniciando reporte honeypot para {user}")
        
        # OBTENER CONFIGURACI√ìN DEL HONEYPOT
        config = await db_manager.get_config(guild.id)
        honeypot_config = config.get("honeypot", {})
        
        print(f"DEBUG: Configuraci√≥n honeypot: {honeypot_config}")
        
        if not honeypot_config.get("active", False):
            print("DEBUG: ‚ùå HONEYPOT NO EST√Å ACTIVO EN CONFIGURACI√ìN")
            return
        
        # OBTENER CANAL DE LOGS DESDE CONFIGURACI√ìN
        log_channel_id = honeypot_config.get("log_channel_id")
        print(f"DEBUG: ID del canal de logs: {log_channel_id}")
        
        if not log_channel_id:
            print("DEBUG: ‚ùå NO HAY CANAL DE LOGS CONFIGURADO")
            return
        
        log_channel = guild.get_channel(log_channel_id)
        print(f"DEBUG: Canal de logs encontrado: {log_channel}")
        
        if not log_channel:
            print(f"DEBUG: ‚ùå CANAL DE LOGS NO ENCONTRADO CON ID: {log_channel_id}")
            return
        
        print(f"DEBUG: ‚úÖ Usando canal configurado: {log_channel.name}")
        
        # CALCULAR DATOS DEL USUARIO (VERSI√ìN SIMPLE Y SEGURA)
        try:
            account_age = (datetime.now(timezone.utc) - user.created_at.replace(tzinfo=None)).days  # ‚úÖ CORREGIDO
        except:
            account_age = 0
            
        member = guild.get_member(user.id)
        
        if member and member.joined_at:
            try:
                joined_age = (datetime.now(timezone.utc) - member.joined_at.replace(tzinfo=None)).days  # ‚úÖ CORREGIDO
            except:
                joined_age = 0
        else:
            joined_age = 0
        
        print(f"DEBUG: Datos calculados - Edad cuenta: {account_age}, Edad en servidor: {joined_age}")
        
        # CREAR EMBED DE REPORTE
        embed = discord.Embed(
            title="üö® HONEYPOT ACTIVADO - REVISI√ìN REQUERIDA",
            color=0xFF4500
        )
        
        embed.add_field(
            name="üë§ Usuario Detectado",
            value=f"**Nombre:** {user.mention} ({user})\n"
                  f"**ID:** {user.id}\n"
                  f"**Cuenta creada:** {user.created_at.strftime('%d/%m/%Y') if user.created_at else 'N/A'} ({account_age} d√≠as)\n"
                  f"**Se uni√≥ al servidor:** {member.joined_at.strftime('%d/%m/%Y') if member and member.joined_at else 'N/A'} ({joined_age} d√≠as)",
            inline=False
        )
        
        embed.add_field(
            name="üï≥Ô∏è Trampa Activada",
            value=f"**Tipo:** Bot√≥n 'Permisos de Moderador'\n"
                  f"**Canal:** üß™-beta-tester\n"
                  f"**Hora:** {datetime.now().strftime('%H:%M:%S')}\n"
                  f"**Dispositivo:** Desktop/Mobile",
            inline=False
        )
        
        # AN√ÅLISIS AUTOM√ÅTICO
        risk_factors = []
        if account_age < 7:
            risk_factors.append("‚ö†Ô∏è Cuenta muy nueva")
        if joined_age < 1:
            risk_factors.append("‚ö†Ô∏è Se uni√≥ recientemente")
        if not member or len(member.roles) <= 1:
            risk_factors.append("‚ö†Ô∏è Sin roles asignados")
        
        risk_text = "\n".join(risk_factors) if risk_factors else "‚úÖ Sin factores de riesgo evidentes"
        
        embed.add_field(
            name="‚öñÔ∏è An√°lisis Autom√°tico",
            value=risk_text,
            inline=False
        )
        
        embed.add_field(
            name="‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ",
            value="üõ°Ô∏è **¬øQu√© acci√≥n tomar con este usuario?**",
            inline=False
        )
        
        embed.set_footer(text="üïµÔ∏è Sistema Honeypot - Esperando decisi√≥n del administrador")
        
        print("DEBUG: Embed creado correctamente")
        
        # CREAR BOTONES DE ACCI√ìN
        view = HoneypotDecisionView(user.id, guild.id)
        print(f"DEBUG: View creada con user_id={user.id}, guild_id={guild.id}")
        
        # ENVIAR REPORTE
        message = await log_channel.send(embed=embed, view=view)
        print(f"DEBUG: ‚úÖ Mensaje enviado exitosamente al canal {log_channel.name}: {message.id}")
        
    except Exception as e:
        print(f"DEBUG: ‚ùå ERROR en send_honeypot_report: {e}")
        logger.error(f"Error enviando reporte honeypot: {e}")
        import traceback
        print(f"DEBUG: Traceback completo: {traceback.format_exc()}")

#  ‚ô£‚úÖcanal agregar select
class CanalAgregarSelect(discord.ui.Select):
    def __init__(self, options, user_id, guild_id):
        super().__init__(
            placeholder="üè∞ Selecciona un canal para marcar como seguro...", 
            options=options,
            min_values=1,
            max_values=1
        )
        self.user_id = user_id
        self.guild_id = guild_id
    
    async def callback(self, interaction: discord.Interaction):
        if interaction.user.id != self.user_id:
            await interaction.response.send_message("‚öîÔ∏è **Solo el se√±or que invoc√≥ el comando puede usar este men√∫**", ephemeral=True)
            return
        
        channel_id = int(self.values[0])
        channel = interaction.guild.get_channel(channel_id)
        
        # Agregar a configuraci√≥n (CON VERIFICACI√ìN DE DUPLICADOS)
        config = await db_manager.get_config(self.guild_id)
        canales_seguros = config.get("canales_seguros", [])
        
        if channel_id not in canales_seguros:  # üîß PREVENIR DUPLICADOS
            canales_seguros.append(channel_id)
            config["canales_seguros"] = canales_seguros
            await db_manager.save_config(self.guild_id, config)
            
            # üîí PONER CANDADO (hacer privado)
            await channel.set_permissions(interaction.guild.default_role, read_messages=False)
            
            embed = discord.Embed(
                title="üõ°Ô∏è Canal Seguro con Candado",
                description=f"‚öîÔ∏è **{channel.mention} ahora es privado**\nüîí **Solo administradores pueden acceder**\nüõ°Ô∏è **NO se afectar√° con !lock/!unlock**",
                color=discord.Color.green()
            )
            embed.set_footer(text="üëë Canal protegido y privado")
        else:
            embed = discord.Embed(
                title="‚ö†Ô∏è Canal Ya Seguro",
                description=f"üè∞ **{channel.mention} ya est√° marcado como seguro**",
                color=discord.Color.orange()
            )
        
        await interaction.response.send_message(embed=embed, ephemeral=True, delete_after=30)


#  ‚ô£‚úÖboton crear calabozo
class BotonCrearCalbozo(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=300)
    
    @discord.ui.button(label="üèóÔ∏è Crear Sistema Completo", style=discord.ButtonStyle.success)
    async def crear_sistema(self, interaction: discord.Interaction, button: discord.ui.Button):
        # ‚úÖ PRIMERO: Deferir para evitar timeout
        await interaction.response.defer()
        
        try:
            guild = interaction.guild
            
            # ‚úÖ MOSTRAR QUE EST√Å TRABAJANDO
            embed_trabajando = discord.Embed(
                title="üèóÔ∏è **CREANDO SISTEMA...**",
                description="‚è≥ Por favor espera, esto puede tomar unos segundos...",
                color=0xffaa00
            )
            
            # ‚úÖ SOLUCI√ìN AL ERROR
            try:
                await interaction.edit_original_response(embed=embed_trabajando)
            except discord.NotFound:
                # Si el mensaje original no existe, enviar uno nuevo
                await interaction.followup.send(embed=embed_trabajando, ephemeral=True)
            
            # 1. CREAR ROL PRISIONERO CON CERO PERMISOS
            rol_calabozo = await guild.create_role(
                name='Calabozo',            
                color=discord.Color(0x8B4513),
                permissions=discord.Permissions.none(),
                mentionable=False
            )
            
            # 2. CREAR CANAL CALABOZO
            overwrites = {
                guild.default_role: discord.PermissionOverwrite(
                    view_channel=False,
                    use_application_commands=False
                ),
                guild.me: discord.PermissionOverwrite(
                    view_channel=True,
                    send_messages=True, 
                    manage_permissions=True
                ),
                rol_calabozo: discord.PermissionOverwrite(
                    view_channel=True,
                    send_messages=True,
                    use_application_commands=False,
                    attach_files=False,
                    embed_links=False,
                    add_reactions=False,
                    use_external_emojis=False,
                    mention_everyone=False,
                    manage_messages=False,
                    read_message_history=True,
                    create_public_threads=False,
                    create_private_threads=False,
                    send_messages_in_threads=False,
                    use_external_stickers=False,
                    send_voice_messages=False,
                    send_polls=False
                )
            }
            
            canal_calabozo = await guild.create_text_channel(
                'calabozo', 
                topic="‚õìÔ∏è Calabozos del Reino - Aqu√≠ van los prisioneros ‚õìÔ∏è",
                overwrites=overwrites
            )
            
            # 3. BLOQUEAR ACCESO A OTROS CANALES
            canales_bloqueados = 0
            for canal in guild.channels:
                if canal.name != "calabozo" and isinstance(canal, discord.TextChannel):
                    try:
                        await canal.set_permissions(
                            rol_calabozo, 
                            view_channel=False,
                            send_messages=False,
                            connect=False
                        )
                        canales_bloqueados += 1
                    except:
                        pass
            
            # 4. BLOQUEAR CANALES DE VOZ
            for canal in guild.voice_channels:
                try:
                    await canal.set_permissions(
                        rol_calabozo,
                        view_channel=False,
                        connect=False
                    )
                except:
                    pass
            
            # 5. SELECTOR DE CANAL PARA EMBEDS DE LIBERACI√ìN
            embed_selector = discord.Embed(
                title="üìç Configuraci√≥n Final",
                description="¬øEn qu√© canal quieres que se env√≠en los embeds cuando alguien pague su fianza?",
                color=0x00ff00
            )
            
            view_selector = SelectorCanalLiberacion(guild)
            
            try:
                await interaction.edit_original_response(
                    embed=embed_selector,
                    view=view_selector
                )
            except discord.NotFound:
                await interaction.followup.send(
                    embed=embed_selector,
                    view=view_selector,
                    ephemeral=True
                )
            
        except Exception as e:
            error_embed = discord.Embed(
                title="‚ùå Error al crear sistema",
                description=f"Error: {str(e)}",
                color=0xff0000
            )
            try:
                await interaction.edit_original_response(embed=error_embed, view=None)
            except discord.NotFound:
                await interaction.followup.send(embed=error_embed, ephemeral=True)
    
    @discord.ui.button(label="‚ùå Cancelar", style=discord.ButtonStyle.danger)
    async def cancelar(self, interaction: discord.Interaction, button: discord.ui.Button):
        embed = discord.Embed(
            title="‚ùå **OPERACI√ìN CANCELADA**",
            description="No se cre√≥ el sistema de calabozo",
            color=0xff0000
        )
        await interaction.response.edit_message(embed=embed, view=None)

#  ‚ô£‚úÖselector canal liberacion
class SelectorCanalLiberacion(discord.ui.View):
    def __init__(self, guild):
        super().__init__(timeout=300)
        self.guild = guild
        
        # Crear dropdown con canales de texto
        opciones = []
        for canal in guild.text_channels:
            if len(opciones) < 25:  # L√≠mite de Discord
                opciones.append(discord.SelectOption(
                    label=f"#{canal.name}",
                    value=str(canal.id),
                    description=f"ID: {canal.id}"
                ))
        
        if opciones:
            select = discord.ui.Select(
                placeholder="üéØ Selecciona el canal para embeds de liberaci√≥n...",
                options=opciones
            )
            select.callback = self.canal_seleccionado
            self.add_item(select)
    
    async def canal_seleccionado(self, interaction: discord.Interaction):
        canal_id = int(interaction.data['values'][0])
        canal = self.guild.get_channel(canal_id)
        
        # Guardar canal de fianza en base de datos
        try:
            await db_manager.guardar_canal_fianza(interaction.guild.id, canal_id)
        except:
            pass  # Si falla la DB, contin√∫a
        
        # üè∞ CREAR Y ENVIAR IMAGEN √âPICA AL CALABOZO
        canal_calabozo = discord.utils.get(self.guild.channels, name="calabozo")
        if canal_calabozo:
            try:
                # Usar tu funci√≥n personalizada √©pica
                imagen_calabozo = await crear_imagen_calabozo(
                    interaction.guild.me,  # Bot como usuario
                    "Bienvenida al Calabozo",  # Tiempo restante (texto)
                    str(interaction.guild.me.display_avatar.url)  # URL del avatar del bot
                )
                
                if imagen_calabozo:
                    archivo = discord.File(imagen_calabozo, filename="calabozo_epico.gif")
                    await canal_calabozo.send(file=archivo)
                else:
                    # Fallback si falla la imagen
                    await canal_calabozo.send("‚õìÔ∏è **CALABOZOS DEL REINO** ‚õìÔ∏è")
                    
            except Exception as e:
                print(f"Error enviando imagen √©pica: {e}")
                # Fallback simple
                await canal_calabozo.send("‚õìÔ∏è **CALABOZOS DEL REINO** ‚õìÔ∏è")
        
        embed_final = discord.Embed(
            title="‚úÖ **SISTEMA CREADO EXITOSAMENTE**",
            description=f"üè∞ **Rol:** Calabozo\nüîí **Canal:** #calabozo\nüìç **Embeds de fianza:** {canal.mention}\n\n‚öîÔ∏è **¬°El sistema est√° listo para usar!**",
            color=0x00ff00
        )

        await interaction.response.defer()
        canal_actual = interaction.channel
        await canal_actual.send(embed=embed_final, delete_after=10)


#  ‚ô£‚úÖcanal remover select
class CanalRemoverSelect(discord.ui.Select):
    def __init__(self, options, user_id, guild_id):
        super().__init__(
            placeholder="üó°Ô∏è Selecciona un canal para quitar protecci√≥n...", 
            options=options,
            min_values=1,
            max_values=1
        )
        self.user_id = user_id
        self.guild_id = guild_id
    
    async def callback(self, interaction: discord.Interaction):
        if interaction.user.id != self.user_id:
            await interaction.response.send_message("‚öîÔ∏è **Solo el se√±or que invoc√≥ el comando puede usar este men√∫**", ephemeral=True)
            return
        
        channel_id = int(self.values[0])
        channel = interaction.guild.get_channel(channel_id)
        
        # Remover de configuraci√≥n
        config = await db_manager.get_config(self.guild_id)
        canales_seguros = config.get("canales_seguros", [])
        
        if channel_id in canales_seguros:
            canales_seguros.remove(channel_id)
            config["canales_seguros"] = canales_seguros
            await db_manager.save_config(self.guild_id, config)
            
            # üîì QUITAR CANDADO (hacer p√∫blico)
            await channel.set_permissions(interaction.guild.default_role, read_messages=None)
            
            embed = discord.Embed(
                title="üó°Ô∏è Candado Removido",
                description=f"‚ö∞Ô∏è **{channel.mention} ahora es p√∫blico**\nüëë **Todos pueden acceder**\n‚ö†Ô∏è **Se afectar√° con !lock/!unlock**",
                color=discord.Color.red()
            )
            embed.set_footer(text="üëë Canal p√∫blico y desprotegido")
        else:
            embed = discord.Embed(
                title="‚ö†Ô∏è Canal No Encontrado",
                description=f"üè∞ **{channel.mention} no estaba en la lista**",
                color=discord.Color.orange()
            )
        
        await interaction.response.send_message(embed=embed, ephemeral=True, delete_after=30)

#  ‚ô£‚úÖboton pagar fianza
class BotonPagarFianza(discord.ui.View):
    def __init__(self, usuario, precio, florines):
        super().__init__(timeout=15)
        self.usuario = usuario
        self.precio = precio
        self.florines = florines
    
    @discord.ui.button(label="üí∞ Pagar Fianza", style=discord.ButtonStyle.secondary)
    async def pagar_fianza_btn(self, interaction: discord.Interaction, button: discord.ui.Button):
        if self.florines < self.precio:
            # Sin dinero suficiente
            button.style = discord.ButtonStyle.danger
            button.label = "‚ùå Florines Insuficientes"
            button.disabled = True
            
            frase = random.choice(FRASES_SIN_FLORINES)
            await interaction.response.edit_message(content=f"üè∞ **{frase}**", embed=None, view=self)
            return
        
        # Procesar pago
        try:
            # Cobrar fianza
            await db_manager.add_user_coins(self.usuario.id, -self.precio)
            
            # Cambiar bot√≥n a procesando
            button.style = discord.ButtonStyle.secondary
            button.label = "‚è≥ Procesando..."
            button.disabled = True
            
            # Mensaje inicial de procesamiento
            await interaction.response.edit_message(
                content=f"‚è≥ **Procesando liberaci√≥n de {self.usuario.display_name}...**",
                embed=None, 
                view=self
            )
            
            # ‚úÖ DELAY DRAM√ÅTICO DE 6 SEGUNDOS
            await asyncio.sleep(6)
            
            # Liberar prisionero DESPU√âS del delay
            rol_calabozo = discord.utils.get(interaction.guild.roles, name="Calabozo")
            if rol_calabozo and rol_calabozo in self.usuario.roles:
                await self.usuario.remove_roles(rol_calabozo)
            
            # Eliminar de datos
            if self.usuario.id in tiempo_calabozos:
                del tiempo_calabozos[self.usuario.id]
                guardar_calabozos()
            
            # Cambiar bot√≥n a verde
            button.style = discord.ButtonStyle.success
            button.label = "‚úÖ Fianza Pagada"
            button.disabled = True
            
            # Frase de liberaci√≥n
            frase_liberacion = random.choice(FRASES_FIANZA_FLORINES)
            await interaction.edit_original_response(content=f"üóùÔ∏è **{frase_liberacion}**", embed=None, view=self)

            # ‚úÖ ANUNCIO DEL GUARDI√ÅN (ARREGLADO)
            try:
                # ‚úÖ USAR get_config EN LUGAR DE obtener_canal_fianza
                config = await db_manager.get_config(interaction.guild.id)
                canal_id = config.get('canal_fianza')
                print(f"üîç Canal fianza configurado: {canal_id}")
                
                if canal_id:
                    canal = bot.get_channel(canal_id)
                    if canal:
                        embed_anuncio = discord.Embed(
                            title="üóùÔ∏è ¬°LIBERTAD COMPRADA!",
                            description=f"**{self.usuario.display_name}** Salio del calabozo pagando **{self.precio} florines**",
                            color=0x00ff00,
                            timestamp=datetime.now(timezone.utc)
                        )
                        embed_anuncio.add_field(
                            name="üí∞ Fianza", 
                            value=f"{self.precio} florines", 
                            inline=True
                        )
                        embed_anuncio.add_field(
                            name="‚è∞ Liberado", 
                            value=f"<t:{int(datetime.now(timezone.utc).timestamp())}:R>", 
                            inline=True
                        )
                        embed_anuncio.set_image(url="https://i.gifer.com/TTjP.gif")
                        embed_anuncio.set_footer(text="Sistema de Calabozos ‚Ä¢ Medieval Bot")
                        
                        await canal.send(embed=embed_anuncio, delete_after=40)
                        print("‚úÖ Embed de liberaci√≥n enviado correctamente")
                    else:
                        print(f"‚ùå Canal no encontrado con ID: {canal_id}")
                else:
                    print("‚ùå Canal de fianza no configurado en la DB")
            except Exception as embed_error:
                print(f"‚ùå Error enviando embed de liberaci√≥n: {embed_error}")
            # Delay adicional
            await asyncio.sleep(2)
            
            # Mensaje final
            await interaction.edit_original_response(
                content=f"üîì **¬°Las cadenas de {self.usuario.display_name} han sido removidas!**",
                embed=None, 
                view=self
            )
                    
        except Exception as e:
            print(f"üîç ERROR EN PAGAR FIANZA: {e}")
            # ‚úÖ ARREGLAR DOBLE RESPUESTA
            button.style = discord.ButtonStyle.danger
            button.label = "‚ùå Error"
            button.disabled = True
            
            try:
                await interaction.edit_original_response(
                    content="‚ùå **Error al procesar la fianza. Contacta a un administrador.**",
                    view=self
                )
            except Exception as edit_error:
                print(f"Error editando mensaje: {edit_error}")
                # Fallback si ya no se puede editar
                try:
                    await interaction.followup.send("‚ùå **Error al procesar la fianza**", ephemeral=True)
                except:
                    pass

#  ‚ô£‚úÖCannel select view
class ChannelSelectView(discord.ui.View):
    def __init__(self, ctx, honeypot_channel):
        super().__init__(timeout=120)  # ‚úÖ AUMENTAR TIMEOUT
        self.ctx = ctx
        self.honeypot_channel = honeypot_channel
        self.selected_channel = None
        
        # VERIFICAR QUE HAY CANALES DISPONIBLES
        text_channels = [ch for ch in ctx.guild.text_channels if ch.permissions_for(ctx.guild.me).send_messages]
        
        if text_channels:
            # CREAR EL SELECT DIN√ÅMICAMENTE
            self.add_item(ChannelSelect(ctx, honeypot_channel))
            print(f"DEBUG: Selector creado con {len(text_channels)} canales")
        else:
            print("DEBUG: No hay canales disponibles para el selector")

#  ‚ô£‚úÖchannel select
class ChannelSelect(discord.ui.Select):
    def __init__(self, ctx, honeypot_channel):
        self.ctx = ctx
        self.honeypot_channel = honeypot_channel
        
        # OBTENER CANALES DISPONIBLES
        text_channels = [ch for ch in ctx.guild.text_channels if ch.permissions_for(ctx.guild.me).send_messages]
        
        # CREAR OPCIONES
        options = []
        for channel in text_channels[:25]:  # Discord limite 25 opciones
            # DETERMINAR EMOJI SEG√öN TIPO DE CANAL
            if "log" in channel.name.lower():
                emoji = "üìã"
            elif "mod" in channel.name.lower() or "admin" in channel.name.lower():
                emoji = "üõ°Ô∏è"
            elif "general" in channel.name.lower():
                emoji = "üí¨"
            else:
                emoji = "üìù"
            
            options.append(discord.SelectOption(
                label=f"{channel.name}",
                description=f"Canal: #{channel.name}",
                value=str(channel.id),
                emoji=emoji
            ))
        
        super().__init__(
            placeholder="üìã Selecciona el canal para logs del honeypot...",
            min_values=1,
            max_values=1,
            options=options,
            custom_id="channel_select_honeypot"
        )
    
    async def callback(self, interaction: discord.Interaction):
        """Callback cuando se selecciona un canal"""
        
        try:
            print(f"DEBUG: ¬°SELECTOR ACTIVADO! Usuario: {interaction.user}")
            print(f"DEBUG: Valor seleccionado: {self.values[0]}")
            
            # OBTENER CANAL SELECCIONADO
            channel_id = int(self.values[0])
            selected_channel = self.ctx.guild.get_channel(channel_id)
            
            print(f"DEBUG: Canal encontrado: {selected_channel}")
            
            if not selected_channel:
                await interaction.response.send_message("‚ùå **Canal no encontrado.**", ephemeral=True)
                return
            
            # GUARDAR CONFIGURACI√ìN
            config = await db_manager.get_config(self.ctx.guild.id)
            config["honeypot"] = {
                "channel_id": self.honeypot_channel.id,
                "log_channel_id": selected_channel.id,
                "active": True
            }
            await db_manager.save_config(self.ctx.guild.id, config)
            
            print(f"DEBUG: ‚úÖ Configuraci√≥n guardada: {config['honeypot']}")
            
            # EMBED DE CONFIRMACI√ìN
            embed = discord.Embed(
                title="‚úÖ HONEYPOT CONFIGURADO CORRECTAMENTE",
                color=0x00FF00
            )
            
            embed.add_field(
                name="üï≥Ô∏è Canal Trampa",
                value=f"{self.honeypot_channel.mention}\n`{self.honeypot_channel.name}`",
                inline=True
            )
            
            embed.add_field(
                name="üìã Canal de Logs",
                value=f"{selected_channel.mention}\n`{selected_channel.name}`",
                inline=True
            )
            
            embed.add_field(
                name="‚öôÔ∏è Estado",
                value="üü¢ **ACTIVO Y LISTO**\nüï∑Ô∏è Trampa preparada para raiders",
                inline=False
            )
            
            embed.set_footer(text="üõ°Ô∏è Sistema Honeypot - Protegiendo el reino")
            
            # DESACTIVAR SELECTOR
            for item in self.view.children:
                item.disabled = True
            
            # Enviar con auto-borrado en 20 segundos
            await interaction.response.edit_message(embed=embed, view=self.view, delete_after=20)
            
            print("DEBUG: ‚úÖ Mensaje editado correctamente")
            
            # MENSAJE ADICIONAL MEDIEVAL
            await interaction.followup.send(
                "‚öîÔ∏è **Las trampas han sido desplegadas, mi se√±or. Los esp√≠as enemigos caer√°n en nuestras redes.**",
                ephemeral=True
            )
            
            print("DEBUG: ‚úÖ Configuraci√≥n completada exitosamente")
            
        except Exception as e:
            print(f"DEBUG: ‚ùå Error en callback: {e}")
            logger.error(f"Error en callback de selector: {e}")
            import traceback
            print(f"DEBUG: Traceback: {traceback.format_exc()}")
            
            try:
                await interaction.response.send_message("‚ùå **Error al configurar el canal de logs.**", ephemeral=True)
            except:
                try:
                    await interaction.followup.send("‚ùå **Error al configurar el canal de logs.**", ephemeral=True)
                except:
                    print("DEBUG: No se pudo enviar mensaje de error")

#  ‚ô£‚úÖhoney pot decision view
class HoneypotDecisionView(discord.ui.View):
    def __init__(self, user_id=None, guild_id=None):
        super().__init__(timeout=None)  # SIN TIMEOUT para persistencia
        self.user_id = user_id
        self.guild_id = guild_id
    
    @discord.ui.button(
        label="üü¢ DEJAR PASAR",
        style=discord.ButtonStyle.green,
        custom_id="honeypot_allow_persistent"  # ID √öNICO Y PERSISTENTE
    )
    async def allow_user(self, interaction: discord.Interaction, button: discord.ui.Button):
        """Permitir al usuario (falso positivo)"""
        
        try:
            embed = discord.Embed(
                title="‚úÖ USUARIO PERMITIDO",
                description=f"**Decisi√≥n:** Usuario <@{self.user_id}> marcado como staff verificado.",
                color=0x00FF00
            )
            embed.set_footer(text=f"Decidido por: {interaction.user}")
            
            # DESACTIVAR BOTONES
            for item in self.children:
                item.disabled = True
            
            await interaction.response.edit_message(embed=embed, view=self)
            
        except Exception as e:
            print(f"ERROR en allow_user: {e}")  # ‚Üê CORREGIDO: logger por print
            try:
                await interaction.response.send_message("‚úÖ Usuario permitido.", ephemeral=True)
            except:
                pass
    
    @discord.ui.button(
        label="üî¥ EJECUTAR (BAN)",
        style=discord.ButtonStyle.red,
        custom_id="honeypot_ban_persistent"  # ID √öNICO Y PERSISTENTE
    )
    async def ban_user(self, interaction: discord.Interaction, button: discord.ui.Button):
        """Banear al usuario (raider confirmado)"""
        
        try:
            # OBTENER USUARIO
            guild = bot.get_guild(self.guild_id)
            user = guild.get_member(self.user_id) if guild else None
            
            if not user:
                embed = discord.Embed(
                    title="‚ùå ERROR",
                    description="Usuario ya no est√° en el servidor.",
                    color=0x808080
                )
                embed.set_footer(text=f"Verificado por: {interaction.user}")
                
                # DESACTIVAR BOTONES
                for item in self.children:
                    item.disabled = True
                
                await interaction.response.edit_message(embed=embed, view=self)
                return
            
            # VERIFICAR PERMISOS DEL BOT
            if not guild.me.guild_permissions.ban_members:
                await interaction.response.send_message(
                    "‚ùå **No tengo permisos para banear usuarios**\n"
                    "üîß Necesito el permiso `Ban Members`",
                    ephemeral=True
                )
                return
            
            # VERIFICAR SI EL TARGET TIENE ROL M√ÅS ALTO
            if user.top_role >= guild.me.top_role:
                await interaction.response.send_message(
                    "‚ùå **No puedo banear a este usuario**\n"
                    "‚ö° Su rol es igual o superior al m√≠o",
                    ephemeral=True
                )
                return
            
            # BANEAR USUARIO
            await user.ban(reason="HONEYPOT: Acceso no autorizado a sistema de trampa")
            
            # AGREGAR A LISTA NEGRA GLOBAL
            lista_negra_global.add(self.user_id)
            
            embed = discord.Embed(
                title="üî® USUARIO BANEADO",
                description=f"**Decisi√≥n:** Usuario <@{self.user_id}> baneado por actividad sospechosa.\n"
                          f"**Motivo:** Acceso no autorizado detectado por honeypot.\n"
                          f"**Estado:** Agregado a lista negra global.",
                color=0xFF0000
            )
            embed.set_footer(text=f"Ejecutado por: {interaction.user}")
            
            # MENSAJE MEDIEVAL ADICIONAL EN EL EMBED
            embed.add_field(
                name="‚öîÔ∏è Resultado",
                value="Un esp√≠a enemigo ha sido descubierto y expulsado del reino por nuestras trampas.",
                inline=False
            )
            
            # DESACTIVAR BOTONES
            for item in self.children:
                item.disabled = True
            
            await interaction.response.edit_message(embed=embed, view=self)
            
        except discord.Forbidden:
            await interaction.response.send_message(
                "**Darme ordenes ami, acaso estas borracho?**",
                ephemeral=True
            )
            
        except discord.errors.NotFound:
            # SI LA INTERACCI√ìN YA EXPIR√ì, INTENTAR RESPUESTA SIMPLE
            try:
                await interaction.response.send_message("üî® **Usuario procesado.**", ephemeral=True)
            except:
                # SI TAMBI√âN FALLA, IGNORAR
                print("No se pudo responder a la interacci√≥n expirada")
                pass
                
        except Exception as e:
            print(f"ERROR en ban_user: {e}")  # ‚Üê CORREGIDO: logger por print
            try:
                await interaction.response.send_message("‚ùå Error al procesar.", ephemeral=True)
            except:
                print("No se pudo enviar mensaje de error")  # ‚Üê CORREGIDO: logger por print
                pass





# ==========================================================================
#‚ô£ SISTEMA - JERARQUIAS 
# ==========================================================================
#  ‚ô£‚úÖger user level
def get_user_level(user_id, guild_id):  
    """
    Retorna el nivel del usuario:
    - "SUPERIOR" = Whitelist hardcodeada (acceso total)
    - "RECLUTA" = Whitelist por comando (acceso limitado)
    - "VIP" = Whitelist especial (solo frases)
    - "CIUDADANO" = Sin whitelist (sin acceso)
    """
    
    # 1. VERIFICAR SUPERIORES PRIMERO (m√°xima prioridad)
    whitelist_hardcoded = [744653546435379243, 461049946682949632]
    if user_id in whitelist_hardcoded:
        return "SUPERIOR"
    
    # 2. VERIFICAR VIP DESPU√âS (j√≥venes traviesos)
    if 'WHITELIST_VIP' in globals() and user_id in WHITELIST_VIP:
        return "VIP"
    
    # 3. VERIFICAR RECLUTAS (base de datos) - SIN ERRORES
    try:
        conn = sqlite3.connect("bot_config.db")
        cursor = conn.execute("SELECT config FROM guild_config WHERE guild_id = ?", (guild_id,))
        row = cursor.fetchone()
        conn.close()
        
        if row:
            config = json.loads(row[0])
            whitelist_db = config.get("whitelist", [])
            if user_id in whitelist_db:
                return "RECLUTA"
    except:
        pass  # Ignorar errores de BD
    
    # 4. DEFAULT: CIUDADANO
    return "CIUDADANO"

#  ‚ô£‚úÖget ia personality 
def get_ai_personality(user_id, guild_id):
    """Retorna la personalidad de IA seg√∫n el nivel del usuario"""
    user_level = get_user_level(user_id, guild_id)
    
    if user_level == "SUPERIOR":
        return {
            "prompt": "Eres un veterano experimentado hablando con tu comandante superior. Responde con m√°ximo respeto usando 'mi se√±or', 'comandante', 'mi general'. Tono formal y militar de subordinado a superior.",
            "prefijo": "**Mi se√±or**, ",
            "estilo": "respetuoso_formal"
        }
    elif user_level == "RECLUTA":
        return {
            "prompt": "Eres un soldado veterano hablando con un compa√±ero recluta. Responde con camarader√≠a usando 'compa√±ero', 'hermano de armas', 'soldado'. Tono amistoso pero profesional entre iguales.",
            "prefijo": "**Compa√±ero**, ",
            "estilo": "camaraderia_militar"
        }
    elif user_level == "VIP":
        return {
            "prompt": "Eres un veterano divertido hablando con un joven noble travieso. Responde con tono amigable y juguet√≥n usando 'jovencito', 'peque√±o noble', 'travieso'. S√© divertido pero respetuoso.",
            "prefijo": "**Jovencito**, ",
            "estilo": "amigable_jugueton"
        }
    else:  # CIUDADANO
        return {
            "prompt": "Eres un guardia profesional hablando con un ciudadano com√∫n. Responde cort√©smente pero con distancia usando 'ciudadano', 'forastero'. Tono formal pero no tan reverente.",
            "prefijo": "**Ciudadano**, ",
            "estilo": "cortes_distante"
        }

# Lista de comandos que reclutas pueden usar (LIMITADOS)
COMANDOS_RECLUTAS = ["info", "avatar", "status", "ejecutar", "menu"]

#  :clubs::white_check_mark:puede usar comando
def puede_usar_comando(user_level, comando_nombre):
    """Verifica si el usuario puede usar el comando"""
    if user_level == "SUPERIOR":
        return True  # Superiores usan todo
    elif user_level == "RECLUTA":
        return comando_nombre in COMANDOS_RECLUTAS
    else:
        return False  # VIP y CIUDADANOS no usan comandos
        
#  :clubs::white_check_mark:es recluta
def es_recluta(user_id):
    """Verificar si un usuario es recluta (agregado por comando, no hardcoded)"""
    whitelist_hardcoded = [744653546435379243, 461049946682949632]
    return user_id not in whitelist_hardcoded and user_id in whitelist_added_users

#  :clubs::white_check_mark:obtener frase rechazo
def obtener_frase_rechazo():
    """Retorna una frase √©pica aleatoria para rechazar comando"""
    return random.choice(FRASES_RECHAZO_RECLUTA)
    
#  :clubs::white_check_mark:enviar rechazo recluta
async def enviar_rechazo_recluta(ctx):
    """Enviar mensaje de rechazo a reclutas y borrarlo despu√©s de 20 segundos"""
    mensaje = await ctx.send(obtener_frase_rechazo())
    await asyncio.sleep(20)
    try:
        await mensaje.delete()
    except:
        pass



# ===================================================================
#‚ô£ EVENTOS
# ===================================================================

#  ‚ô£‚úÖon ready ARREGLADO
@bot.event
async def on_ready():
    print("üîµ ON_READY 4 EJECUTADO")
    print(f'{bot.user} se ha conectado a Discord!')
    
    # Inicializar base de datos
    await db_manager.init_db()
    print("‚úÖ Base de datos inicializada")

    # Crear tablas RPG
    await db_manager.create_rpg_tables()
    print("üéÆ Tablas RPG creadas exitosamente")
    
    # ‚ô£‚úÖ TABLAS ADICIONALES
    await crear_tabla_mascotas()
    await crear_tabla_inventario_pociones()
    print("üéÆ Tablas adicionales verificadas/creadas")
    
    # ‚úÖ VERIFICAR CALABOZOS AL REINICIAR
    await verificar_calabozos_al_reiniciar()

    # ‚úÖ DEJA SOLO ESTE:
    if not cleanup_task.is_running():
        cleanup_task.start()
    if not analizar_prediccion_raids.is_running():
        analizar_prediccion_raids.start()
    print("‚úÖ Tareas programadas iniciadas correctamente")

    # Agregar vistas persistentes
    bot.add_view(HoneypotView())
    bot.add_view(HoneypotDecisionView())  # SIN PAR√ÅMETROS para persistencia
    print("‚úÖ Honeypot views agregadas correctamente")

    # Sincronizar contadores para todos los servidores
    for guild in bot.guilds:
        await sincronizar_contadores(guild)
    
    # Iniciar tareas programadas
    if not limpiar_datos_temporales.is_running():
        limpiar_datos_temporales.start()
    
    if not verificar_timeouts_expirados.is_running():
        verificar_timeouts_expirados.start()
    
    if not predecir_raids.is_running():
        predecir_raids.start()
    
    if not resetear_contadores_medianoche.is_running():
        resetear_contadores_medianoche.start()

    # ‚Üê AGREGAR LOGS AQU√ç:
    if not revisar_calabozos.is_running():
        revisar_calabozos.start()
        print("‚úÖ LOOP CALABOZOS INICIADO")  # ‚Üê NUEVO
    else:
        print("‚ö†Ô∏è LOOP CALABOZOS YA CORRIENDO")  # ‚Üê NUEVO
    
    print(f"üõ°Ô∏è {bot.user} est√° listo para proteger {len(bot.guilds)} servidores")
    print(f"üìä Sanciones iniciales: {sanciones_hoy}")

    # Iniciar task de aventuras
    if not procesar_aventuras.is_running():
        procesar_aventuras.start()
        print("üó°Ô∏è Sistema de aventuras iniciado")

#  ‚ô£‚úÖon message
@bot.event
async def on_message(message):
    """Procesar mensajes del servidor"""
    
    # ==================== VALIDACIONES B√ÅSICAS ====================
    # Ignorar bots
    if message.author.bot:
        return
    
    # Verificar si hay guild
    guild_id = message.guild.id if message.guild else None
    user_id = message.author.id
    
    if not guild_id:
        await bot.process_commands(message)
        return
    
    # Obtener configuraci√≥n
    config = await db_manager.get_config(guild_id)
    
    # ==================== üóëÔ∏è BORRADO AUTOM√ÅTICO DE COMANDOS ====================
    if message.content.startswith('!'):
        # ‚úÖ BORRAR DESPU√âS, NO ANTES DE PROCESAR
        asyncio.create_task(delete_user_command_delayed(message))
    
    # ==================== üí¨ PROTECCI√ìN ANTI-SPAM (CORREGIDO) ====================
    ahora = datetime.now()
    
    # Inicializar tracking si no existe
    if guild_id not in spam_tracking:
        spam_tracking[guild_id] = {}
    if user_id not in spam_tracking[guild_id]:
        spam_tracking[guild_id][user_id] = []
    
    # Agregar timestamp del mensaje
    spam_tracking[guild_id][user_id].append(ahora)
    
    # Limpiar mensajes antiguos (√∫ltimos 10 segundos)
    spam_tracking[guild_id][user_id] = [
        timestamp for timestamp in spam_tracking[guild_id][user_id]
        if (ahora - timestamp).total_seconds() <= 10
    ]
    
    # DETECTAR SPAM (5+ mensajes en 10 segundos)
    if len(spam_tracking[guild_id][user_id]) >= 5:
        
        # ‚úÖ SOLO SUPERIORES SON INMUNES AL SPAM
        user_level = get_user_level(user_id, guild_id)
        if user_level != "SUPERIOR":
            
            # Inicializar infracciones si no existe
            if guild_id not in infracciones_spam:
                infracciones_spam[guild_id] = {}
            if user_id not in infracciones_spam[guild_id]:
                infracciones_spam[guild_id][user_id] = {
                    'count': 0,
                    'ultimo_castigo': None
                }
            
            # Incrementar infracciones
            infracciones_spam[guild_id][user_id]['count'] += 1
            count = infracciones_spam[guild_id][user_id]['count']
            
            try:
                # APLICAR TIMEOUT USANDO TU FUNCI√ìN EXISTENTE
                await aplicar_timeout_spam(message.author, count)
                
                # ELIMINAR MENSAJES DE SPAM - ‚úÖ ARREGLADO
                try:
                    async for msg in message.channel.history(limit=20):
                        if msg.author.id == user_id and hasattr(msg.created_at, 'timestamp') and (ahora.timestamp() - msg.created_at.timestamp()) <= 30:
                            await msg.delete()
                except:
                    pass
                
                # REGISTRAR CASTIGO
                infracciones_spam[guild_id][user_id]['ultimo_castigo'] = ahora
                
                # Limpiar tracking despu√©s del castigo
                spam_tracking[guild_id][user_id] = []
                
                # Incrementar contador diario
                incrementar_sancion("timeouts")
                
                return  # Salir sin procesar m√°s
                
            except Exception as e:
                print(f"‚ùå Error aplicando castigo por spam: {e}")
    # ==================== FIN PROTECCI√ìN ANTI-SPAM ====================
        
    # ==================== üõ°Ô∏è PROTECCI√ìN ANTI-MENCIONES ====================
    if config.get("anti_mencion", False):
        if "@everyone" in message.content or "@here" in message.content:
            # Verificar si el usuario est√° autorizado
            whitelist = config.get("whitelist", [])
            if user_id not in whitelist:
                try:
                    await message.delete()
                    await aplicar_sancion(message.author, "Uso no autorizado de @everyone/@here")
                    incrementar_sancion("bans" if config.get("sancion", "ban") == "ban" else "kicks")
                    
                    await enviar_log(message.guild,
                                   f"üì¢ **MENCI√ìN MASIVA BLOQUEADA**\n**Usuario:** {message.author.mention}\n**Canal:** {message.channel.mention}\n**Acci√≥n:** Mensaje eliminado y usuario sancionado",
                                   "üõ°Ô∏è Protecci√≥n Anti-Menciones",
                                   discord.Color.red())
                except:
                    pass
                return  # ‚úÖ MOVER EL RETURN AQU√ç (solo si es sancionado)

    # ==================== ü§ñ IA CONVERSACIONAL ====================
    # Verificar si el bot fue mencionado
    if bot.user.mentioned_in(message) and not message.mention_everyone:
        try:
            # Obtener nivel de usuario
            user_level = get_user_level(user_id, guild_id)
            
            # Determinar personalidad
            if user_level == "SUPERIOR":
                es_whitelist_normal = True
                es_vip = False
            elif user_level == "RECLUTA":
                es_whitelist_normal = True
                es_vip = False
            elif user_level == "VIP":
                es_whitelist_normal = False
                es_vip = True
            else:  # CIUDADANO
                es_whitelist_normal = False
                es_vip = False
            
            # Limpiar el mensaje (quitar menci√≥n)
            contenido_limpio = message.content.replace(f'<@{bot.user.id}>', '').strip()
            
            # Detectar problemas en el mensaje
            problema_detectado = detectar_palabras_problema(contenido_limpio)
            tipo_respuesta = detectar_tipo_mensaje(contenido_limpio)
            
            # Generar personalidad para Groq
            personalidad = await generar_personalidad_groq(es_whitelist_normal, es_vip, problema_detectado, tipo_respuesta)
            
            # Intentar usar Groq
            respuesta_ia = None
            if groq_client:
                try:
                    respuesta_ia = await chat_groq_medieval(contenido_limpio, personalidad)
                except Exception as e:
                    logger.error(f"Error en Groq: {e}")
            
            # Usar fallback si Groq falla
            if not respuesta_ia:
                tipo_usuario = "whitelist_vip" if es_vip else ("whitelist_normal" if es_whitelist_normal else "ciudadano")
                respuesta_ia = generar_respuesta_fallback(tipo_usuario, problema_detectado, tipo_respuesta)
            
            # Enviar respuesta
            await message.reply(respuesta_ia, delete_after=120)
            
        except Exception as e:
            logger.error(f"Error en IA conversacional: {e}")
            # Respuesta de emergencia
            await message.reply("üè∞ Algo no va bien en el castillo... dame un momento.", delete_after=60)
    
    # ==================== üí¨ PROCESAR COMANDOS ====================
    await bot.process_commands(message)







@bot.command(name='debug_raid_test')
async def debug_raid_test(ctx):
    """Test con debug completo para raid"""
    user_level = get_user_level(ctx.author.id, ctx.guild.id)
    if user_level != "SUPERIOR":
        await ctx.send("**Deja de querer jugar con cosas que no entiendes.**",delete_after=10)
        return
    
    config = await db_manager.get_config(ctx.guild.id)
    
    # INFO DEL BOT
    bot_perms = ctx.guild.me.guild_permissions
    
    # INFO DE CANALES
    canales_seguros = config.get('canales_seguros', [])
    canales_texto = [c for c in ctx.guild.channels if isinstance(c, discord.TextChannel)]
    
    await ctx.send(f"üîç **DEBUG RAID SYSTEM:**\n\n"
                   f"**BOT PERMISOS:**\n"
                   f"‚Ä¢ Manage Channels: {bot_perms.manage_channels}\n"
                   f"‚Ä¢ Manage Roles: {bot_perms.manage_roles}\n"
                   f"‚Ä¢ Manage Guild: {bot_perms.manage_guild}\n\n"
                   f"**CANALES:**\n"
                   f"‚Ä¢ Total canales: {len(ctx.guild.channels)}\n"
                   f"‚Ä¢ Canales de texto: {len(canales_texto)}\n"
                   f"‚Ä¢ Canales seguros: {len(canales_seguros)}\n"
                   f"‚Ä¢ Lista seguros: {canales_seguros}\n\n"
                   f"**RAID MODE:**\n"
                   f"‚Ä¢ Activo: {config.get('raid_mode', False)}")


#  ‚ô£‚úÖraid_test
@bot.command(name='test_raid_auto')
async def test_raid_auto(ctx):
    """Comando para simular raid y probar activaci√≥n autom√°tica"""
    
    # Verificar permisos usando TU sistema
    user_level = get_user_level(ctx.author.id, ctx.guild.id)
    if user_level != "SUPERIOR":
        await ctx.send("**No veo que lleves una armadura para darme esta orden**", delete_after=10)
        return
    
    # ‚úÖ VERIFICAR SI LA DETECCI√ìN AUTOM√ÅTICA EST√Å ACTIVADA
    config = await db_manager.get_config(ctx.guild.id)
    deteccion_activa = config.get("raid_mode", False)
    
    if not deteccion_activa:
        await ctx.send("‚ùå **DETECCI√ìN AUTOM√ÅTICA DESACTIVADA**\n"
                      "**Activa la detecci√≥n desde `!panel` primero**\n"
                      "üü¢ El bot√≥n debe estar en verde para que funcione", delete_after=30)
        return
    
    guild_id = ctx.guild.id
    ahora = datetime.now().timestamp()
    
    try:
        await ctx.send("üß™ **INICIANDO SIMULACI√ìN DE RAID...**\n"
                      "‚úÖ **Detecci√≥n autom√°tica ACTIVA** - Procediendo...", delete_after=30)
        
        # Inicializar registro si no existe
        if guild_id not in registro_joins:
            registro_joins[guild_id] = []
        
        # SIMULAR 10 USUARIOS UNI√âNDOSE EN 4 SEGUNDOS
        for i in range(10):
            timestamp_simulado = ahora - (4 - (i * 0.4))  # Distribuir en 4 segundos
            registro_joins[guild_id].append(timestamp_simulado)
        
        await ctx.send(f"‚úÖ **Simulados 10 joins en 4 segundos**\n"
                      f"‚è≥ **Simulando usuario #11 para activar detecci√≥n...**", delete_after=30)
        
        await asyncio.sleep(2)  # Pausa dram√°tica
        
        # SIMULAR EL JOIN QUE ACTIVA EL SISTEMA
        registro_joins[guild_id].append(ahora)
        
        # VERIFICAR CU√ÅNTOS JOINS RECIENTES HAY
        joins_recientes = [
            timestamp for timestamp in registro_joins[guild_id]
            if ahora - timestamp <= 5
        ]
        
        await ctx.send(f"üö® **DETECCI√ìN:** {len(joins_recientes)} joins en 5 segundos", delete_after=30)
        
        # VERIFICAR SI ACTIVAR√çA RAID MODE
        if len(joins_recientes) >= 10:
            # Verificar si ya est√° en modo raid
            if config.get("raid_mode_activo", False):  # Usar diferente variable para raid activo
                await ctx.send("‚ö†Ô∏è **RAID MODE YA EST√Å ACTIVO**\n"
                              "Usa `!raid_off` primero para probar", delete_after=30)
                return
            
            await ctx.send("üî• **¬°THRESHOLD ALCANZADO!**\n"
                          "**¬øActivar raid mode autom√°tico real?**\n"
                          "Responde `SI` en 10 segundos para continuar", delete_after=30)
            
            def check(m):
                return (m.author == ctx.author and 
                       m.channel == ctx.channel and 
                       m.content.upper() in ['SI', 'S√ç', 'YES'])
            
            try:
                msg = await bot.wait_for('message', timeout=10.0, check=check)
                
                if msg:
                    await ctx.send("üöÄ **ACTIVANDO RAID MODE AUTOM√ÅTICO...**", delete_after=30)
                    
                    # CREAR UN MIEMBRO FALSO PARA LA FUNCI√ìN
                    fake_member = ctx.author  # Usar el autor como "√∫ltimo usuario"
                    
                    # ===== APLICAR TODA LA L√ìGICA DE RAID AUTOM√ÅTICO =====
                    try:
                        # 1. OBTENER CANALES SEGUROS
                        canales_seguros = config.get('canales_seguros', [])
                        canales_cerrados = 0
                        
                        # 2. CERRAR CANALES
                        for canal in ctx.guild.channels:
                            if canal.id in canales_seguros:
                                continue
                                
                            try:
                                overwrite = discord.PermissionOverwrite()
                                overwrite.send_messages = False
                                overwrite.connect = False
                                overwrite.create_instant_invite = False
                                
                                await canal.set_permissions(ctx.guild.default_role, overwrite=overwrite)
                                canales_cerrados += 1
                                
                            except:
                                pass
                        
                        # 3. BLOQUEAR INVITACIONES
                        try:
                            role_everyone = ctx.guild.default_role
                            perms = role_everyone.permissions
                            config['invite_permission_backup'] = perms.create_instant_invite
                            perms.create_instant_invite = False
                            await role_everyone.edit(permissions=perms)
                        except:
                            pass
                        
                        # 4. CAMBIAR VERIFICACI√ìN
                        try:
                            config['verification_backup'] = ctx.guild.verification_level.value
                            await ctx.guild.edit(verification_level=discord.VerificationLevel.highest)
                        except:
                            pass
                        
                        # 5. GUARDAR CONFIG
                        config['raid_mode_activo'] = False  # ‚Üê Cambi√© el nombre de la variable
                        config['raid_activado_por'] = f'TEST-AUTO ({ctx.author.name})'
                        config['raid_activado_en'] = datetime.now().isoformat()
                        config['raid_auto_trigger'] = f"SIMULACI√ìN - {len(joins_recientes)} joins"
                        
                        # Activar protecciones
                        config["eliminar_canales"] = True
                        config["crear_roles"] = True
                        config["eliminar_roles"] = True
                        config["editar_canales"] = True
                        config["editar_roles"] = True
                        config["agregar_bots"] = True
                        config["anti_mencion"] = True
                        config["creacion_canales"] = True
                        config["proteccion_spam"] = True
                        
                        await db_manager.save_config(guild_id, config)
                        
                        # 6. MENSAJE DE √âXITO
                        await ctx.send(f"‚úÖ **RAID MODE ACTIVADO POR TEST**\n"
                                      f"üîí **Canales cerrados:** {canales_cerrados}\n"
                                      f"üõ°Ô∏è **Todas las protecciones:** Activadas\n"
                                      f"‚öîÔ∏è **Verificaci√≥n:** M√°xima\n"
                                      f"üö´ **Invitaciones:** Bloqueadas\n\n"
                                      f"**Usa `!raid_off` para desactivar**", delete_after=30)
                        
                    except Exception as e:
                        await ctx.send(f"‚ùå **Error activando raid mode:** {e}", delete_after=30)
                        
            except asyncio.TimeoutError:
                await ctx.send("‚è∞ **Tiempo agotado - Test cancelado**", delete_after=30)
                
        else:
            await ctx.send(f"‚ùå **Error:** Solo {len(joins_recientes)} joins detectados\n"
                          "Se necesitan 10+ para activar", delete_after=30)
            
    except Exception as e:
        await ctx.send(f"‚ùå **Error en test:** {e}", delete_after=30)
        print(f"Error en test_raid_auto: {e}")


#  ‚ô£‚úÖon member join
@bot.event
async def on_member_join(member):
    """Evento cuando un usuario se une al servidor"""
    guild_id = member.guild.id
    user_id = member.id
    ahora = datetime.now().timestamp()
    
    # Inicializar registro para el servidor si no existe
    if guild_id not in registro_joins:
        registro_joins[guild_id] = []
    
    # Agregar timestamp del join
    registro_joins[guild_id].append(ahora)
    
    # Limpiar registros antiguos (m√°s de 10 minutos)
    registro_joins[guild_id] = [
        timestamp for timestamp in registro_joins[guild_id] 
        if ahora - timestamp <= 600
    ]
    
    # Obtener configuraci√≥n
    config = await db_manager.get_config(guild_id)
    
    # ==================== üö® DETECCI√ìN AUTOM√ÅTICA DE RAID ====================
    # Contar joins en los √∫ltimos 5 segundos
    joins_recientes = [
        timestamp for timestamp in registro_joins[guild_id]
        if ahora - timestamp <= 5  # √öltimos 5 segundos
    ]
    
    # Solo detectar raids si la detecci√≥n est√° ACTIVADA desde el panel
    if len(joins_recientes) >= 10 and config.get("raid_mode", False):
        # Solo activar si no est√° ya en modo raid activo
        if not config.get("raid_mode_activo", False):
            try:
                print(f"üö® RAID AUTOM√ÅTICO DETECTADO - {len(joins_recientes)} joins en 5 segundos")
                
                # ========== APLICAR TODA LA L√ìGICA DE !raid_on ==========
                
                # 1. OBTENER CANALES SEGUROS
                canales_seguros = config.get('canales_seguros', [])
                canales_cerrados = 0
                errores = 0
                
                # 2. CERRAR TODOS LOS CANALES (excepto seguros)
                for canal in member.guild.channels:
                    if canal.id in canales_seguros:
                        continue
                        
                    try:
                        overwrite = discord.PermissionOverwrite()
                        overwrite.send_messages = False
                        overwrite.connect = False
                        overwrite.create_instant_invite = False
                        
                        await canal.set_permissions(member.guild.default_role, overwrite=overwrite)
                        canales_cerrados += 1
                        
                    except Exception as e:
                        print(f"‚ùå Error cerrando canal {canal.name}: {e}")
                        errores += 1
                
                # 3. BLOQUEAR CREACI√ìN DE INVITACIONES
                try:
                    role_everyone = member.guild.default_role
                    perms = role_everyone.permissions
                    config['invite_permission_backup'] = perms.create_instant_invite
                    perms.create_instant_invite = False
                    await role_everyone.edit(permissions=perms)
                except Exception as e:
                    print(f"‚ùå Error bloqueando invitaciones: {e}")
                    errores += 1
                
                # 4. CAMBIAR VERIFICACI√ìN A HIGHEST
                try:
                    config['verification_backup'] = member.guild.verification_level.value
                    await member.guild.edit(verification_level=discord.VerificationLevel.highest)
                except Exception as e:
                    print(f"‚ùå Error cambiando verificaci√≥n: {e}")
                    errores += 1
                
                # 5. GUARDAR CONFIGURACI√ìN COMPLETA
                config['raid_mode_activo'] = False  # ‚Üê Cambi√© a raid_mode_activo
                config['raid_activado_por'] = 'AUTOM√ÅTICO'
                config['raid_activado_en'] = datetime.now().isoformat()
                config['raid_auto_trigger'] = f"{len(joins_recientes)} joins en 5 segundos"
                
                # ACTIVAR TODAS LAS PROTECCIONES
                config["eliminar_canales"] = True
                config["crear_roles"] = True
                config["eliminar_roles"] = True
                config["editar_canales"] = True
                config["editar_roles"] = True
                config["agregar_bots"] = True
                config["anti_mencion"] = True
                config["creacion_canales"] = True
                config["proteccion_spam"] = True
                
                await db_manager.save_config(guild_id, config)
                
                # 6. EMBED √âPICO AUTOM√ÅTICO
                try:
                    gifs_raid = [
                        "https://i.gifer.com/UrIP.gif",
                        "https://i.gifer.com/YKEt.gif", 
                        "https://i.gifer.com/C3A.gif",
                        "https://media.giphy.com/media/l0HlTy9x8FZo0XO1i/giphy.gif"
                    ]
                    
                    embed = discord.Embed(
                        title="üö® FORTALEZA SELLADA AUTOM√ÅTICAMENTE",
                        description="**¬°RAID DETECTADO - DEFENSAS ACTIVADAS!**\n\n"
                                   f"üîí **{canales_cerrados}** salones cerrados\n"
                                   f"üõ°Ô∏è **{len(canales_seguros)}** torres resguardadas\n"
                                   f"üö´ **Invitaciones deshabilitadas**\n"
                                   f"‚öîÔ∏è **Verificaci√≥n m√°xima activada**\n"
                                   f"üö® **Trigger:** {len(joins_recientes)} usuarios en 5 segundos\n\n"
                                   "**Protecci√≥n autom√°tica activada por el sistema.**",
                        color=0xFF0000
                    )
                    
                    embed.add_field(
                        name="üõ°Ô∏è **ESTADO DEL REINO**",
                        value="üî¥ **SELLADO AUTOM√ÅTICAMENTE**\nü§ñ Sistema de defensa activo\nüö´ Acceso restringido",
                        inline=False
                    )
                    
                    embed.add_field(
                        name="‚öîÔ∏è **DETALLES DEL RAID**",
                        value=f"üë• **Usuarios detectados:** {len(joins_recientes)}\n"
                              f"‚è±Ô∏è **Tiempo:** 5 segundos\n"
                              f"üéØ **√öltimo usuario:** {member.mention}",
                        inline=False
                    )
                    
                    embed.set_footer(text=f"ü§ñ Activado autom√°ticamente ‚Ä¢ {datetime.now().strftime('%H:%M')}")
                    embed.set_image(url=random.choice(gifs_raid))
                    
                    await enviar_log(member.guild, embed=embed)
                    
                except Exception as embed_error:
                    print(f"‚ùå Error en embed autom√°tico: {embed_error}")
                    # Fallback sin embed
                    await enviar_log(member.guild,
                                   f"üö® **MODO RAID ACTIVADO AUTOM√ÅTICAMENTE**\n"
                                   f"**Causa:** {len(joins_recientes)} usuarios en 5 segundos\n"
                                   f"**√öltimo usuario:** {member.mention}\n"
                                   f"**Canales cerrados:** {canales_cerrados}\n"
                                   f"**Medidas aplicadas:** Lockdown completo",
                                   "ü§ñ Activaci√≥n Autom√°tica")
                
                # ‚ùå NO BANEAR - Solo cerrar canales y bloquear invitaciones
                # Las invitaciones est√°n deshabilitadas, no deber√≠an entrar m√°s usuarios
                    
                return  # Salir despu√©s de activar raid mode completo
                
            except Exception as e:
                print(f"‚ùå Error activando modo raid autom√°tico: {e}")
                # Fallback b√°sico
                try:
                    config["raid_mode_activo"] = True
                    await db_manager.save_config(guild_id, config)
                except:
                    pass
    # ==================== FIN DETECCI√ìN AUTOM√ÅTICA ====================
    
    # ==================== ü§ñ PROTECCI√ìN ANTI-BOTS ====================
    if member.bot and config.get("agregar_bots", False):
        try:
            # BANEAR EL BOT INMEDIATAMENTE
            await member.ban(reason="BOT NO AUTORIZADO - Protecci√≥n autom√°tica")
            
            # BUSCAR QUI√âN AGREG√ì EL BOT
            await asyncio.sleep(1)  # Esperar para audit logs
            async for entry in member.guild.audit_logs(action=discord.AuditLogAction.bot_add, limit=1):
                if entry.target.id == member.id:
                    agresor = entry.user
                    
                    # BANEAR AL QUE AGREG√ì EL BOT
                    try:
                        await agresor.ban(reason="Agreg√≥ bot no autorizado al reino")
                        await enviar_log(member.guild,
                                       f"ü§ñ **PROTECCI√ìN ANTI-BOTS**\n"
                                       f"**Bot baneado:** {member.mention}\n"
                                       f"**Agregado por:** {agresor.mention}\n"
                                       f"**Acci√≥n:** Ambos baneados autom√°ticamente",
                                       "üö´ Protecci√≥n de Bots")
                    except Exception as e:
                        # Si no puede banear al agresor, solo reportar
                        await enviar_log(member.guild,
                                       f"ü§ñ **PROTECCI√ìN ANTI-BOTS**\n"
                                       f"**Bot baneado:** {member.mention}\n"
                                       f"**Agregado por:** {agresor.mention}\n"
                                       f"**Error:** No se pudo banear al agresor\n"
                                       f"**Raz√≥n:** {e}",
                                       "‚ö†Ô∏è Protecci√≥n Parcial")
                    break
            else:
                # Si no encuentra qui√©n lo agreg√≥
                await enviar_log(member.guild,
                               f"ü§ñ **BOT NO AUTORIZADO BANEADO**\n"
                               f"**Bot:** {member.mention}\n"
                               f"**Acci√≥n:** Bot eliminado autom√°ticamente",
                               "üö´ Protecci√≥n de Bots")
            
            return  # Salir del evento despu√©s de manejar el bot
            
        except Exception as e:
            print(f"Error en protecci√≥n anti-bots: {e}")
    # ==================== FIN PROTECCI√ìN ANTI-BOTS ====================
    
    # VERIFICAR LISTA NEGRA GLOBAL
    if user_id in lista_negra_global:
        try:
            await member.ban(reason="Usuario en lista negra global")
            await enviar_log(member.guild,
                           f"üö´ **LISTA NEGRA GLOBAL**\n**Usuario:** {member.mention}\n**Acci√≥n:** Baneado autom√°ticamente",
                           "üåç Protecci√≥n Global")
            return
        except:
            pass
    
    # ‚ùå ELIMIN√â LA SECCI√ìN DE BAN DURANTE MODO RAID
    # Si est√° en modo raid activo, simplemente no deber√≠a poder entrar por las invitaciones deshabilitadas
    
    # AN√ÅLISIS DE CUENTA Y PREDICCI√ìN
    analisis_cuenta = await analizar_cuenta_nueva(member)
    evaluacion_riesgo = await evaluar_riesgo_raid(guild_id, analisis_cuenta)
    
    # ALERTA DE PREDICCI√ìN SI ES NECESARIO
    if evaluacion_riesgo["debe_alertar"]:
        alerta_descripcion = f"üîÆ **PREDICCI√ìN DE RAID**\n**Nivel de Riesgo:** {evaluacion_riesgo['nivel_riesgo']}%\n\n"
        alerta_descripcion += "\n".join([f"‚Ä¢ {alerta}" for alerta in evaluacion_riesgo["alertas"]])
        alerta_descripcion += f"\n\n**Recomendaci√≥n:** {'üö® ACTIVAR MODO RAID' if evaluacion_riesgo['nivel_riesgo'] >= 80 else '‚ö†Ô∏è Monitorear actividad'}"
        
        view = None
        if evaluacion_riesgo['nivel_riesgo'] >= 80:
            # Bot√≥n para activar raid mode autom√°ticamente
            view = RaidPredictionView(guild_id)
        
        await enviar_log(member.guild, alerta_descripcion, "üîÆ Sistema de Predicci√≥n", discord.Color.orange(), view)










#  ‚ô£‚úÖmostrar opcion aventura
async def mostrar_opciones_aventura_interaction(interaction):
    """Mostrar opciones de aventura"""
    # Verificar aventura activa
    tiempo_fin = await verificar_aventura_activa(interaction.guild.id, interaction.user.id)
    if tiempo_fin:
        tiempo_restante = tiempo_fin - datetime.now(timezone.utc)
        horas = int(tiempo_restante.total_seconds() // 3600)
        minutos = int((tiempo_restante.total_seconds() % 3600) // 60)
        
        embed = discord.Embed(
            title="‚è≥ Aventura en Progreso",
            description=f"""
**Tu h√©roe est√° actualmente en una aventura √©pica.**

‚è∞ **Tiempo restante:** {horas}h {minutos}m

*El h√©roe regresar√° con recompensas cuando la aventura termine.*
*¬°Ten paciencia, las mejores recompensas requieren tiempo!*
            """,
            color=0xFFD700
        )
        await interaction.response.edit_message(embed=embed, view=None)
        return

    # Obtener datos del personaje
    async with aiosqlite.connect(db_manager.db_path) as db:
        cursor = await db.execute(
            "SELECT nivel, hp_actual, hp_maximo FROM personajes WHERE guild_id = ? AND user_id = ?",
            (interaction.guild.id, interaction.user.id)
        )
        nivel, hp_actual, hp_maximo = await cursor.fetchone()

    # Verificar HP
    if hp_actual < 30:
        embed = discord.Embed(
            title="üíî H√©roe Gravemente Herido",
            description=f"""
**Tu h√©roe est√° demasiado herido para aventurarse.**

üíñ HP Actual: {hp_actual}/{hp_maximo}

**El h√©roe debe descansar o usar una poci√≥n antes de partir.**

üõå **Descanso Natural:** +20 HP cada 4 horas
üß™ **Posada del Reino:** 50 florines = HP completo
            """,
            color=0xFF0000
        )
        await interaction.response.edit_message(embed=embed, view=None)
        return

    embed = discord.Embed(
        title="üó°Ô∏è Aventuras Disponibles",
        description=f"""
**Elige el tipo de aventura para tu h√©roe:**

üåü Cada aventura dura **2 horas** y otorga recompensas seg√∫n su dificultad.
‚öîÔ∏è **Nivel actual:** {nivel}
üíñ **HP actual:** {hp_actual}/{hp_maximo}

**¬°Elige sabiamente, noble aventurero!**
        """,
        color=0x8B4513
    )

    view = AventuraSeleccionView(interaction.user.id, nivel)
    await interaction.response.edit_message(embed=embed, view=view)

#  ‚ô£‚úÖselecion aventura
class AventuraSeleccionView(discord.ui.View):
    def __init__(self, user_id, nivel):
        super().__init__(timeout=300)
        self.user_id = user_id
        self.nivel = nivel

    @discord.ui.button(label='üü¢ Normal (Lv 1-25)', style=discord.ButtonStyle.green)
    async def normal_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        await self.iniciar_aventura(interaction, 'normal')

    @discord.ui.button(label='üîµ Rara (Lv 26-50)', style=discord.ButtonStyle.primary)
    async def rara_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        if self.nivel < 26:
            await interaction.response.send_message("‚öîÔ∏è Necesitas nivel 26 para aventuras raras.", ephemeral=True)
            return
        await self.iniciar_aventura(interaction, 'rara')

    @discord.ui.button(label='üü£ √âpica (Lv 51-75)', style=discord.ButtonStyle.secondary)
    async def epica_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        if self.nivel < 51:
            await interaction.response.send_message("‚öîÔ∏è Necesitas nivel 51 para aventuras √©picas.", ephemeral=True)
            return
        await self.iniciar_aventura(interaction, 'epica')

    @discord.ui.button(label='üü† Legendaria (Lv 76-100)', style=discord.ButtonStyle.danger)
    async def legendaria_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        if self.nivel < 76:
            await interaction.response.send_message("‚öîÔ∏è Necesitas nivel 76 para aventuras legendarias.", ephemeral=True)
            return
        await self.iniciar_aventura(interaction, 'legendaria')

    @discord.ui.button(label='üîÑ Volver', style=discord.ButtonStyle.grey)
    async def volver_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        if interaction.user.id != self.user_id:
            return
        # Regresar al reino
        await reino_comando(interaction)

    async def iniciar_aventura(self, interaction, tipo_aventura):
        if interaction.user.id != self.user_id:
            await interaction.response.send_message("‚öîÔ∏è Solo el due√±o del personaje puede usar esto.", ephemeral=True)
            return

        # Calcular tiempo de aventura (2 horas)
        tiempo_inicio = datetime.now(timezone.utc)
        tiempo_fin = tiempo_inicio + timedelta(hours=2)

        # Guardar aventura activa
        async with aiosqlite.connect(db_manager.db_path) as db:
            await db.execute(
                "INSERT OR REPLACE INTO aventuras_activas (guild_id, user_id, tipo_aventura, tiempo_inicio, tiempo_fin) VALUES (?, ?, ?, ?, ?)",
                (interaction.guild.id, interaction.user.id, tipo_aventura, tiempo_inicio.isoformat(), tiempo_fin.isoformat())
            )
            await db.commit()

        config = AVENTURAS_CONFIG[tipo_aventura]
        embed = discord.Embed(
            title="üó°Ô∏è ¬°AVENTURA INICIADA!",
            description=f"Tu h√©roe ha partido en una aventura **{tipo_aventura}**.\n\n" +
                       f"‚è∞ Tiempo estimado: **2 horas**\n" +
                       f"üïê Regreso: {tiempo_fin.strftime('%H:%M UTC')}\n\n" +
                       f"*Que los dioses te protejan en tu traves√≠a...*",
            color=0x00FF00
        )
        
        # Auto-borrar despu√©s de 50 segundos
        await interaction.response.edit_message(embed=embed, view=None, delete_after=30)
        




















#  ‚ô£‚úÖred_global (SISTEMA SIMPLIFICADO)
@bot.command()
async def red_global(ctx, accion: str = None, *, usuario: discord.User = None):
    """Sistema unificado de la red global del reino"""
    try:
        await ctx.message.delete()
    except:
        pass
    
    # VERIFICAR PERMISOS CON SISTEMA UNIFICADO
    user_level = get_user_level(ctx.author.id, ctx.guild.id)
    
    # 1. CIUDADANOS NO PUEDEN USAR EL COMANDO
    if user_level == "CIUDADANO":
        await ctx.send("üè∞ **Solo los se√±ores pueden acceder a la red global, plebeyo.**", delete_after=10)
        return
    
    # 2. RECLUTAS TAMPOCO PUEDEN (SON MUY J√ìVENES)
    if user_level == "RECLUTA":
        await ctx.send("‚öîÔ∏è **Te falta mucho para manejar estas √≥rdenes, recluta. Solo los veteranos pueden acceder a la red global.**", delete_after=10)
        return
    
    # 3. VIP TAMPOCO PUEDEN (NO ES SU √ÅREA)
    if user_level == "VIP":
        await ctx.send("üíé **Jovencito noble, la red global no es tu juguete. Deja que los comandantes manejen esto.**", delete_after=10)
        return
    
    # 4. SOLO SUPERIORES PUEDEN
    if user_level != "SUPERIOR":
        await ctx.send("üëë **Solo los comandantes supremos pueden acceder a la red global del reino.**", delete_after=10)
        return
    
    if not accion:
        embed = discord.Embed(
            title="üåç RED GLOBAL DEL REINO",
            description="‚öîÔ∏è **Sistema de protecci√≥n unificado en todos los servidores**",
            color=0x8B0000
        )
        embed.add_field(
            name="üìä Comandos Disponibles",
            value="‚Ä¢ `!red_global stats` - Estad√≠sticas del reino\n"
                  "‚Ä¢ `!red_global blacklist` - Ver lista negra global\n"
                  "‚Ä¢ `!red_global remove @usuario` - Quitar de blacklist\n"
                  "‚Ä¢ `!red_global add @usuario` - Agregar a blacklist\n"
                  "‚Ä¢ `!red_global info @usuario` - Informaci√≥n de usuario",
            inline=False
        )
        embed.set_footer(text="üõ°Ô∏è Red Global del Reino ‚Ä¢ Se auto-elimina en 15s")
        await ctx.send(embed=embed, delete_after=15)
        return
    
    # ESTAD√çSTICAS DEL REINO
    if accion.lower() == "stats":
        embed = discord.Embed(
            title="üìä ESTAD√çSTICAS DEL REINO",
            description="‚öîÔ∏è **Datos reales de la red de protecci√≥n global (en todos los servidores)**",
            color=0x8B0000
        )
        
        # Calcular usuarios reportados √∫nicos
        usuarios_reportados = len(reputacion_global)
        
        # Calcular total de reportes
        reportes_totales = sum(len(data.get('reportes', [])) for data in reputacion_global.values())
        
        embed.add_field(
            name="üìä Estad√≠sticas Generales",
            value=f"‚Ä¢ **{len(bot.guilds)}** servidores conectados\n"
                  f"‚Ä¢ **{usuarios_reportados}** usuarios reportados\n"
                  f"‚Ä¢ **{reportes_totales}** reportes totales",
            inline=False
        )
        
        embed.add_field(
            name="üõ°Ô∏è Estado de Protecci√≥n",
            value=f"‚Ä¢ **{len([g for g in bot.guilds if g.me.guild_permissions.ban_members])}** servidores con permisos de ban\n"
                  f"‚Ä¢ **{len([g for g in bot.guilds if g.me.guild_permissions.kick_members])}** servidores con permisos de kick\n"
                  f"‚Ä¢ **√öltima actualizaci√≥n:** Tiempo real",
            inline=False
        )
        
        embed.set_footer(text="üõ°Ô∏è Red Global del Reino - Datos en tiempo real")
        await ctx.send(embed=embed, delete_after=30)
    
    # VER BLACKLIST GLOBAL
    elif accion.lower() == "blacklist":
        if not lista_negra_global:
            embed = discord.Embed(
                title="‚úÖ REINO EN PAZ",
                description="‚öîÔ∏è **No hay enemigos en la lista negra global**",
                color=0x00FF00
            )
            await ctx.send(embed=embed, delete_after=30)
            return
        
        usuarios_info = []
        for user_id_item in lista_negra_global:
            try:
                user = await bot.fetch_user(user_id_item)
                usuarios_info.append(f"‚Ä¢ **{user.name}#{user.discriminator}** (ID: `{user_id_item}`)")
            except:
                usuarios_info.append(f"‚Ä¢ **Usuario Desconocido** (ID: `{user_id_item}`)")
        
        lista_texto = "\n".join(usuarios_info)
        if len(lista_texto) > 1800:
            lista_texto = "\n".join(usuarios_info[:15]) + f"\n\n*... y {len(usuarios_info) - 15} m√°s enemigos*"
        
        embed = discord.Embed(
            title="üö´ LISTA NEGRA GLOBAL",
            description=f"‚öîÔ∏è **Usuarios baneados en todos los servidores:**\n\n{lista_texto}",
            color=0x8B0000
        )
        embed.set_footer(text=f"Total: {len(lista_negra_global)} usuarios | Aplicado en {len(bot.guilds)} servidores")
        await ctx.send(embed=embed, delete_after=60)
    
    # QUITAR DE BLACKLIST
    elif accion.lower() == "remove":
        if not ctx.author.guild_permissions.administrator:
            embed = discord.Embed(
                title="‚ùå ACCESO DENEGADO",
                description="‚öîÔ∏è **Solo los se√±ores del reino pueden perdonar enemigos**",
                color=0xFF0000
            )
            await ctx.send(embed=embed, delete_after=30)
            return
        
        if not usuario:
            await ctx.send("‚ùå **Menciona al usuario:** `!red_global remove @usuario`", delete_after=30)
            return
        
        if usuario.id in lista_negra_global:
            lista_negra_global.remove(usuario.id)
            embed = discord.Embed(
                title="‚úÖ USUARIO REMOVIDO DE BLACKLIST GLOBAL",
                description=f"‚öîÔ∏è **{usuario.name}#{usuario.discriminator}** removido de todos los servidores\n\n"
                           f"**ID:** `{usuario.id}`\n"
                           f"**Servidores afectados:** {len(bot.guilds)}\n"
                           f"**Removido por:** {ctx.author.mention}",
                color=0x00FF00
            )
            embed.set_footer(text="Usuario puede volver a ingresar a cualquier servidor")
            await ctx.send(embed=embed, delete_after=45)
        else:
            embed = discord.Embed(
                title="‚ùå USUARIO NO ENCONTRADO",
                description=f"‚öîÔ∏è **{usuario.name}#{usuario.discriminator}** no est√° en la blacklist global",
                color=0xFF0000
            )
            await ctx.send(embed=embed, delete_after=30)
    
    # AGREGAR A BLACKLIST
    elif accion.lower() == "add":
        if not ctx.author.guild_permissions.administrator:
            embed = discord.Embed(
                title="‚ùå ACCESO DENEGADO",
                description="‚öîÔ∏è **Solo los se√±ores del reino pueden agregar enemigos**",
                color=0xFF0000
            )
            await ctx.send(embed=embed, delete_after=30)
            return
        
        if not usuario:
            await ctx.send("‚ùå **Menciona al usuario:** `!red_global add @usuario`", delete_after=30)
            return
        
        if usuario.id not in lista_negra_global:
            lista_negra_global.add(usuario.id)
            embed = discord.Embed(
                title="üö´ USUARIO AGREGADO A BLACKLIST GLOBAL",
                description=f"‚öîÔ∏è **{usuario.name}#{usuario.discriminator}** agregado a todos los servidores\n\n"
                           f"**ID:** `{usuario.id}`\n"
                           f"**Servidores afectados:** {len(bot.guilds)}\n"
                           f"**Agregado por:** {ctx.author.mention}",
                color=0xFF0000
            )
            embed.set_footer(text="Usuario ser√° baneado autom√°ticamente al intentar unirse")
            await ctx.send(embed=embed, delete_after=45)
        else:
            embed = discord.Embed(
                title="‚ùå USUARIO YA EXISTE",
                description=f"‚öîÔ∏è **{usuario.name}#{usuario.discriminator}** ya est√° en la blacklist global",
                color=0xFF0000
            )
            await ctx.send(embed=embed, delete_after=30)
    
    # INFORMACI√ìN DE USUARIO
    elif accion.lower() == "info":
        if not usuario:
            await ctx.send("‚ùå **Menciona al usuario:** `!red_global info @usuario`", delete_after=30)
            return
        
        # Obtener datos del usuario
        reputacion = reputacion_global.get(usuario.id, {
            'confianza': 100,
            'reportes': [],
            'servidores_baneado': 0,
            'ultima_actividad_sospechosa': 'N/A',
            'nivel': 'NEUTRO'
        })
        
        embed = discord.Embed(
            title=f"üåç Informaci√≥n Global: {usuario.display_name}",
            description=f"‚öîÔ∏è **Datos del usuario en todos los servidores de la red**",
            color=discord.Color.blue()
        )
        
        embed.add_field(
            name="üìä Reputaci√≥n Global",
            value=f"**Confianza:** {reputacion['confianza']}%\n"
                  f"**Total Reportes:** {len(reputacion['reportes'])}\n"
                  f"**Nivel:** {reputacion['nivel']}",
            inline=True
        )
        
        embed.add_field(
            name="üö´ Estado en la Red",
            value=f"**Blacklist Global:** {'üî¥ S√ç' if usuario.id in lista_negra_global else 'üü¢ NO'}\n"
                  f"**Servidores Baneado:** {reputacion['servidores_baneado']}\n"
                  f"**√öltima Actividad:** {reputacion['ultima_actividad_sospechosa']}",
            inline=True
        )
        
        embed.add_field(
            name="üåç Alcance de la Red",
            value=f"**Servidores Monitoreados:** {len(bot.guilds)}\n"
                  f"**Protecci√≥n Activa:** {'üî¥ Baneado autom√°ticamente' if usuario.id in lista_negra_global else 'üü¢ Acceso permitido'}",
            inline=False
        )
        
        avatar_url = usuario.avatar.url if usuario.avatar else usuario.default_avatar.url
        embed.set_thumbnail(url=avatar_url)
        embed.set_footer(text="üõ°Ô∏è Red Global del Reino - Informaci√≥n Consolidada")
        
        await ctx.send(embed=embed, delete_after=60)
    
    else:
        await ctx.send("‚ùå **Acci√≥n inv√°lida.** Usa `!red_global` para ver comandos", delete_after=30)


#  ‚ô£‚úÖaplicar timeout spam
async def aplicar_timeout_spam(member: discord.Member, infracciones: int):
    """Aplicar timeout progresivo por spam - CORREGIDO"""
    try:
        # EXCLUIR BOTS
        if member.bot:
            return
        
        # Timeouts progresivos: 1min, 30min, 3h (y siempre 3h despu√©s)
        if infracciones == 1:
            timeout_duration = 1800  # 30 minuto
            timeout_label = "30 minuto"
        elif infracciones == 2:
            timeout_duration = 3600  # 1 hora
            timeout_label = "1 hora"
        else:  # infracciones >= 3
            timeout_duration = 10800  # 3 horas (siempre)
            timeout_label = "3 horas"
        
        # ‚úÖ CORRECCI√ìN: usar timedelta directamente
        from datetime import timedelta
        timeout_end = discord.utils.utcnow() + timedelta(seconds=timeout_duration)
        
        # Aplicar el timeout
        await member.timeout(timeout_end, reason=f"Spam detectado (Infracci√≥n #{infracciones})")
        
        # Registrar en muted_users
        if member.guild.id not in muted_users:
            muted_users[member.guild.id] = {}
        muted_users[member.guild.id][member.id] = timeout_end.replace(tzinfo=None)
        
        # ENVIAR LOG
        config = await db_manager.get_config(member.guild.id)
        canal_logs_id = config.get("canal_logs_id")
        
        if canal_logs_id:
            canal = member.guild.get_channel(canal_logs_id)
            if canal:
                embed = discord.Embed(
                    title="‚ö†Ô∏è Timeout por Spam",
                    description=f"**Usuario:** {member.mention} ({member.display_name})\n**Duraci√≥n:** {timeout_label}\n**Infracci√≥n:** #{infracciones}",
                    color=discord.Color.orange(),
                    timestamp=discord.utils.utcnow()
                )
                view = TimeoutRemovalView(member.id, member.guild.id, timeout_end.replace(tzinfo=None))
                await canal.send(embed=embed, view=view)
        
    except discord.Forbidden:
        print(f"‚ùå Sin permisos para dar timeout a {member}")
    except Exception as e:
        print(f"‚ùå Error al aplicar timeout: {e}")

#  ‚ô£‚úÖon guild channel update
@bot.event
async def on_guild_channel_update(before, after):
    """Protecci√≥n contra edici√≥n de canales - UN SOLO LOG CON COOLDOWN"""
    try:
        config = await db_manager.get_config(before.guild.id)
        if not config.get("editar_canales", False):
            return
        
        # DETECTAR CAMBIOS
        tipos_cambios = []
        
        if before.name != after.name:
            tipos_cambios.append(f"üìù Nombre: {before.name} ‚Üí {after.name}")
            
        if hasattr(before, 'topic') and hasattr(after, 'topic') and before.topic != after.topic:
            tipos_cambios.append("üìÑ Descripci√≥n modificada")
            
        if getattr(before, 'nsfw', False) != getattr(after, 'nsfw', False):
            tipos_cambios.append(f"üîû NSFW: {getattr(before, 'nsfw', False)} ‚Üí {getattr(after, 'nsfw', False)}")
            
        if getattr(before, 'slowmode_delay', 0) != getattr(after, 'slowmode_delay', 0):
            tipos_cambios.append(f"‚è∞ Modo lento: {getattr(before, 'slowmode_delay', 0)}s ‚Üí {getattr(after, 'slowmode_delay', 0)}s")
        
        # Detectar cambios de permisos
        before_overwrites = {target.id: str(overwrite.pair()) for target, overwrite in before.overwrites.items()}
        after_overwrites = {target.id: str(overwrite.pair()) for target, overwrite in after.overwrites.items()}
        
        if before_overwrites != after_overwrites:
            tipos_cambios.append("üîí Permisos/Privacidad modificados")
            
        if before.category_id != after.category_id:
            tipos_cambios.append("üìÅ Categor√≠a cambiada")
        
        # Si no hay cambios, salir
        if not tipos_cambios:
            return
        
        # Esperar un poco para audit log
        await asyncio.sleep(1)
        
        # BUSCAR USUARIO RESPONSABLE
        usuario_responsable = None
        
        try:
            async for entry in before.guild.audit_logs(limit=10):
                if (entry.action in [discord.AuditLogAction.channel_update, discord.AuditLogAction.overwrite_update] and
                    entry.target and entry.target.id == before.id and
                    entry.created_at and
                    (datetime.now(timezone.utc) - entry.created_at.replace(tzinfo=timezone.utc)).total_seconds() < 10):
                    
                    user = entry.user
                    if user and not user.bot and user.id not in config.get("whitelist", []):
                        usuario_responsable = user
                        break
                        
        except Exception as e:
            print(f"Error buscando usuario: {e}")
            return
        
        if not usuario_responsable:
            return
        
        # SISTEMA DE COOLDOWN - SOLO UN LOG POR USUARIO CADA 30 SEGUNDOS
        now = datetime.now(timezone.utc)
        guild_id = before.guild.id
        user_id = usuario_responsable.id
        
        # Inicializar si no existe
        if guild_id not in channel_edit_cooldown:
            channel_edit_cooldown[guild_id] = {}
        
        # Verificar cooldown
        if user_id in channel_edit_cooldown[guild_id]:
            last_action = channel_edit_cooldown[guild_id][user_id]
            if (now - last_action).total_seconds() < 30:  # 30 segundos de cooldown
                logger.info(f"Usuario {usuario_responsable} en cooldown, no enviando log duplicado")
                return
        
        # Registrar la acci√≥n actual
        channel_edit_cooldown[guild_id][user_id] = now
        
        # APLICAR SANCI√ìN UNA SOLA VEZ
        await aplicar_sancion(usuario_responsable, f"Edici√≥n no autorizada del canal #{before.name}")
        
        # CREAR UN SOLO LOG
        cambios_texto = "\n".join(tipos_cambios)
        
        embed = discord.Embed(
            title="üî® Canal Editado - Usuario Sancionado",
            description=f"**Canal:** #{before.name}\n**Usuario:** {usuario_responsable.mention}\n**ID:** {usuario_responsable.id}",
            color=discord.Color.red(),
            timestamp=datetime.now(timezone.utc)
        )
        
        embed.add_field(
            name="üìù Cambios detectados:",
            value=cambios_texto,
            inline=False
        )
        
        embed.add_field(
            name="‚öñÔ∏è Sanci√≥n:",
            value=f"üî® {config.get('sancion', 'ban').upper()}",
            inline=True
        )
        
        embed.add_field(
            name="üïê Hora:",
            value=f"<t:{int(now.timestamp())}:T>",
            inline=True
        )
        
        embed.set_footer(text="AntiRaid CUY - Protecci√≥n de Canales")
        
        # Enviar log
        canal_logs_id = config.get("canal_logs_id")
        if canal_logs_id:
            canal = before.guild.get_channel(canal_logs_id)
            if canal:
                await canal.send(embed=embed)
        
        logger.info(f"Log enviado para {usuario_responsable} editando #{before.name}")
                    
    except Exception as e:
        print(f"Error en protecci√≥n de canales: {e}")


#  ‚ô£‚úÖon guild channel delete
@bot.event
async def on_guild_channel_delete(channel):
    """Protecci√≥n contra eliminaci√≥n de canales"""
    try:
        config = await db_manager.get_config(channel.guild.id)
        
        # Verificar si la protecci√≥n est√° activada
        if not config.get("eliminar_canales", False):
            return
        
        # Obtener los logs de auditor√≠a
        async for entry in channel.guild.audit_logs(action=discord.AuditLogAction.channel_delete, limit=1):
            if entry.target.id == channel.id:
                # Verificar si el usuario est√° en whitelist
                whitelist = config.get("whitelist", [])
                if entry.user.id in whitelist:
                    return  # Usuario autorizado
                
                # GUARDAR BACKUP antes de recrear
                if channel.guild.id not in deleted_channels_backup:
                    deleted_channels_backup[channel.guild.id] = {}
                
                channel_backup = backup_channel_data(channel)
                deleted_channels_backup[channel.guild.id][channel.id] = channel_backup
                
                # Aplicar sanci√≥n al usuario responsable
                try:
                    member = channel.guild.get_member(entry.user.id)
                    if member and not member.bot:  # No sancionar bots
                        await aplicar_sancion(member, f"Eliminaci√≥n no autorizada del canal #{channel.name}")
                        incrementar_sancion("bans" if config.get("sancion", "ban") == "ban" else "kicks")
                except:
                    pass
                
                # Recrear el canal
                new_channel = await recreate_channel(channel.guild, channel_backup, channel.id)
                
                # Log del incidente
                descripcion = f"üóëÔ∏è **ELIMINACI√ìN DETECTADA**\n**Canal:** #{channel.name}\n**Usuario:** {entry.user.mention}\n**Acci√≥n:** {'‚úÖ Canal recreado' if new_channel else '‚ùå Error recreando'}"
                if new_channel:
                    descripcion += f"\n**Nuevo canal:** {new_channel.mention}"
                
                await enviar_log(channel.guild, descripcion, "üõ°Ô∏è Protecci√≥n Anti-Eliminaci√≥n", discord.Color.red())
                break
                
    except Exception as e:
        print(f"Error en protecci√≥n de canales: {e}")


#  ‚ô£‚úÖon guild role create
@bot.event
async def on_guild_role_create(role):
    """Protecci√≥n contra creaci√≥n de roles"""
    try:
        config = await db_manager.get_config(role.guild.id)
        if not config.get("crear_roles", False):
            return
        
        await asyncio.sleep(1)
        async for entry in role.guild.audit_logs(limit=1, action=discord.AuditLogAction.role_create):
            if entry.target.id == role.id and not entry.user.bot and entry.user.id not in config.get("whitelist", []):
                await aplicar_sancion(entry.user, f"Crear rol @{role.name} sin permiso")
                try:
                    await role.delete(reason="Rol creado sin permiso")
                except:
                    pass
                break
                
    except Exception as e:
        logger.error(f"Error en protecci√≥n de roles: {e}")

#  ‚ô£‚úÖon guild role delete
@bot.event
async def on_guild_role_delete(role):
    """Protecci√≥n contra eliminaci√≥n de roles"""
    try:
        config = await db_manager.get_config(role.guild.id)
        
        # Verificar si la protecci√≥n est√° activada
        if not config.get("eliminar_roles", False):
            return
        
        # Obtener los logs de auditor√≠a
        async for entry in role.guild.audit_logs(action=discord.AuditLogAction.role_delete, limit=1):
            if entry.target.id == role.id:
                # Verificar si el usuario est√° en whitelist
                whitelist = config.get("whitelist", [])
                if entry.user.id in whitelist:
                    return  # Usuario autorizado
                
                # GUARDAR BACKUP antes de recrear
                if role.guild.id not in deleted_roles_backup:
                    deleted_roles_backup[role.guild.id] = {}
                
                role_backup = backup_role_data(role)
                deleted_roles_backup[role.guild.id][role.id] = role_backup
                
                # Aplicar sanci√≥n al usuario responsable
                try:
                    member = role.guild.get_member(entry.user.id)
                    if member and not member.bot:  # No sancionar bots
                        await aplicar_sancion(member, f"Eliminaci√≥n no autorizada del rol @{role.name}")
                        incrementar_sancion("bans" if config.get("sancion", "ban") == "ban" else "kicks")
                except:
                    pass
                
                # Recrear el rol
                new_role = await recreate_role(role.guild, role_backup)
                
                # Log del incidente
                descripcion = f"üóëÔ∏è **ELIMINACI√ìN DE ROL**\n**Rol:** @{role.name}\n**Usuario:** {entry.user.mention}\n**Acci√≥n:** {'‚úÖ Rol recreado' if new_role else '‚ùå Error recreando'}"
                if new_role:
                    descripcion += f"\n**Nuevo rol:** {new_role.mention}"
                
                await enviar_log(role.guild, descripcion, "üõ°Ô∏è Protecci√≥n Anti-Eliminaci√≥n", discord.Color.red())
                break
                
    except Exception as e:
        logger.error(f"Error en protecci√≥n de roles: {e}")

#  ‚ô£‚úÖon guild role update
@bot.event
async def on_guild_role_update(before, after):
    """Protecci√≥n contra edici√≥n de roles"""
    try:
        config = await db_manager.get_config(after.guild.id)
        
        # Verificar si la protecci√≥n est√° activada
        if not config.get("editar_roles", False):
            return
        
        # Verificar si hubo cambios significativos
        cambios_importantes = (
            before.name != after.name or
            before.permissions != after.permissions or
            before.color != after.color or
            before.hoist != after.hoist or
            before.mentionable != after.mentionable
        )
        
        if not cambios_importantes:
            return
        
        # Obtener los logs de auditor√≠a
        async for entry in after.guild.audit_logs(action=discord.AuditLogAction.role_update, limit=1):
            if entry.target.id == after.id:
                # Verificar si el usuario est√° en whitelist
                whitelist = config.get("whitelist", [])
                if entry.user.id in whitelist:
                    return  # Usuario autorizado
                
                # Revertir cambios (restaurar configuraci√≥n anterior)
                try:
                    await after.edit(
                        name=before.name,
                        permissions=before.permissions,
                        color=before.color,
                        hoist=before.hoist,
                        mentionable=before.mentionable,
                        reason="Edici√≥n no autorizada revertida"
                    )
                except Exception as e:
                    logger.error(f"Error revirtiendo rol: {e}")
                
                # Aplicar sanci√≥n al usuario responsable
                try:
                    member = after.guild.get_member(entry.user.id)
                    if member and not member.bot:  # No sancionar bots
                        await aplicar_sancion(member, f"Edici√≥n no autorizada del rol @{before.name}")
                        incrementar_sancion("bans" if config.get("sancion", "ban") == "ban" else "kicks")
                except:
                    pass
                
                # Log del incidente
                cambios = []
                if before.name != after.name:
                    cambios.append(f"Nombre: `{before.name}` ‚Üí `{after.name}`")
                if before.permissions != after.permissions:
                    cambios.append("Permisos modificados")
                if before.color != after.color:
                    cambios.append("Color modificado")
                
                descripcion = f"‚úèÔ∏è **EDICI√ìN DE ROL**\n**Rol:** @{before.name}\n**Usuario:** {entry.user.mention}\n**Cambios:** {', '.join(cambios)}\n**Acci√≥n:** ‚úÖ Cambios revertidos"
                
                await enviar_log(after.guild, descripcion, "üõ°Ô∏è Protecci√≥n Anti-Edici√≥n", discord.Color.orange())
                break
                
    except Exception as e:
        logger.error(f"Error en protecci√≥n de edici√≥n de roles: {e}")



#  ‚ô£‚úÖagregar bots 
@bot.event
async def on_member_update(before, after):
    """Detectar cambios en miembros (como agregar bots)"""
    try:
        # Detectar si se agreg√≥ un bot
        if not before.bot and after.bot:
            config = await db_manager.get_config(after.guild.id)
            
            if config.get("agregar_bots", False):
                # Obtener quien agreg√≥ el bot
                async for entry in after.guild.audit_logs(action=discord.AuditLogAction.bot_add, limit=1):
                    if entry.target.id == after.id:
                        whitelist = config.get("whitelist", [])
                        if entry.user.id not in whitelist:
                            # Banear el bot y al usuario que lo agreg√≥
                            try:
                                await after.ban(reason="Bot agregado sin autorizaci√≥n")
                                member = after.guild.get_member(entry.user.id)
                                if member and not member.bot:
                                    await aplicar_sancion(member, f"Agreg√≥ bot sin autorizaci√≥n: {after.name}")
                                    incrementar_sancion("bans" if config.get("sancion", "ban") == "ban" else "kicks")
                            except:
                                pass
                            
                            await enviar_log(after.guild,
                                           f"ü§ñ **BOT NO AUTORIZADO**\n**Bot:** {after.mention}\n**Agregado por:** {entry.user.mention}\n**Acci√≥n:** ‚úÖ Bot removido",
                                           "üõ°Ô∏è Protecci√≥n Anti-Bots",
                                           discord.Color.red())
                        break
                        
    except Exception as e:
        logger.error(f"Error en protecci√≥n de bots: {e}")


#  ‚ô£‚úÖejecutar un usuario
@bot.event
async def on_member_remove(member):
    """Evento cuando un usuario sale del servidor"""
    # Solo log b√°sico
    await enviar_log(member.guild,
                    f" **üö®Se ejecuto un traidor**\n**Usuario:** {member.mention} ({member})\n**Tiempo en servidor:** {(discord.utils.utcnow() - member.joined_at).days if member.joined_at else 'Desconocido'} d√≠as",
                    "üì§ Ejecucion de usuario",
                    discord.Color.orange())


#  ‚ô£‚úÖon interaction
@bot.event
async def on_interaction(interaction):
    if interaction.type == discord.InteractionType.component:
        custom_id = interaction.data['custom_id']
        
        if custom_id.startswith("toggle_"):
            await handle_toggle_interaction(interaction, custom_id)
        elif custom_id == "select_logs_channel":
            await handle_logs_channel_selection(interaction)


# ===================================================================
#‚ô£ TASKS
# ===================================================================

#  ‚ô£‚úÖtask loop revisar calabozos
# üìÅ PARA LIBERAR AUTOMATICAMENTE DEL CALABOZO CUANDO CUMPLA SU CONDENA
@tasks.loop(seconds=20)
async def revisar_calabozos():
    """Revisar prisioneros y liberar autom√°ticamente"""
    global tiempo_calabozos
    
    # ‚úÖ AGREGAR ESTE LOG PARA CONFIRMAR QUE CORRE
    print(f"üîÑ REVISANDO CALABOZOS - {len(tiempo_calabozos)} prisioneros")
    
    if not tiempo_calabozos:
        return  # No hay prisioneros
    
    ahora = datetime.now(timezone.utc)
    liberados = []
    
    for user_id, tiempo_fin in list(tiempo_calabozos.items()):
        if ahora >= tiempo_fin:
            # Buscar usuario en todos los servidores
            for guild in bot.guilds:
                member = guild.get_member(user_id)
                if member:
                    rol_calabozo = discord.utils.get(guild.roles, name="Calabozo")
                    
                    if rol_calabozo and rol_calabozo in member.roles:
                        try:
                            await member.remove_roles(rol_calabozo)
                            liberados.append((member, guild))
                            print(f"‚úÖ {member.name} liberado autom√°ticamente")
                        except Exception as e:
                            print(f"‚ùå Error liberando {member.name}: {e}")
            
            # Eliminar del diccionario
            del tiempo_calabozos[user_id]
    
    if liberados:
        guardar_calabozos()
        
        # Enviar mensajes de liberaci√≥n
        for member, guild in liberados:
            canal_general = discord.utils.get(guild.channels, name="general")
            if canal_general:
                embed = discord.Embed(
                    title="üîì LIBERACI√ìN AUTOM√ÅTICA",
                    description=f"üè∞ **{member.mention} ha cumplido su condena y ha sido liberado!**",
                    color=0x00ff00
                )
                try:
                    await canal_general.send(embed=embed)
                except:
                    pass

    
#  ‚ô£‚úÖtask loop analis predic raid
@tasks.loop(minutes=2)
async def analizar_prediccion_raids():
    """Analizar patrones para predecir raids"""
    try:
        now = datetime.now(timezone.utc)
        
        for guild in bot.guilds:
            guild_id = guild.id
            config = await db_manager.get_config(guild_id)
            
            if not config.get("prediccion_raids", True):
                continue
            
            # Inicializar indicadores
            if guild_id not in raid_indicators:
                raid_indicators[guild_id] = {
                    'joins_recientes': [],
                    'actividad_sospechosa': 0,
                    'cuentas_nuevas': 0,
                    'patrones_detectados': [],
                    'ultimo_analisis': now
                }
            
            indicators = raid_indicators[guild_id]
            
            # Limpiar datos antiguos (√∫ltima hora)
            indicators['joins_recientes'] = [
                j for j in indicators['joins_recientes'] 
                if (now - j).total_seconds() <= 3600
            ]
            
            # An√°lisis de riesgo
            riesgo_score = 0
            alertas = []
            
            # Factor 1: Joins acelerados
            joins_ultima_hora = len(indicators['joins_recientes'])
            if joins_ultima_hora > 20:
                riesgo_score += 3
                alertas.append(f"üî∫ {joins_ultima_hora} usuarios unidos en la √∫ltima hora")
            elif joins_ultima_hora > 10:
                riesgo_score += 2
                alertas.append(f"‚ö†Ô∏è {joins_ultima_hora} usuarios unidos en la √∫ltima hora")
            
            # Factor 2: Cuentas muy nuevas
            cuentas_nuevas_recientes = 0
            for member in guild.members[-20:]:  # √öltimos 20 miembros
                if member.created_at and (now - member.created_at).days < 7:
                    cuentas_nuevas_recientes += 1
            
            if cuentas_nuevas_recientes > 10:
                riesgo_score += 2
                alertas.append(f"üë∂ {cuentas_nuevas_recientes} cuentas muy nuevas detectadas")
            
            # Factor 3: Actividad sospechosa acumulada
            if indicators['actividad_sospechosa'] > 5:
                riesgo_score += 2
                alertas.append(f"üö® {indicators['actividad_sospechosa']} actividades sospechosas")
            
            # Factor 4: Patrones conocidos
            patrones_activos = len([p for p in indicators['patrones_detectados'] 
                                  if (now - p['timestamp']).total_seconds() <= 1800])  # 30 min
            if patrones_activos > 0:
                riesgo_score += patrones_activos
                alertas.append(f"üîç {patrones_activos} patrones de raid detectados")
            
            # Calcular nivel de alerta
            if riesgo_score >= 6:
                nivel_alerta = "üî¥ CR√çTICO"
                color = discord.Color.dark_red()
            elif riesgo_score >= 4:
                nivel_alerta = "üü† ALTO"
                color = discord.Color.orange()
            elif riesgo_score >= 2:
                nivel_alerta = "üü° MEDIO"
                color = discord.Color.gold()
            else:
                nivel_alerta = "üü¢ BAJO"
                color = discord.Color.green()
                continue  # No enviar alerta si el riesgo es bajo
            
            # Evitar spam de alertas (m√°ximo 1 cada 30 minutos)
            if guild_id in pre_raid_warnings:
                last_warning = pre_raid_warnings[guild_id]
                if (now - last_warning).total_seconds() < 1800:  # 30 minutos
                    continue
            
            pre_raid_warnings[guild_id] = now
            
            # Enviar alerta predictiva
            await enviar_log(guild,
                           f"üîÆ **PREDICCI√ìN DE RAID - {nivel_alerta}**\n"
                           f"**Nivel de riesgo:** {riesgo_score}/10\n"
                           f"**An√°lisis:** {now.strftime('%H:%M:%S')}\n\n"
                           f"**üö® INDICADORES DETECTADOS:**\n" + 
                           "\n".join(alertas) + 
                           f"\n\n**üí° RECOMENDACI√ìN:**\n"
                           f"{'üî¥ Activar Raid Mode inmediatamente' if riesgo_score >= 6 else 'üü° Monitorear de cerca y preparar defensas'}",
                           "üîÆ Sistema de Predicci√≥n",
                           color)
            
            # Auto-activar raid mode si es cr√≠tico
            if riesgo_score >= 7 and config.get("auto_raid_mode", False):
                config["raid_mode"] = True
                await db_manager.save_config(guild_id, config)
                await gestionar_invitaciones_raid_completo(guild, activar_raid=True)
                await activar_protecciones_raid(guild_id, activar=True)
                
                await enviar_log(guild,
                               f"ü§ñ **RAID MODE AUTO-ACTIVADO**\n"
                               f"**Raz√≥n:** Predicci√≥n cr√≠tica (Score: {riesgo_score})\n"
                               f"**Servidor sellado autom√°ticamente**",
                               "ü§ñ Activaci√≥n Autom√°tica",
                               discord.Color.dark_red())
        
    except Exception as e:
        logger.error(f"Error en an√°lisis de predicci√≥n: {e}")



#  ‚ô£‚úÖtask loop cleanup task
@tasks.loop(minutes=5)
async def cleanup_task():
    """Limpiar datos antiguos para evitar acumulaci√≥n de memoria"""
    now = datetime.now(timezone.utc)
    
    # Limpiar spam tracking
    for guild_id in list(spam_tracking.keys()):
        for user_id in list(spam_tracking[guild_id].keys()):
            spam_tracking[guild_id][user_id] = [
                t for t in spam_tracking[guild_id][user_id] 
                if (now.timestamp() - (t.timestamp() if hasattr(t, 'timestamp') else t.replace(tzinfo=timezone.utc).timestamp())) <= 10
            ]
            if not spam_tracking[guild_id][user_id]:
                del spam_tracking[guild_id][user_id]
        
        if not spam_tracking[guild_id]:
            del spam_tracking[guild_id]
    
    # Limpiar registro de joins
    for guild_id in list(registro_joins.keys()):
        registro_joins[guild_id] = [
            t for t in registro_joins[guild_id] 
            if (now.timestamp() - t) <= 10
        ]
        
        if not registro_joins[guild_id]:
            del registro_joins[guild_id]
    
    # Limpiar infracciones spam
    for guild_id in list(infracciones_spam.keys()):
        for user_id in list(infracciones_spam[guild_id].keys()):
            if "last_infraction" in infracciones_spam[guild_id][user_id]:
                last_infraction = infracciones_spam[guild_id][user_id]["last_infraction"]
                if hasattr(last_infraction, 'timestamp'):
                    if (now.timestamp() - last_infraction.timestamp()) > 21600:
                        del infracciones_spam[guild_id][user_id]
                else:
                    if (now - last_infraction).total_seconds() > 21600:
                        del infracciones_spam[guild_id][user_id]
        
        if not infracciones_spam[guild_id]:
            del infracciones_spam[guild_id]
    
    # Limpiar muted users expirados
    for guild_id in list(muted_users.keys()):
        for user_id in list(muted_users[guild_id].keys()):
            if now >= muted_users[guild_id][user_id]:
                del muted_users[guild_id][user_id]
        
        if not muted_users[guild_id]:
            del muted_users[guild_id]
    
    # Limpiar cooldowns de edici√≥n de canales (m√°s de 1 hora)
    for guild_id in list(channel_edit_cooldown.keys()):
        for user_id in list(channel_edit_cooldown[guild_id].keys()):
            cooldown_time = channel_edit_cooldown[guild_id][user_id]
            if hasattr(cooldown_time, 'timestamp'):
                if (now.timestamp() - cooldown_time.timestamp()) > 3600:
                    del channel_edit_cooldown[guild_id][user_id]
            else:
                if (now - cooldown_time).total_seconds() > 3600:
                    del channel_edit_cooldown[guild_id][user_id]
        
        if not channel_edit_cooldown[guild_id]:
            del channel_edit_cooldown[guild_id]

#  ‚ô£‚úÖprocesar aventuras
@tasks.loop(minutes=5)
async def procesar_aventuras():
    """Procesar aventuras completadas"""
    now = datetime.now(timezone.utc)
    
    async with aiosqlite.connect(db_manager.db_path) as db:
        # VERIFICACI√ìN DE TABLA - AGREGAR ESTO:
        await db.execute('''
            CREATE TABLE IF NOT EXISTS aventuras_activas (
                guild_id INTEGER,
                user_id INTEGER,
                tipo_aventura TEXT,
                tiempo_inicio TEXT,
                tiempo_fin TEXT,
                PRIMARY KEY (guild_id, user_id)
            )
        ''')
        
        # Buscar aventuras completadas
        cursor = await db.execute(
            "SELECT * FROM aventuras_activas WHERE tiempo_fin <= ?",
            (now.isoformat(),)
        )
        aventuras_completadas = await cursor.fetchall()
        
        for aventura in aventuras_completadas:
            guild_id, user_id, tipo_aventura, tiempo_inicio, tiempo_fin = aventura
            
            # ‚ô£‚úÖ OBTENER DATOS ACTUALES DEL PERSONAJE ANTES DE MODIFICAR
            cursor = await db.execute(
                "SELECT nivel, experiencia, florines, hp_actual, clase FROM personajes WHERE guild_id = ? AND user_id = ?",
                (guild_id, user_id)
            )
            personaje_data = await cursor.fetchone()
            if not personaje_data:
                continue
                
            nivel_actual, exp_actual, florines_actual, hp_actual, clase = personaje_data
            
            # Calcular recompensas
            config = AVENTURAS_CONFIG[tipo_aventura]
            exp_ganada = random.randint(config["exp_min"], config["exp_max"])
            florines_ganados = random.randint(config["florines_min"], config["florines_max"])
            hp_perdido = random.randint(*config["hp_loss"])
            
            # ‚ô£‚úÖ CALCULAR NUEVOS VALORES
            nueva_exp = exp_actual + exp_ganada
            nuevos_florines = florines_actual + florines_ganados
            nuevo_hp = max(hp_actual - hp_perdido, 0)
            
            # ‚ú® NUEVO: SISTEMA DE ITEMS
            item_encontrado = None
            lore_item = ""
            
            # Verificar si encuentra item
            if random.randint(1, 100) <= config["chance_item"]:
                item_encontrado = await obtener_item_aleatorio(clase, config["rareza_items"])
                if item_encontrado:
                    # Agregar al inventario
                    await agregar_item_al_inventario(guild_id, user_id, item_encontrado)
                    # Generar lore
                    lore_item = generar_lore_item(clase, item_encontrado["tipo"], item_encontrado["nombre"], item_encontrado["rareza"])
            
            # ‚ô£‚úÖ VERIFICAR SUBIDA DE NIVEL
            exp_necesaria = calcular_exp_necesaria(nivel_actual + 1)
            nuevo_nivel = nivel_actual
            
            if nueva_exp >= exp_necesaria:
                nuevo_nivel = nivel_actual + 1
                nueva_exp = nueva_exp - exp_necesaria  # Resetear exp sobrante
            
            # ‚ô£‚úÖ GUARDAR TODOS LOS CAMBIOS DE UNA VEZ CON LA NUEVA FUNCI√ìN
            await actualizar_personaje(
                guild_id, user_id,
                experiencia=nueva_exp,
                florines=nuevos_florines,
                hp_actual=nuevo_hp,
                nivel=nuevo_nivel
            )
            
            # Eliminar aventura activa
            await db.execute(
                "DELETE FROM aventuras_activas WHERE guild_id = ? AND user_id = ?",
                (guild_id, user_id)
            )
            
            await db.commit()
            
            # Enviar mensaje de finalizaci√≥n
            try:
                guild = bot.get_guild(guild_id)
                user = guild.get_member(user_id)
                if user:
                    embed = discord.Embed(
                        title="üéâ ¬°AVENTURA COMPLETADA!",
                        description=f"Tu h√©roe ha regresado victorioso de su aventura **{tipo_aventura}**.",
                        color=0x00FF00
                    )
                    embed.add_field(
                        name="üèÜ Recompensas",
                        value=f"‚≠ê +{exp_ganada:,} EXP\nüí∞ +{florines_ganados:,} florines\nüíî -{hp_perdido} HP",
                        inline=False
                    )
                    
                    # ‚ú® NUEVO: MOSTRAR ITEM ENCONTRADO
                    if item_encontrado and lore_item:
                        embed.add_field(
                            name="‚ú® ¬°TESORO ENCONTRADO!",
                            value=lore_item,
                            inline=False
                        )
                    
                    # ‚ô£‚úÖ MEJORAR MENSAJE DE SUBIDA DE NIVEL
                    if nuevo_nivel > nivel_actual:
                        embed.add_field(
                            name="üéä ¬°SUBISTE DE NIVEL!",
                            value=f"üÜô Nivel {nivel_actual} ‚Üí {nuevo_nivel}\nüëë Nuevo rango: {obtener_rango(nuevo_nivel, clase)}",
                            inline=False
                        )
                    
                    await user.send(embed=embed)
            except Exception as e:
                print(f"‚ùå Error enviando mensaje de aventura completada: {e}")


@bot.event
async def on_member_ban(guild, user):
    """Detectar bans masivos"""
    await detectar_moderacion_masiva(guild, "ban")

@bot.event  
async def on_member_remove(member):
    """Detectar kicks masivos"""
    if member.guild:
        await detectar_moderacion_masiva(member.guild, "kick")


#  ‚ô£‚úÖtask loop limpiar datos temp
@tasks.loop(minutes=30)
async def limpiar_datos_temporales():
    """Limpiar datos temporales cada 30 minutos"""
    try:
        ahora = datetime.now(timezone.utc)
        ahora_timestamp = ahora.timestamp()  # ‚úÖ ARREGLADO: usar ahora en lugar de datetime.now()
        
        # Limpiar spam tracking
        for guild_id in spam_tracking:
            for user_id in list(spam_tracking[guild_id].keys()):
                spam_tracking[guild_id][user_id] = [
                    timestamp for timestamp in spam_tracking[guild_id][user_id]
                    if (ahora_timestamp - timestamp) <= 1800  # ‚úÖ ARREGLADO: comparar timestamps directamente
                ]
                if not spam_tracking[guild_id][user_id]:
                    del spam_tracking[guild_id][user_id]
        
        # Limpiar registro de joins
        for guild_id in registro_joins:
            registro_joins[guild_id] = [
                timestamp for timestamp in registro_joins[guild_id]
                if ahora_timestamp - timestamp <= 1800  # 30 min
            ]
        
        # Limpiar predicci√≥n de datos
        for guild_id in prediccion_datos:
            datos = prediccion_datos[guild_id]
            datos["cuentas_nuevas"] = [c for c in datos["cuentas_nuevas"] if (ahora - c["timestamp"]).total_seconds() <= 1800]
            datos["nombres_recientes"] = [n for n in datos["nombres_recientes"] if (ahora - n["timestamp"]).total_seconds() <= 1800]
            datos["usuarios_sin_avatar"] = [u for u in datos["usuarios_sin_avatar"] if (ahora - u["timestamp"]).total_seconds() <= 1800]
        
        print(f"üßπ Datos temporales limpiados - CALABOZOS DESPU√âS: {tiempo_calabozos}")
        
    except Exception as e:
        print(f"‚ùå Error limpiando datos: {e}")

#  ‚ô£‚úÖtask loop verificar timeouts 
@tasks.loop(minutes=5)
async def verificar_timeouts_expirados():
    """Verificar timeouts expirados cada 5 minutos"""
    try:
        ahora = datetime.now(timezone.utc)
        
        for guild_id in list(muted_users.keys()):
            guild = bot.get_guild(guild_id)
            if not guild:
                continue
            
            for user_id in list(muted_users[guild_id].keys()):
                timeout_end = muted_users[guild_id][user_id]
                
                # Si el timeout ya expir√≥, remover del registro
                if ahora >= timeout_end:
                    del muted_users[guild_id][user_id]
                    logger.info(f"Timeout expirado removido: Usuario {user_id} en {guild.name}")
        
    except Exception as e:
        logger.error(f"Error verificando timeouts: {e}")

#  ‚ô£‚úÖtask loop predecir raids
@tasks.loop(minutes=10)
async def predecir_raids():
    """Sistema de predicci√≥n de raids cada 10 minutos"""
    try:
        for guild in bot.guilds:
            guild_id = guild.id
            
            if guild_id not in prediccion_datos:
                continue
            
            # Evaluar riesgo actual
            evaluacion = await evaluar_riesgo_raid(guild_id, {"es_nueva": False})
            
            if evaluacion["nivel_riesgo"] >= 70 and evaluacion["debe_alertar"]:
                # Pre-alerta de raid
                if guild_id not in pre_raid_warnings:
                    pre_raid_warnings[guild_id] = datetime.now(timezone.utc)
                    
                    descripcion = f"üîÆ **PRE-ALERTA DE RAID**\n**Nivel de Riesgo:** {evaluacion['nivel_riesgo']}%\n\n"
                    descripcion += "\n".join([f"‚Ä¢ {alerta}" for alerta in evaluacion["alertas"]])
                    descripcion += "\n\n‚ö†Ô∏è **Recomendaci√≥n:** Preparar activaci√≥n de modo raid"
                    
                    await enviar_log(guild, descripcion, "üîÆ Sistema de Predicci√≥n", discord.Color.orange())
        
    except Exception as e:
        logger.error(f"Error en predicci√≥n de raids: {e}")

#  ‚ô£‚úÖtask loop reset medianoche
@tasks.loop(hours=24)
async def resetear_contadores_medianoche():
    """Resetear contadores a medianoche"""
    reiniciar_contadores_diarios()
    print("üîÑ Contadores diarios reseteados")

# =======================================================================
#‚ô£ COMANDOS
# =======================================================================

#  ‚ô£‚úÖoraculo
@bot.command()
async def oraculo(ctx):
    """El or√°culo del reino revela profec√≠as malvadas (Cuesta: 50 Florines de Oro)"""
    try:
        await ctx.message.delete()
    except:
        pass
    
    user_id = ctx.author.id
    config = await db_manager.get_config(ctx.guild.id)
    whitelist = config.get("whitelist", [])
    
    # Verificar whitelist (comentado temporalmente)
    # if user_id not in whitelist:
    #     frase = random.choice(FRASES_NO_WHITELIST)
    #     await ctx.send(f"**{frase}**", delete_after=10)
    #     return
    
    # Obtener monedas del usuario
    monedas = await db_manager.get_user_coins(user_id)
    
    # Verificar si tiene suficientes monedas
    if monedas < 50:
        embed = discord.Embed(
            title="ü™ô Florines insuficientes",
            description=f"üí∞ **Tienes:** {monedas} Florines de Oro\nüí∏ **Necesitas:** 50 Florines\n\n*üè∞ Participa en el reino para ganar monedas*",
            color=0x8B0000
        )
        await ctx.send(embed=embed, delete_after=10)
        return
    
    # Cobrar 50 florines - M√âTODO CORRECTO
    await db_manager.add_user_coins(user_id, -50)  # ‚Üê Restar 50 florines
    nuevas_monedas = await db_manager.get_user_coins(user_id)  # ‚Üê Obtener saldo actualizado
    
    # Seleccionar frase malvada aleatoria
    frase = random.choice(FRASES_ORACULO_MALVADAS)
    
    # Crear embed del or√°culo - AGREGAR MENCI√ìN DEL USUARIO
    embed = discord.Embed(
        title="üîÆ Profec√≠a del Or√°culo Ancestral",
        description=f"**{ctx.author.mention}**, {frase}",  # ‚Üê MENCI√ìN AGREGADA
        color=0x8B0000
    )
    
    embed.add_field(
        name="üí∞ Estado de tu Tesoro",
        value=f"Te quedan **{nuevas_monedas} Florines de Oro**",
        inline=False
    )
    
    embed.set_footer(text="‚ö†Ô∏è Las profec√≠as del or√°culo son inevitables")
    
    await ctx.send(embed=embed, delete_after=30)
    
    # Log de la transacci√≥n
    logger.info(f"üí∞ {ctx.author} pag√≥ 50 florines por el or√°culo. Saldo: {nuevas_monedas}")


#  ‚ô£‚úÖdebug
@bot.command(name='debug_level')
async def debug_level(ctx):
    """Ver qu√© nivel detecta el bot"""
    user_id = ctx.author.id
    guild_id = ctx.guild.id
    
    level = get_user_level(user_id, guild_id)
    
    await ctx.send(f"**DEBUG:**\n"
                   f"Tu ID: {user_id}\n"
                   f"Guild ID: {guild_id}\n"
                   f"Nivel detectado: {level}\n"
                   f"¬øEst√°s en hardcoded?: {user_id in [744653546435379243, 461049946682949632]}")

#  ‚ô£‚úÖinfo test
@bot.command(name='info_test')
async def info_test(ctx):
    """Test del comando info sin verificaciones"""
    
    # Crear embed con comandos
    embed = discord.Embed(
        title="üìú Pergamino De Comandos Del Reino",
        description="‚öîÔ∏è **Lista de comandos disponibles para los nobles del castillo** ‚öîÔ∏è",
        color=0x8B0000
    )
    
    # MERCADO DEL REINO
    embed.add_field(
        name="üè™ **Mercado del Reino**",
        value="`!florines` - Ver tu balance de Florines de Oro\n"
              "`!dar_florines @usuario cantidad` - [ADMIN] Otorgar florines\n"
              "`!oraculo` - Consultar profec√≠a siniestra (50 florines)",
        inline=False
    )
    
    await ctx.send(embed=embed, delete_after=10)

#  ‚ô£‚úÖflorines
@bot.command(name='florines')
async def florines(ctx):
    """Verificar el balance de Florines de Oro del usuario"""
    try:
        # Obtener coins del usuario
        coins = await db_manager.get_user_coins(ctx.author.id)
        
        embed = discord.Embed(
            title="‚öîÔ∏è Cofres del Reino",
            description=f"Noble **{ctx.author.display_name}**\n\nüí∞ **{coins} Florines de Oro**",
            color=0x8B4513
        )
        
        embed.set_footer(text="‚öîÔ∏è Ganados con honor en batalla")
        embed.set_thumbnail(url=ctx.author.avatar.url if ctx.author.avatar else None)
        
        await ctx.send(embed=embed, delete_after=10)  # ‚Üê Auto-borrar en 10 segundos
        
    except Exception as e:
        logger.error(f"Error en comando florines: {e}")
        await ctx.send("‚ùå Error al consultar tus florines.", delete_after=10)  # ‚Üê Auto-borrar error tambi√©n

#  ‚ô£‚úÖdar florines
@bot.command()
async def dar_florines(ctx, usuario: discord.Member = None, cantidad: int = None):
    """[ADMIN] Dar florines a un usuario"""
    try:
        await ctx.message.delete()
    except:
        pass
    
    # Solo administradores
    if not ctx.author.guild_permissions.administrator:
        await ctx.send("**Solo los nobles administradores pueden otorgar florines**", delete_after=10)
        return
    
    # VERIFICAR SI FALTA EL USUARIO
    if usuario is None:
        await ctx.send("**Uso correcto:** `!dar_florines @usuario (cantidad)`", delete_after=10)
        return
    
    # VERIFICAR SI FALTA LA CANTIDAD
    if cantidad is None:
        await ctx.send("**Introduce la cantidad.** Uso correcto: `!dar_florines @usuario (cantidad)`", delete_after=10)
        return
    
    # VERIFICAR QUE LA CANTIDAD SEA POSITIVA
    if cantidad <= 0:
        await ctx.send("**La cantidad debe ser positiva**", delete_after=10)
        return
    
    await db_manager.add_user_coins(usuario.id, cantidad)
    nuevas_monedas = await db_manager.get_user_coins(usuario.id)
    
    embed = discord.Embed(
        title="üí∞ Donaci√≥n Real",
        description=f"üëë **{ctx.author.mention}** otorg√≥ **{cantidad} Florines** a **{usuario.mention}**",
        color=0xFFD700
    )
    
    embed.add_field(
        name="üí∞ Nuevo Saldo",
        value=f"ü™ô {nuevas_monedas} Florines de Oro",
        inline=False
    )
    
    await ctx.send(embed=embed, delete_after=10)

#  ‚ô£‚úÖlimpiar config(canalfianza)
@bot.command()
async def limpiar_config(ctx):
    """Limpiar configuraci√≥n de fianza"""
    config = await db_manager.get_config(ctx.guild.id)
    if 'canal_fianza' in config:
        del config['canal_fianza']
        await db_manager.save_config(ctx.guild.id, config)
        await ctx.send("‚úÖ Configuraci√≥n de fianza limpiada")
    else:
        await ctx.send("‚ùå No hay configuraci√≥n que limpiar")

#  ‚ô£‚úÖver canal fianza
@bot.command()
async def ver_canal_fianza(ctx):
    """Ver qu√© canal de fianza est√° configurado"""
    config = await db_manager.get_config(ctx.guild.id)
    canal_id = config.get('canal_fianza')
    
    if canal_id:
        canal = bot.get_channel(canal_id)
        await ctx.send(f"üîç Canal fianza: {canal.mention if canal else 'No encontrado'} (ID: {canal_id})")
    else:
        await ctx.send("‚ùå No hay canal de fianza configurado")


#  ‚ô£‚úÖremove honeypot
@bot.command()
async def remove_honeypot(ctx):
    """Eliminar el sistema honeypot"""
    
    # BORRAR EL COMANDO PRIMERO
    try:
        await ctx.message.delete()
    except:
        pass
    
    # VERIFICAR PERMISOS CON SISTEMA UNIFICADO
    user_level = get_user_level(ctx.author.id, ctx.guild.id)
    
    # 1. CIUDADANOS NO PUEDEN USAR EL COMANDO
    if user_level == "CIUDADANO":
        await ctx.send("üè∞ **¬øPretendes desmantelar las defensas de mi castillo, vil intruso? Solo los generales de mi ej√©rcito pueden ordenar tal cosa. ¬°Fuera de aqu√≠ antes de que te haga encerrar en las mazmorras!**", delete_after=15)
        return
    
    # 2. RECLUTAS TAMPOCO PUEDEN (SON MUY J√ìVENES)
    if user_level == "RECLUTA":
        await ctx.send("‚öîÔ∏è **A√∫n eres muy joven para manejar las defensas del castillo, recluta. Solo los veteranos pueden desmantelar las trampas del reino.**", delete_after=15)
        return
    
    # 3. VIP TAMPOCO PUEDEN (NO ES SU √ÅREA)
    if user_level == "VIP":
        await ctx.send("üíé **Jovencito noble, las defensas del castillo no son tu juguete. Deja que los comandantes manejen estos asuntos.**", delete_after=15)
        return
    
    # 4. SOLO SUPERIORES PUEDEN + VERIFICAR PERMISOS DE DISCORD
    if user_level != "SUPERIOR":
        await ctx.send("üëë **Solo los comandantes supremos pueden alterar las defensas del reino.**", delete_after=15)
        return
    
    if not ctx.author.guild_permissions.administrator:
        await ctx.send("üõ°Ô∏è **Necesitas permisos de administrador para desmantelar las defensas.**", delete_after=15)
        return

    try:
        # OBTENER CONFIGURACI√ìN ACTUAL
        config = await db_manager.get_config(ctx.guild.id)
        proteccion_canales_estaba_activa = config.get("eliminar_canales", False)
        
        # BUSCAR EL CANAL HONEYPOT
        honeypot_channel = discord.utils.get(ctx.guild.channels, name="üß™-beta-tester")
        
        if honeypot_channel:
            # DESACTIVAR TEMPORALMENTE LA PROTECCI√ìN DE CANALES
            if proteccion_canales_estaba_activa:
                config["eliminar_canales"] = False
                await db_manager.save_config(ctx.guild.id, config)
                print("Protecci√≥n de canales desactivada temporalmente")
            
            # ESPERAR UN MOMENTO PARA ASEGURAR QUE SE APLIC√ì EL CAMBIO
            await asyncio.sleep(1)
            
            # ELIMINAR EL CANAL
            await honeypot_channel.delete(reason="Honeypot eliminado por comando")
            print(f"Canal honeypot eliminado exitosamente")
            
            # ESPERAR UN MOMENTO ANTES DE REACTIVAR
            await asyncio.sleep(2)
            
            # REACTIVAR LA PROTECCI√ìN SI ESTABA ACTIVA
            if proteccion_canales_estaba_activa:
                config["eliminar_canales"] = True
                await db_manager.save_config(ctx.guild.id, config)
                print("Protecci√≥n de canales reactivada")
            
            embed = discord.Embed(
                title="‚öîÔ∏è TRAMPA DESACTIVADA CON √âXITO",
                description="El honeypot ha sido eliminado del reino.",
                color=0xFF6B35
            )
            embed.add_field(
                name="üóëÔ∏è Canal Eliminado",
                value="üß™-beta-tester\n`La trampa ha sido desmantelada`",
                inline=False
            )
            embed.set_footer(text="üõ°Ô∏è Sistema de honeypot desactivado ‚Ä¢ Se auto-elimina en 20s")
            await ctx.send(embed=embed, delete_after=15)
        else:
            embed = discord.Embed(
                title="‚ö†Ô∏è NO HAY TRAMPAS QUE ELIMINAR",
                description="No se encontr√≥ ning√∫n honeypot activo en este reino.",
                color=0xFFFF00
            )
            embed.set_footer(text="üîç No hay honeypots activos ‚Ä¢ Se auto-elimina en 15s")
            await ctx.send(embed=embed, delete_after=15)
            
    except Exception as e:
        print(f"Error al eliminar honeypot: {e}")
        # ASEGURAR QUE LA PROTECCI√ìN SE REACTIVE EN CASO DE ERROR
        if 'proteccion_canales_estaba_activa' in locals() and proteccion_canales_estaba_activa:
            config["eliminar_canales"] = True
            await db_manager.save_config(ctx.guild.id, config)
        await ctx.send(f"‚ùå **Error al eliminar el honeypot:** {e}", delete_after=20)


#  ‚ô£‚úÖsetup honeypot
@bot.command()
async def setup_honeypot(ctx):
    """Configurar el sistema honeypot con selector de canal de logs"""
    
    # BORRAR EL COMANDO PRIMERO
    try:
        await ctx.message.delete()
    except:
        pass
    
    # VERIFICAR PERMISOS CON SISTEMA UNIFICADO
    user_level = get_user_level(ctx.author.id, ctx.guild.id)
    
    # 1. CIUDADANOS NO PUEDEN USAR EL COMANDO
    if user_level == "CIUDADANO":
        await ctx.send("üè∞ **¬øOsas pretender configurar las defensas de mi fortaleza, insolente? Solo los comandantes de la guardia real tienen tal autoridad. Ret√≠rate antes de que ordene tu encarcelamiento.**", delete_after=15)
        return
    
    # 2. RECLUTAS TAMPOCO PUEDEN (SON MUY J√ìVENES)
    if user_level == "RECLUTA":
        await ctx.send("‚öîÔ∏è **A√∫n eres muy joven para establecer las defensas del castillo, recluta. Solo los veteranos pueden configurar las trampas del reino.**", delete_after=15)
        return
    
    # 3. VIP TAMPOCO PUEDEN (NO ES SU √ÅREA)
    if user_level == "VIP":
        await ctx.send("üíé **Jovencito noble, las defensas del castillo no son tu juguete. Deja que los comandantes manejen estos asuntos.**", delete_after=15)
        return
    
    # 4. SOLO SUPERIORES PUEDEN + VERIFICAR PERMISOS DE DISCORD
    if user_level != "SUPERIOR":
        await ctx.send("üëë **Solo los comandantes supremos pueden establecer las defensas del reino.**", delete_after=15)
        return
    
    if not ctx.author.guild_permissions.administrator:
        await ctx.send("üõ°Ô∏è **Necesitas permisos de administrador para configurar las defensas.**", delete_after=15)
        return

    try:
        # VERIFICAR SI YA EXISTE EL CANAL
        existing_channel = discord.utils.get(ctx.guild.channels, name="üß™-beta-tester")
        if existing_channel:
            embed = discord.Embed(
                title="‚öîÔ∏è LAS TRAMPAS YA FUERON CREADAS, SE√ëOR",
                description="El honeypot ya est√° desplegado y operativo en este reino.",
                color=0xFF6B35
            )
            embed.add_field(
                name="üï≥Ô∏è Canal de Trampa Activo",
                value=f"{existing_channel.mention}\n`Trampa lista para capturar intrusos`",
                inline=False
            )
            embed.set_footer(text="üõ°Ô∏è El sistema de defensa ya est√° activo ‚Ä¢ Se auto-elimina en 20s")
            await ctx.send(embed=embed, delete_after=15)
            return
        
        # CREAR CANAL HONEYPOT
        overwrites = {
            ctx.guild.default_role: discord.PermissionOverwrite(read_messages=False),
            ctx.guild.me: discord.PermissionOverwrite(read_messages=True, send_messages=True)
        }
        
        for role in ctx.guild.roles:
            if role.permissions.manage_messages:
                overwrites[role] = discord.PermissionOverwrite(read_messages=True)
        
        honeypot_channel = await ctx.guild.create_text_channel(
            name="üß™-beta-tester",
            overwrites=overwrites,
            topic="Canal para pruebas de nuevas funciones de moderaci√≥n",
            position=5
        )
        
        # CREAR MENSAJE CON BOT√ìN TRAMPA
        embed = discord.Embed(
            title="üß™ BETA TESTING - NUEVAS FUNCIONES DE MODERACI√ìN",
            description="""Estamos probando nuevas herramientas de administraci√≥n del servidor.
Para participar en las pruebas, necesitas permisos temporales de moderador.

‚ö†Ô∏è Solo para staff autorizado durante el periodo de pruebas.""",
            color=0x00FF00
        )
        
        embed.add_field(
            name="‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ",
            value="""üìä **Recursos Adicionales:**
üîó [Dashboard Administrativo Avanzado](https://admin-panel-cuyarmy.herokuapp.com)

‚è∞ Las pruebas est√°n activas hasta nuevo aviso.""",
            inline=False
        )
        
        view = HoneypotView()
        await honeypot_channel.send(embed=embed, view=view)
        
        # CREAR SELECTOR CON AUTO-DELETE
        select_view = ChannelSelectView(ctx, honeypot_channel)
        setup_embed = discord.Embed(
            title="üõ†Ô∏è CONFIGURACI√ìN DEL HONEYPOT",
            description="‚úÖ Canal trampa creado exitosamente\nüìã Ahora selecciona el canal donde quieres recibir los reportes",
            color=0xFFD700
        )
        
        setup_embed.add_field(
            name="üéØ Canal Trampa Desplegado",
            value=f"**Canal:** {honeypot_channel.mention}\n**Estado:** ‚úÖ Operativo",
            inline=False
        )
        
        setup_embed.set_footer(text="‚è±Ô∏è Tienes 2 minutos para seleccionar ‚Ä¢ Mensaje se auto-elimina")
        
        await ctx.send(embed=setup_embed, view=select_view, delete_after=120)
        
    except Exception as e:
        print(f"Error: {e}")
        await ctx.send("‚ùå **Error al crear el honeypot.**", delete_after=20)


#  ‚ô£‚úÖrango
@bot.command()
async def rango(ctx, *, usuario: discord.Member = None):
    """Mostrar el rango de un ciudadano del reino"""
    
    # Si no se especifica usuario, mostrar el del autor
    if not usuario:
        usuario = ctx.author
    
    # Obtener nivel del usuario
    user_level = get_user_level(usuario.id, ctx.guild.id)
    
    # Determinar jerarqu√≠a y emoji
    if user_level == "SUPERIOR":
        jerarquia_emoji = "üëë"
        jerarquia_texto = "SUPERIOR"
        descripcion = "**M√°xima autoridad del reino**"
        color = 0xFFD700  # Dorado
    elif user_level == "VIP":
        jerarquia_emoji = "üíé"
        jerarquia_texto = "VIP"
        descripcion = "**Noble privilegiado del reino**"
        color = 0x9932CC  # P√∫rpura
    elif user_level == "RECLUTA":
        jerarquia_emoji = "‚öîÔ∏è"
        jerarquia_texto = "RECLUTA"
        descripcion = "**Guerrero en entrenamiento**"
        color = 0xFF6347  # Rojo
    else:
        jerarquia_emoji = "üßë‚Äçüåæ"
        jerarquia_texto = "CIUDADANO"
        descripcion = "**S√∫bdito com√∫n del reino**"
        color = 0x8B4513  # Caf√©
    
    # Crear embed
    embed = discord.Embed(
        title=f"{jerarquia_emoji} **RANGO EN EL REINO**",
        description=f"**{usuario.display_name}**\n{descripcion}",
        color=color
    )
    
    embed.add_field(
        name="üèÜ **JERARQU√çA**",
        value=f"**{jerarquia_texto}**",
        inline=True
    )
    
    embed.add_field(
        name="üî∞ **ROLES**",
        value=f"**{len(usuario.roles) - 1}** roles",
        inline=True
    )
    
    # Obtener florines del usuario
    try:
        florines = await db_manager.get_user_coins(usuario.id)
        embed.add_field(
            name="üí∞ **FLORINES**",
            value=f"**{florines}** monedas",
            inline=True
        )
    except:
        embed.add_field(
            name="üí∞ **FLORINES**",
            value="**0** monedas",
            inline=True
        )
    
    embed.set_thumbnail(url=usuario.display_avatar.url)
    embed.set_footer(text=f"Consultado por {ctx.author.display_name}")
    
    await ctx.send(embed=embed, delete_after=15)
    
    # Borrar comando del usuario
    asyncio.create_task(borrar_comando_usuario(ctx.message, 25))















#  ‚ô£‚úÖavatar normal
@bot.command()
async def avatar(ctx, *, usuario: discord.Member = None):
    """Mostrar el avatar de un usuario"""
    
    # Si no se especifica usuario, mostrar el del autor
    if not usuario:
        usuario = ctx.author
    
    # Crear embed simple
    embed = discord.Embed(
        title=f"üñºÔ∏è Avatar de {usuario.display_name}",
        color=0x8B4513
    )
    
    # Agregar imagen del avatar
    embed.set_image(url=usuario.display_avatar.url)
    
    # Solo enlace directo
    embed.add_field(
        name="üîó Enlace directo",
        value=f"[Descargar avatar]({usuario.display_avatar.url})",
        inline=False
    )
    
    embed.set_footer(text=f"Solicitado por {ctx.author.display_name}")
    
    await ctx.send(embed=embed, delete_after=30)
    
    # Borrar comando del usuario
    asyncio.create_task(borrar_comando_usuario(ctx.message, 25))






#  ‚ô£‚úÖ status
@bot.command()
async def status(ctx):
    """Reporte simple de incidencias del reino"""
    
    # Verificar permisos
    user_level = get_user_level(ctx.author.id, ctx.guild.id)
    if not puede_usar_comando(user_level, "status"):
        await ctx.send("‚õî **Solo los nobles pueden ver el estado del reino.**", delete_after=15)
        return
    
    try:
        # Usuarios ejecutados y expulsados (valores temporales)
        ejecutados = 0  # TODO: Crear tabla sanciones
        expulsados = 0  # TODO: Crear tabla sanciones
        
        # Usuarios en calabozos activos
        calabozos_activos = len(tiempo_calabozos) if 'tiempo_calabozos' in globals() else 0
        
        # Nombre del reino
        nombre_reino = ctx.guild.name
        
        # Crear embed simple
        embed = discord.Embed(
            title="üìä ESTADO DEL REINO",
            description=f"**Estas son las incidencias en el reino, mi se√±or**",
            color=0x8B4513
        )
        
        embed.add_field(
            name="üè∞ **REINO:**",
            value=f"**{nombre_reino}**",
            inline=False
        )
        
        embed.add_field(
            name="‚öîÔ∏è **USUARIOS EJECUTADOS:**",
            value=f"**{ejecutados}** s√∫bditos",
            inline=True
        )
        
        embed.add_field(
            name="üë¢ **USUARIOS EXPULSADOS:**",
            value=f"**{expulsados}** s√∫bditos",
            inline=True
        )
        
        embed.add_field(
            name="üîê **USUARIOS EN CALABOZOS:**",
            value=f"**{calabozos_activos}** prisioneros",
            inline=True
        )
        
        embed.set_footer(text=f"ü§ñ CUY.DEFENSE ‚Ä¢ {datetime.now().strftime('%d/%m/%Y %H:%M')}")
        
        await ctx.send(embed=embed, delete_after=15)
        
    except Exception as e:
        print(f"‚ùå Error en comando status: {e}")
        await ctx.send("‚ùå **Error al obtener el estado del reino.**", delete_after=15)


#  ‚ô£‚úÖtest honeypot
@bot.command()
async def test_honeypot(ctx):
    """Probar el sistema de logs del honeypot"""
    
    # BORRAR EL COMANDO PRIMERO
    try:
        await ctx.message.delete()
    except:
        pass
    
    user_id = ctx.author.id
    config = await db_manager.get_config(ctx.guild.id)
    whitelist = config.get("whitelist", [])
    
    # üè∞ VERIFICAR WHITELIST CON MENSAJE MEDIEVAL CORTO
    if user_id not in whitelist:
        await ctx.send("üè∞ **Solo los comandantes pueden probar las defensas, plebeyo.**", delete_after=10)
        return
    
    # ‚úÖ VERIFICACI√ìN DE PERMISOS ADICIONAL
    if not ctx.author.guild_permissions.administrator:
        return  # NO RESPONDE NADA SI NO EST√Å EN WHITELIST
    
    try:
        honeypot_config = config.get("honeypot", {})
        
        # ‚úÖ AUTO-DELETE DESPU√âS DE 20 SEGUNDOS
        await ctx.send(f"**DEBUG CONFIG:** ```json\n{honeypot_config}```", delete_after=20)
        
        if honeypot_config.get("active", False):
            log_channel_id = honeypot_config.get("log_channel_id")
            log_channel = ctx.guild.get_channel(log_channel_id)
            
            if log_channel:
                await log_channel.send("üß™ **PRUEBA DEL SISTEMA HONEYPOT** - Si ves este mensaje, la configuraci√≥n funciona correctamente.")
                # ‚úÖ AUTO-DELETE DESPU√âS DE 20 SEGUNDOS
                await ctx.send(f"‚úÖ **Mensaje de prueba enviado a {log_channel.mention}**", delete_after=10)
            else:
                # ‚úÖ AUTO-DELETE DESPU√âS DE 20 SEGUNDOS
                await ctx.send("‚ùå **Canal de logs no encontrado**", delete_after=20)
        else:
            # ‚úÖ AUTO-DELETE DESPU√âS DE 20 SEGUNDOS
            await ctx.send("‚ùå **Honeypot no est√° activo**", delete_after=20)
            
    except Exception as e:
        # ‚úÖ AUTO-DELETE DESPU√âS DE 20 SEGUNDOS
        await ctx.send(f"‚ùå **Error:** {e}", delete_after=20)



#  ‚ô£‚úÖprediccion
@bot.command(name="prediccion")
async def prediccion_raids(ctx):
    """Analiza y predice posibles raids en el servidor"""
    # BORRAR COMANDO DEL USUARIO EN 60 SEGUNDOS
    asyncio.create_task(borrar_comando_usuario(ctx.message, 60))
    
    user_level = get_user_level(ctx.author.id, ctx.guild.id)
    
    # Solo administradores, VIPs y SUPERIORES pueden usar este comando
    if user_level not in ["VIP", "ADMIN", "SUPERIOR"]:  # ‚Üê AGREGADO "SUPERIOR"
        await enviar_rechazo_recluta(ctx)
        return

    # An√°lisis de riesgo de raid
    guild = ctx.guild
    
    # M√©tricas para an√°lisis
    ahora = datetime.now(timezone.utc)
    miembros_nuevos = len([m for m in guild.members if m.joined_at and (ahora - m.joined_at).days < 1])
    total_miembros = guild.member_count
    ratio_nuevos = (miembros_nuevos / total_miembros) * 100 if total_miembros > 0 else 0

    # Determinar nivel de riesgo
    if ratio_nuevos > 80:
        riesgo = "üî¥ **ALTO RIESGO**"
        descripcion = "‚ö†Ô∏è Actividad sospechosa detectada. M√∫ltiples usuarios nuevos."
        recomendacion = "üõ°Ô∏è **Recomendaci√≥n:** Activar modo lockdown preventivo"
        color = discord.Color.red()
    elif ratio_nuevos > 50:
        riesgo = "üü° **RIESGO MODERADO**"
        descripcion = "‚ö° Incremento notable en usuarios nuevos"
        recomendacion = "üëÄ **Recomendaci√≥n:** Monitorear actividad de cerca"
        color = discord.Color.orange()
    else:
        riesgo = "üü¢ **RIESGO BAJO**"
        descripcion = "‚úÖ Actividad normal del servidor"
        recomendacion = "üòå **Todo tranquilo en el reino**"
        color = discord.Color.green()

    embed = discord.Embed(
        title="üîÆ PREDICCI√ìN DE RAIDS",
        description=f"üìä **An√°lisis de seguridad para {guild.name}**",
        color=color
    )
    
    embed.add_field(
        name="üéØ Nivel de Riesgo",
        value=riesgo,
        inline=False
    )
    
    embed.add_field(
        name="üìà M√©tricas",
        value=f"üë• **Miembros nuevos (24h):** {miembros_nuevos}\n"
              f"üìä **Total de miembros:** {total_miembros}\n"
              f"üìâ **Ratio:** {ratio_nuevos:.1f}%",
        inline=True
    )
    
    embed.add_field(
        name="üí° An√°lisis",
        value=descripcion,
        inline=True
    )
    
    embed.add_field(
        name="üõ°Ô∏è Recomendaci√≥n",
        value=recomendacion,
        inline=False
    )
    
    embed.set_footer(text="üîç An√°lisis basado en patrones de actividad recientes")
    
    await ctx.send(embed=embed, delete_after=40)



#  ‚ô£‚úÖinvestigar
@bot.command(name="investigar")
async def investigar(ctx, *, usuario: discord.Member = None):
    """Investiga el historial y actividad de un ciudadano del reino"""
    # BORRAR COMANDO DEL USUARIO EN 60 SEGUNDOS (1 MINUTO)
    asyncio.create_task(borrar_comando_usuario(ctx.message, 25))
    
    # VERIFICAR PERMISOS CON SISTEMA UNIFICADO
    user_level = get_user_level(ctx.author.id, ctx.guild.id)
    
    # 1. CIUDADANOS NO PUEDEN USAR EL COMANDO
    if user_level == "CIUDADANO":
        frase = random.choice(FRASES_NO_WHITELIST)
        await ctx.send(f"**{frase}**", delete_after=25)
        return
    
    # 2. RECLUTAS TAMPOCO PUEDEN (SON MUY J√ìVENES)
    if user_level == "RECLUTA":
        await ctx.send("‚öîÔ∏è **Te falta mucho para manejar estas √≥rdenes, recluta. Solo los veteranos pueden investigar ciudadanos.**", delete_after=25)
        return
    
    # 3. VIP MANTIENEN SU SISTEMA ESPECIAL
    if user_level == "VIP":
        frase = random.choice(WHITELIST_VIP[ctx.author.id])
        await ctx.send(frase, delete_after=25)
        return
    
    # 4. SOLO SUPERIORES PUEDEN USAR INVESTIGAR
    if user_level != "SUPERIOR":
        await ctx.send("üëë **Solo los comandantes supremos pueden investigar ciudadanos del reino.**", delete_after=25)
        return
    
    if not usuario:
        await ctx.send("üïµÔ∏è‚Äç‚ôÇÔ∏è **¬øA qu√© ciudadano del reino deseas investigar?** Uso: `!investigar @usuario`", delete_after=25)
        return
    
    # Recopilar datos de investigaci√≥n CON AWAIT
    datos_investigacion = await recopilar_datos_investigacion(usuario, ctx)
    
    # Crear vista interactiva
    view = InvestigacionView(ctx, usuario, datos_investigacion)
    
    # Crear embed principal
    embed = await view.crear_embed_principal()
    
    # Enviar mensaje
    mensaje = await ctx.send(embed=embed, view=view, delete_after=50)
    view.message = mensaje



#  ‚ô£‚úÖmenu
@bot.command()
async def menu(ctx):
    """Panel de configuraci√≥n AntiRaid CUY"""
    # Borrar comando del usuario en 25 segundos
    asyncio.create_task(borrar_comando_usuario(ctx.message, 25))
    
    # VERIFICAR PERMISOS CON SISTEMA UNIFICADO
    user_level = get_user_level(ctx.author.id, ctx.guild.id)
    print(f"DEBUG: User level para {ctx.author.name}: {user_level}")
    
    # Obtener configuraci√≥n del servidor
    config = await db_manager.get_config(ctx.guild.id)
    
    # 1. CIUDADANOS - FRASE DE RECHAZO
    if user_level == "CIUDADANO":
        frase = random.choice(FRASES_NO_WHITELIST)
        await ctx.send(f"**{frase}**", delete_after=10)
        return
    
    # 2. VIP - FRASES PERSONALIZADAS
    if user_level == "VIP":
        frase = random.choice(WHITELIST_VIP[ctx.author.id])
        await ctx.send(frase, delete_after=10)
        return
    
    # 3. RECLUTAS - VER EMBED Y BOTONES PERO SIN PODER MODIFICAR
    if user_level == "RECLUTA":
        print("DEBUG: ENTRANDO EN SECCI√ìN RECLUTA")
        await ctx.send("**Te mostrar√© las defensas del castillo, pero no podr√°s tocar nada**", delete_after=20)
        
        # Crear embed informativo para reclutas
        embed = discord.Embed(
            title="üõ°Ô∏è Panel AntiRaid CUY - Vista de Recluta",
            description="**Panel de Observaci√≥n**\n\n"
                       "Puedes ver las configuraciones y botones del reino,\n"
                       "pero solo los comandantes superiores pueden hacer cambios.\n\n"
                       "**Los botones no funcionar√°n para tu rango.**",
            color=0x4B0082  # Color p√∫rpura para reclutas
        )
        
        # Mostrar canal de logs actual
        canal_logs_id = config.get("canal_logs_id")
        if canal_logs_id:
            canal = ctx.guild.get_channel(canal_logs_id)
            if canal:
                embed.add_field(name="üìù Canal de Logs", value=canal.mention, inline=True)
        
        # Mostrar whitelist
        whitelist = config.get("whitelist", [])
        if whitelist:
            whitelist_mentions = []
            for user_id in whitelist[:5]:  # Mostrar solo los primeros 5
                user = bot.get_user(user_id)
                if user:
                    whitelist_mentions.append(user.mention)
            
            if whitelist_mentions:
                embed.add_field(name="üëë WhiteList", 
                              value="\n".join(whitelist_mentions) + 
                                   (f"\n+{len(whitelist)-5} m√°s..." if len(whitelist) > 5 else ""), 
                              inline=True)
        
        # Crear vista con botones DESHABILITADOS para reclutas
        view = MenuProtecciones(ctx.guild.id, config, recluta_mode=True)
        
        embed.set_footer(text="‚öîÔ∏è Rango: Recluta - Los botones no funcionan para ti")
        await ctx.send(embed=embed, view=view, delete_after=60)
        return
    
    # 4. SUPERIORES - PANEL COMPLETO CON FUNCIONALIDAD
    if user_level == "SUPERIOR":
        print("DEBUG: ENTRANDO EN SECCI√ìN SUPERIOR")
        await ctx.send("**Las puertas est√°n abiertas siempre para ti**", delete_after=10)
        
        # Verificar permisos de admin de Discord
        if not ctx.author.guild_permissions.administrator:
            await ctx.send("‚ùå Necesitas una orden real para esta accion.", delete_after=7)
            return
        
        # Crear vista completa funcional
        view = MenuProtecciones(ctx.guild.id, config)
        
        embed = discord.Embed(
            title="üõ°Ô∏è Panel AntiRaid CUY",
            description="Bienvenido Soy el Cuy AntiRaid, activa o desactiva las opciones y elije la sanci√≥n.\n\n"
                       "Todo aquel que no est√© en la WhiteList que realice las siguientes acciones, ser√° sancionado.\n\n"
                       "**Mi deber es mantener protegido este Discord por mi f√ºhrer Cirilo.**",
            color=discord.Color.red()
        )
        
        # Mostrar canal de logs actual
        canal_logs_id = config.get("canal_logs_id")
        if canal_logs_id:
            canal = ctx.guild.get_channel(canal_logs_id)
            if canal:
                embed.add_field(name="üìù Canal de Logs", value=canal.mention, inline=True)
        
        # Mostrar whitelist
        whitelist = config.get("whitelist", [])
        if whitelist:
            whitelist_mentions = []
            for user_id in whitelist[:5]:  # Mostrar solo los primeros 5
                user = bot.get_user(user_id)
                if user:
                    whitelist_mentions.append(user.mention)
            
            if whitelist_mentions:
                embed.add_field(name="üëë WhiteList", 
                              value="\n".join(whitelist_mentions) + 
                                   (f"\n+{len(whitelist)-5} m√°s..." if len(whitelist) > 5 else ""), 
                              inline=True)
        
        await ctx.send(embed=embed, view=view, delete_after=30)
        return
    
    # Fallback (no deber√≠a llegar aqu√≠)
    await ctx.send("‚ùå **Error determinando permisos.**", delete_after=10)



#  ‚ô£‚úÖwhitelist add
@bot.command()
@commands.has_permissions(administrator=True)
async def whitelist_add(ctx, member: discord.Member):
    """Agregar usuario a la whitelist"""
    # VERIFICACI√ìN DE RECLUTA
    if es_recluta(ctx.author.id):
        await enviar_rechazo_recluta(ctx)
        return
    
    # Borrar comando del usuario en 25 segundos
    asyncio.create_task(borrar_comando_usuario(ctx.message, 25))
    
    user_id = ctx.author.id
    config = await db_manager.get_config(ctx.guild.id)
    whitelist = config.get("whitelist", [])
    
    # VERIFICAR VIP SOLO (solo frases personalizadas, sin comandos)
    if user_id in WHITELIST_VIP and user_id not in whitelist:
        frase = random.choice(WHITELIST_VIP[user_id])
        await ctx.send(frase, delete_after=10)
        return
    
    # VERIFICAR NO-WHITELIST (frases de rechazo)
    if user_id not in whitelist:
        frase = random.choice(FRASES_NO_WHITELIST)
        await ctx.send(f"**{frase}**", delete_after=10)
        return
    
    # VERIFICAR WHITELIST (frase espec√≠fica)
    if user_id in whitelist:
        await ctx.send("**Bienvenido guardian del reino**", delete_after=10)
        await asyncio.sleep(3)
    
    try:
        if member.id not in whitelist:
            whitelist.append(member.id)
            config["whitelist"] = whitelist
            await db_manager.save_config(ctx.guild.id, config)
            
            embed = discord.Embed(
                title="‚öîÔ∏è Un nuevo guardian a llegado",
                description=f"**Bienvenido guerrero {member.mention}**\n**fuiste elegido como guardian del castillo**",
                color=discord.Color.gold()
            )
            
            # IMAGEN DEL PERFIL AL COSTADO (peque√±a)
            embed.set_thumbnail(url=member.display_avatar.url)
            
            # IMAGEN DE INTERNET ABAJO
            embed.set_image(url="https://i.ibb.co/VWCs84RQ/Captura-de-pantalla-2025-06-06-084639.png")  # ‚Üê CAMBIA ESTA URL
            
            embed.set_footer(text="üõ°Ô∏è Guardi√°n del Reino")
            await ctx.send(embed=embed, delete_after=10)
        else:
            await ctx.send("‚ùå **Este guerrero ya sirve en nuestras filas, mi se√±or.**", delete_after=10)
            
    except Exception as e:
        print(f"Error agregando a whitelist: {e}")  # ‚Üê CORREGIDO: logger por print
        await ctx.send("‚ùå **No pude reclutar al guerrero, mi se√±or.**", delete_after=10)

@whitelist_add.error
async def whitelist_add_error(ctx, error):
    # Borrar comando del usuario en 25 segundos
    asyncio.create_task(borrar_comando_usuario(ctx.message, 25))
    
    user_id = ctx.author.id
    config = await db_manager.get_config(ctx.guild.id)
    whitelist = config.get("whitelist", [])
    
    if isinstance(error, commands.MissingPermissions):
        if user_id in WHITELIST_VIP and user_id not in whitelist:
            frase = random.choice(WHITELIST_VIP[user_id])
            await ctx.send(frase, delete_after=10)
        elif user_id not in whitelist:
            frase = random.choice(FRASES_NO_WHITELIST)
            await ctx.send(f"**{frase}**", delete_after=10)
        else:
            await ctx.send("‚ùå **No tienes autoridad para reclutar guerreros, mi se√±or.**", delete_after=10)
    elif isinstance(error, commands.MissingRequiredArgument):
        if user_id in whitelist:
            await ctx.send("**A llegado un nuevo guardian al castillo? Cual es su nombres? Uso: !whitelist_add @usuario**", delete_after=10)
        elif user_id in WHITELIST_VIP:
            frase = random.choice(WHITELIST_VIP[user_id])
            await ctx.send(frase, delete_after=10)
        else:
            frase = random.choice(FRASES_NO_WHITELIST)
            await ctx.send(f"**{frase}**", delete_after=10)
    elif isinstance(error, commands.BadArgument):
        if user_id in whitelist:
            await ctx.send("**No encuentro a ese guerrero en el reino, mi se√±or. Aseg√∫rate de mencionarlo correctamente.**", delete_after=10)
        elif user_id in WHITELIST_VIP:
            frase = random.choice(WHITELIST_VIP[user_id])
            await ctx.send(frase, delete_after=10)
        else:
            frase = random.choice(FRASES_NO_WHITELIST)
            await ctx.send(f"**{frase}**", delete_after=10)


# ‚ô£‚úÖ nobles - Mostrar lista de whitelist
@bot.command(aliases=['noble'])
async def nobles(ctx):
    """Mostrar la lista de nobles del reino (whitelist)"""
    
    # Verificar permisos (solo SUPERIOR y VIP pueden ver la lista)
    user_level = get_user_level(ctx.author.id, ctx.guild.id)
    if user_level not in ["SUPERIOR", "VIP"]:
        await ctx.send("‚õî **Solo los nobles pueden ver la lista de s√∫bditos privilegiados.**", delete_after=15)
        return
    
    try:
        # Recopilar TODOS los user_ids √∫nicos
        all_user_ids = set()
        
        # 1. SUPERIORES (hardcodeados)
        whitelist_hardcoded = [744653546435379243, 461049946682949632]
        all_user_ids.update(whitelist_hardcoded)
        
        # 2. VIP (variable global)
        if 'WHITELIST_VIP' in globals() and WHITELIST_VIP:
            all_user_ids.update(WHITELIST_VIP)
        
        # 3. RECLUTAS (base de datos)
        try:
            conn = sqlite3.connect("bot_config.db")
            cursor = conn.execute("SELECT config FROM guild_config WHERE guild_id = ?", (ctx.guild.id,))
            row = cursor.fetchone()
            conn.close()
            
            if row:
                config = json.loads(row[0])
                whitelist_db = config.get("whitelist", [])
                all_user_ids.update(whitelist_db)
        except:
            pass  # Ignorar errores de BD
        
        # Verificar si hay nobles
        if not all_user_ids:
            embed = discord.Embed(
                title="üëë NOBLES DEL REINO",
                description="**No hay nobles registrados en este reino.**",
                color=0xFFD700
            )
            await ctx.send(embed=embed, delete_after=15)
            return
        
        # Clasificar usuarios seg√∫n su NIVEL M√ÅS ALTO
        superiores = []
        vips = []
        reclutas = []
        
        for user_id in all_user_ids:
            nivel = get_user_level(user_id, ctx.guild.id)
            
            try:
                user = await bot.fetch_user(user_id)
                user_texto = f"<@{user_id}> (`{user.name}`)"
            except:
                user_texto = f"<@{user_id}> (`Usuario desconocido`)"
            
            if nivel == "SUPERIOR":
                superiores.append(user_texto)
            elif nivel == "VIP":
                vips.append(user_texto)
            elif nivel == "RECLUTA":
                reclutas.append(user_texto)
        
        # Crear embed con la lista
        embed = discord.Embed(
            title="üëë NOBLES DEL REINO",
            description="**Lista de s√∫bditos con privilegios especiales:**",
            color=0xFFD700
        )
        
        # A√±adir cada nivel al embed
        if superiores:
            embed.add_field(
                name="üëë **SUPERIORES**",
                value="\n".join(superiores),
                inline=False
            )
        
        if vips:
            embed.add_field(
                name="üíé **VIP**",
                value="\n".join(vips),
                inline=False
            )
        
        if reclutas:
            embed.add_field(
                name="‚öîÔ∏è **RECLUTAS**",
                value="\n".join(reclutas),
                inline=False
            )
        
        total_nobles = len(superiores) + len(vips) + len(reclutas)
        embed.set_footer(text=f"ü§ñ CUY.DEFENSE ‚Ä¢ Total: {total_nobles} nobles √∫nicos")
        
        await ctx.send(embed=embed, delete_after=30)
        
    except Exception as e:
        print(f"‚ùå Error en comando nobles: {e}")
        await ctx.send("‚ùå **Error al obtener la lista de nobles.**", delete_after=15)

#  ‚ô£‚úÖwhitelist remove
@bot.command()
@commands.has_permissions(administrator=True)
async def whitelist_remove(ctx, member: discord.Member):
    """Remover usuario de la whitelist"""
    # VERIFICACI√ìN DE RECLUTA
    if es_recluta(ctx.author.id):
        await enviar_rechazo_recluta(ctx)
        return
    
    # Borrar comando del usuario en 25 segundos
    asyncio.create_task(borrar_comando_usuario(ctx.message, 25))
    
    user_id = ctx.author.id
    config = await db_manager.get_config(ctx.guild.id)
    whitelist = config.get("whitelist", [])
    
    # VERIFICAR VIP SOLO (solo frases personalizadas, sin comandos)
    if user_id in WHITELIST_VIP and user_id not in whitelist:
        frase = random.choice(WHITELIST_VIP[user_id])
        await ctx.send(frase, delete_after=10)
        return
    
    # VERIFICAR NO-WHITELIST (frases de rechazo)
    if user_id not in whitelist:
        frase = random.choice(FRASES_NO_WHITELIST)
        await ctx.send(f"**{frase}**", delete_after=10)
        return
    
    # VERIFICAR WHITELIST (frase espec√≠fica)
    if user_id in whitelist:
        await ctx.send("**Ya no eres digno de la armadura real**", delete_after=10)
        await asyncio.sleep(3)
    
    try:
        if member.id in whitelist:
            whitelist.remove(member.id)
            config["whitelist"] = whitelist
            await db_manager.save_config(ctx.guild.id, config)
            
            embed = discord.Embed(
                title="‚öîÔ∏è Guardian Expulsado",
                description=f"**El guardian {member.mention}**\n**fue borrado de la whitelist**",
                color=discord.Color.red()
            )
            embed.set_footer(text="üö´ Expulsado del Reino")
            await ctx.send(embed=embed, delete_after=10)
        else:
            await ctx.send("‚ùå **Este guerrero no est√° en nuestras filas, mi se√±or.**", delete_after=10)
            
    except Exception as e:
        logger.error(f"Error removiendo de whitelist: {e}")
        await ctx.send("‚ùå **No pude expulsar al guerrero, mi se√±or.**", delete_after=10)

@whitelist_remove.error
async def whitelist_remove_error(ctx, error):
    # Borrar comando del usuario en 25 segundos
    asyncio.create_task(borrar_comando_usuario(ctx.message, 25))
    
    user_id = ctx.author.id
    config = await db_manager.get_config(ctx.guild.id)
    whitelist = config.get("whitelist", [])
    
    if isinstance(error, commands.MissingPermissions):
        if user_id in WHITELIST_VIP and user_id not in whitelist:
            frase = random.choice(WHITELIST_VIP[user_id])
            await ctx.send(frase, delete_after=10)
        elif user_id not in whitelist:
            frase = random.choice(FRASES_NO_WHITELIST)
            await ctx.send(f"**{frase}**", delete_after=10)
        else:
            await ctx.send("‚ùå **No tienes autoridad para expulsar guerreros, .**", delete_after=10)
    elif isinstance(error, commands.MissingRequiredArgument):
        if user_id in whitelist:
            await ctx.send("**Alguien ya no es digno? dime el nombre y lo sacare del registro. Uso: !whitelist_remove @usuario**", delete_after=10)
        elif user_id in WHITELIST_VIP:
            frase = random.choice(WHITELIST_VIP[user_id])
            await ctx.send(frase, delete_after=10)
        else:
            frase = random.choice(FRASES_NO_WHITELIST)
            await ctx.send(f"**{frase}**", delete_after=10)
    elif isinstance(error, commands.BadArgument):
        if user_id in whitelist:
            await ctx.send("**No encuentro a ese guerrero en el reino, mi se√±or. Aseg√∫rate de mencionarlo correctamente.**", delete_after=10)
        elif user_id in WHITELIST_VIP:
            frase = random.choice(WHITELIST_VIP[user_id])
            await ctx.send(frase, delete_after=10)
        else:
            frase = random.choice(FRASES_NO_WHITELIST)
            await ctx.send(f"**{frase}**", delete_after=10)

#  ‚ô£‚úÖreputacion
@bot.command()
async def reputacion(ctx, miembro: discord.Member = None):
    """Consultar reputaci√≥n y datos reales de un usuario en ESTE servidor"""
    # Borrar comando del usuario en 25 segundos
    asyncio.create_task(borrar_comando_usuario(ctx.message, 25))
    
    user_id = ctx.author.id
    
    # Obtener configuraci√≥n del servidor
    config = await db_manager.get_config(ctx.guild.id)
    whitelist = config.get("whitelist", [])
    
    # VERIFICAR VIP SOLO (solo frases personalizadas, sin comandos)
    if user_id in WHITELIST_VIP and user_id not in whitelist:
        frase = random.choice(WHITELIST_VIP[user_id])
        await ctx.send(frase, delete_after=10)
        return
    
    # VERIFICAR NO-WHITELIST (frases de rechazo)
    if user_id not in whitelist:
        frase = random.choice(FRASES_NO_WHITELIST)
        await ctx.send(f"**{frase}**", delete_after=10)
        return
    
    # VERIFICAR WHITELIST (frase espec√≠fica + continuar)
    if user_id in whitelist:
        # Verificar permisos de administrador SOLO para whitelist
        if not ctx.author.guild_permissions.administrator:
            await ctx.send("**üõ°Ô∏è Solo los nobles con poderes administrativos pueden consultar reputaciones**", delete_after=10)  
            return
        await ctx.send("**Consultando los registros del reino...**", delete_after=10)
    
    if miembro is None:
        await ctx.send("**‚öñÔ∏è Debes mencionar a un usuario para consultar su reputaci√≥n**", delete_after=10)
        return
    
    try:
        # OBTENER DATOS REALES DE LA BASE DE DATOS
        historial_real = await db_manager.obtener_historial_usuario(ctx.guild.id, miembro.id)
        
        # CALCULAR DATOS REALES DEL SERVIDOR
        dias_en_servidor = (datetime.now(timezone.utc) - miembro.joined_at).days if miembro.joined_at else 0
        dias_cuenta = (datetime.now(timezone.utc) - miembro.created_at).days
        
        # DETERMINAR NIVEL BASADO EN DATOS REALES
        total_sanciones = historial_real['total_sanciones']
        if total_sanciones == 0:
            nivel_reputacion = "üü¢ EXCELENTE"
            color = 0x00FF00
            confianza = 100
        elif total_sanciones <= 2:
            nivel_reputacion = "üü° BUENA"
            color = 0xFFFF00
            confianza = 80
        elif total_sanciones <= 5:
            nivel_reputacion = "üü† REGULAR"
            color = 0xFF8C00
            confianza = 50
        else:
            nivel_reputacion = "üî¥ PROBLEM√ÅTICA"
            color = 0xFF0000
            confianza = 20
        
        # ESTADO ACTUAL REAL
        estado_usuario = "üü¢ Online"
        if miembro.status == discord.Status.idle:
            estado_usuario = "üü° Ausente"
        elif miembro.status == discord.Status.dnd:
            estado_usuario = "üî¥ No molestar"
        elif miembro.status == discord.Status.offline:
            estado_usuario = "‚ö´ Desconectado"
        
        # PERMISOS REALES
        permisos_importantes = []
        if miembro.guild_permissions.administrator:
            permisos_importantes.append("Admin")
        if miembro.guild_permissions.manage_guild:
            permisos_importantes.append("Gestionar servidor")
        if miembro.guild_permissions.manage_roles:
            permisos_importantes.append("Gestionar roles")
        if miembro.guild_permissions.kick_members:
            permisos_importantes.append("Expulsar")
        if miembro.guild_permissions.ban_members:
            permisos_importantes.append("Banear")
        
        permisos_texto = ", ".join(permisos_importantes) if permisos_importantes else "B√°sicos"
        
        # Crear embed con DATOS REALES
        embed = discord.Embed(
            title=f"‚öñÔ∏è Reputaci√≥n de {miembro.display_name}",
            description=f"Datos reales del servidor **{ctx.guild.name}**",
            color=color
        )
        
        embed.add_field(
            name="üìä Nivel de Reputaci√≥n",
            value=f"{nivel_reputacion}\n{confianza}% confianza",
            inline=True
        )
        
        embed.add_field(
            name="üö® Historial de Sanciones",
            value=f"**Total:** {historial_real['total_sanciones']}\n**Warns:** {historial_real['total_warns']}\n**Timeouts:** {historial_real['total_timeouts']}\n**Kicks:** {historial_real['total_kicks']}\n**Bans:** {historial_real['total_bans']}",
            inline=True
        )
        
        embed.add_field(
            name="üìÖ Informaci√≥n Temporal",
            value=f"**En servidor:** {dias_en_servidor} d√≠as\n**Cuenta:** {dias_cuenta} d√≠as\n**Estado:** {estado_usuario}",
            inline=True
        )
        
        embed.add_field(
            name="üé≠ Roles y Permisos",
            value=f"**Roles:** {len(miembro.roles) - 1}\n**Rol m√°s alto:** {miembro.top_role.name}\n**Permisos:** {permisos_texto}",
            inline=True
        )
        
        embed.add_field(
            name="‚ö° √öltima Sanci√≥n",
            value=f"**Tipo:** {historial_real['ultima_sancion']}\n**Raz√≥n:** {historial_real['razon_ultima'][:50]}..." if len(historial_real['razon_ultima']) > 50 else historial_real['razon_ultima'],
            inline=True
        )
        
        embed.add_field(
            name="üéØ Informaci√≥n Adicional",
            value=f"**ID:** {miembro.id}\n**Apodo:** {miembro.nick if miembro.nick else 'Sin apodo'}\n**Booster:** {'S√≠' if miembro.premium_since else 'No'}",
            inline=True
        )
        
        embed.set_thumbnail(url=miembro.avatar.url if miembro.avatar else miembro.default_avatar.url)
        embed.set_footer(text=f"Consultado por {ctx.author.display_name} ‚Ä¢ Solo datos del servidor actual")
        
        await ctx.send(embed=embed, delete_after=25)
            
    except Exception as e:
        print(f"Error en reputacion: {e}")
        await ctx.send("‚ùå **No pude consultar la reputaci√≥n, mi se√±or.**", delete_after=25)

#  ‚ô£‚úÖconfig
@bot.command(name="config")
async def configurar_bot(ctx, tipo=None, *, valor=None):
    """Configurar el bot"""
    if not await verificar_sin_frases(ctx):
        return
    
    if not tipo:
        await ctx.send("üìù **Configuraciones disponibles:**\n‚Ä¢ `!config logs #canal` - Configurar canal de logs\n‚Ä¢ `!config sancion ban/kick` - Tipo de sanci√≥n", delete_after=60)
        return
    
    config = await db_manager.get_config(ctx.guild.id)
    
    if tipo.lower() == "logs":
        if not valor:
            await ctx.send("‚ùå **Uso:** `!config logs #canal`", delete_after=10)
            return
        
        # Buscar canal mencionado
        canal = None
        if ctx.message.channel_mentions:
            canal = ctx.message.channel_mentions[0]
        
        if not canal:
            await ctx.send("‚ùå **Debes mencionar un canal v√°lido**", delete_after=10)
            return
        
        config["canal_logs_id"] = canal.id
        await db_manager.save_config(ctx.guild.id, config)
        
        await ctx.send(f"‚úÖ **Canal de logs configurado:** {canal.mention}", delete_after=60)
    
    elif tipo.lower() == "sancion":
        if not valor or valor.lower() not in ["ban", "kick"]:
            await ctx.send("‚ùå **Uso:** `!config sancion ban` o `!config sancion kick`", delete_after=10)
            return
        
        config["sancion"] = valor.lower()
        await db_manager.save_config(ctx.guild.id, config)
        
        await ctx.send(f"‚úÖ **Tipo de sanci√≥n configurado:** {valor.upper()}", delete_after=60)
    
    else:
        await ctx.send("‚ùå **Configuraci√≥n no v√°lida**", delete_after=10)


#  ‚ô£‚úÖpanel
@bot.command(name="panel")
async def mostrar_panel(ctx):
    """Mostrar panel de control principal"""
    # Borrar comando del usuario en 25 segundos
    asyncio.create_task(borrar_comando_usuario(ctx.message, 25))
    
    user_level = get_user_level(ctx.author.id, ctx.guild.id)
    
    if user_level == "VIP":
        frase = random.choice(WHITELIST_VIP[ctx.author.id])
        await ctx.send(frase, delete_after=10)
        return
    elif user_level in ["SUPERIOR", "RECLUTA"]:
        embed = discord.Embed(
            title="üõ°Ô∏è Panel de Control AntiRaid",
            description="‚ö†Ô∏è **Para protecciones individuales usa `!menu`**\n**Este panel controla la detecci√≥n autom√°tica de raids**",
            color=discord.Color.gold()
        )
        
        if user_level == "RECLUTA":
            embed.add_field(
                name="‚öîÔ∏è Acceso de Recluta",
                value="Tienes acceso limitado a funciones b√°sicas del bot",
                inline=False
            )
        
        view = SimpleRaidView(ctx.author.id)  # ‚Üê Pasar user_id
        await ctx.send(embed=embed, view=view, delete_after=30)  # ‚Üê 30 segundos
    else:
        frase = random.choice(FRASES_NO_WHITELIST)
        await ctx.send(f"**{frase}**", delete_after=10)

# Nueva clase simplificada
class SimpleRaidView(View):
    def __init__(self, user_id):
        super().__init__(timeout=30)  # ‚Üê 30 segundos
        self.user_id = user_id  # ‚Üê Guardar quien ejecut√≥ el comando

    @discord.ui.button(label="üö® Detecci√≥n Autom√°tica", style=discord.ButtonStyle.success)
    async def raid_mode_button(self, interaction: discord.Interaction, button: Button):
        # Verificar que solo el usuario que ejecut√≥ el comando pueda usarlo
        if interaction.user.id != self.user_id:
            await interaction.response.send_message("‚ùå **Solo quien ejecut√≥ el comando puede usar este bot√≥n.**", ephemeral=True)
            return
            
        if not await solo_verificar_whitelist_interaction(interaction):
            return
            
        config = await db_manager.get_config(interaction.guild_id)
        
        # Toggle raid mode detection
        nuevo_estado = not config.get("raid_mode", False)
        config["raid_mode"] = nuevo_estado
        
        await db_manager.save_config(interaction.guild_id, config)
        
        if nuevo_estado:
            # ACTIVAR - Verde
            button.style = discord.ButtonStyle.success
            button.label = "üü¢ Detecci√≥n ACTIVA"
            
            embed = discord.Embed(
                title="üü¢ DETECCI√ìN AUTOM√ÅTICA ACTIVADA",
                description="**El bot detectar√° raids autom√°ticamente**\n‚Ä¢ Umbral: 10+ usuarios en 5 segundos\n‚Ä¢ Acci√≥n: Activar√° modo raid autom√°ticamente\n‚Ä¢ Estado: Vigilancia activa",
                color=discord.Color.green()
            )
        else:
            # DESACTIVAR - Rojo
            button.style = discord.ButtonStyle.danger
            button.label = "üî¥ Detecci√≥n INACTIVA"
            
            embed = discord.Embed(
                title="üî¥ DETECCI√ìN AUTOM√ÅTICA DESACTIVADA",
                description="**El bot NO detectar√° raids autom√°ticamente**\n‚Ä¢ Sin vigilancia autom√°tica\n‚Ä¢ Los raids no se detectar√°n\n‚Ä¢ Estado: Detecci√≥n deshabilitada",
                color=discord.Color.red()
            )
        
        await interaction.response.edit_message(embed=embed, view=self)

#  ‚ô£‚úÖcanal seguro
@bot.command(name="canal_seguro")
async def canal_seguro(ctx, accion=None):
    """Gestionar canales seguros con men√∫s interactivos"""
    # BORRAR COMANDO DEL USUARIO EN 25 SEGUNDOS
    asyncio.create_task(borrar_comando_usuario(ctx.message, 25))
    
    user_level = get_user_level(ctx.author.id, ctx.guild.id)
    
    # Verificar permisos
    if not puede_usar_comando(user_level, "canal_seguro"):
        if user_level == "VIP":
            frase = random.choice(WHITELIST_VIP[ctx.author.id])
            await ctx.send(frase, delete_after=10)
            return
        elif user_level == "CIUDADANO":
            frase = random.choice(FRASES_NO_WHITELIST)
            await ctx.send(f"**{frase}**", delete_after=10)
            return
        else:  # RECLUTA sin acceso a este comando
            await enviar_rechazo_recluta(ctx)
            return
    
    if not accion:
        await ctx.send("üè∞ **¬øQu√© deseas hacer con los canales seguros?** Uso: `!canal_seguro add/remove/list`", delete_after=10)
        return
    
    # Obtener configuraci√≥n actual
    config = await db_manager.get_config(ctx.guild.id)
    canales_seguros = config.get("canales_seguros", [])
    
    # üîß LIMPIAR DUPLICADOS Y CANALES INV√ÅLIDOS
    canales_seguros = list(set(canales_seguros))  # Remover duplicados
    canales_validos = []
    for canal_id in canales_seguros:
        if ctx.guild.get_channel(canal_id):  # Solo mantener canales existentes
            canales_validos.append(canal_id)
    canales_seguros = canales_validos
    config["canales_seguros"] = canales_seguros
    await db_manager.save_config(ctx.guild.id, config)
    
    if accion.lower() == "add":
        # Crear selector de canales para agregar
        options = []
        for channel in ctx.guild.channels:
            if channel.id not in canales_seguros and (channel.type == discord.ChannelType.text or channel.type == discord.ChannelType.voice):
                options.append(discord.SelectOption(
                    label=f"#{channel.name}" if channel.type == discord.ChannelType.text else f"üîä{channel.name}",
                    description=f"üõ°Ô∏è Proteger el canal {'de texto' if channel.type == discord.ChannelType.text else 'de voz'} {channel.name}",
                    value=str(channel.id),
                    emoji="üîí"
                ))
                        
        if not options:
            await ctx.send("üè∞ **Todos los canales del reino ya est√°n protegidos, mi se√±or**", delete_after=10)
            return
               
        # Limitar a 25 opciones (l√≠mite de Discord)
        if len(options) > 25:
            options = options[:25]
        
        select = CanalAgregarSelect(options, ctx.author.id, ctx.guild.id)
        view = discord.ui.View()
        view.add_item(select)
        
        embed = discord.Embed(
            title="üõ°Ô∏è Agregar Canal Seguro",
            description="‚öîÔ∏è **Selecciona qu√© canal del reino deseas marcar como seguro**\nüí° *Los canales seguros NO se bloquean con !lock*",
            color=discord.Color.green()
        )
        
        await ctx.send(embed=embed, view=view, delete_after=20)
    
    elif accion.lower() == "remove":
        if not canales_seguros:
            await ctx.send("üè∞ **No hay canales seguros para remover del reino, mi se√±or**", delete_after=10)
            return
        
        # Crear selector de canales seguros para remover
        options = []
        for canal_id in canales_seguros:
            channel = ctx.guild.get_channel(canal_id)
            if channel:
                options.append(discord.SelectOption(
                    label=f"#{channel.name}" if channel.type == discord.ChannelType.text else f"üîä{channel.name}",
                    description=f"üó°Ô∏è Desproteger el canal {'de texto' if channel.type == discord.ChannelType.text else 'de voz'} {channel.name}",
                    value=str(channel.id),
                    emoji="üóëÔ∏è"
                ))
        
        if not options:
            await ctx.send("üè∞ **No hay canales v√°lidos para remover, mi se√±or**", delete_after=10)
            return
        
        select = CanalRemoverSelect(options, ctx.author.id, ctx.guild.id)
        view = discord.ui.View()
        view.add_item(select)
        
        embed = discord.Embed(
            title="üó°Ô∏è Remover Canal Seguro",
            description="‚öîÔ∏è **Selecciona qu√© canal deseas desproteger del reino**",
            color=discord.Color.red()
        )
        
        await ctx.send(embed=embed, view=view, delete_after=30)
    
    elif accion.lower() == "list":
        if not canales_seguros:
            embed = discord.Embed(
                title="üè∞ Canales Seguros del Reino",
                description="‚öîÔ∏è **No hay canales protegidos en el reino**\n\nüõ°Ô∏è Usa `!canal_seguro add` para marcar canales",
                color=discord.Color.orange()
            )
            embed.set_footer(text="üëë Reino sin protecciones especiales")
            await ctx.send(embed=embed, delete_after=20)
            return
        
        embed = discord.Embed(
            title="üõ°Ô∏è Canales Seguros del Reino",
            description="‚öîÔ∏è **Estos canales NO se bloquean con !lock**",
            color=discord.Color.gold()
        )
        
        canales_texto = []
        for canal_id in canales_seguros:
            canal = ctx.guild.get_channel(canal_id)
            if canal:
                tipo_emoji = "üí¨" if canal.type == discord.ChannelType.text else "üîä"
                canales_texto.append(f"{tipo_emoji} {canal.mention} - *Seguro*")
        
        embed.add_field(
            name="üó°Ô∏è Canales Protegidos",
            value="\n".join(canales_texto) if canales_texto else "‚ö∞Ô∏è *No hay canales v√°lidos*",
            inline=False
        )
        
        embed.add_field(
            name="üìú Informaci√≥n",
            value="üõ°Ô∏è Estos canales ignoran el comando `!lock`\n‚öîÔ∏è Permanecen accesibles durante bloqueos",
            inline=False
        )
        
        embed.set_footer(text=f"üëë {len(canales_seguros)} canal(es) seguro(s)")
        
        await ctx.send(embed=embed, delete_after=40)
    
    else:
        await ctx.send("üè∞ **Comando inv√°lido, mi se√±or.** Usa: `add`, `remove` o `list`", delete_after=10)


#  ‚ô£‚úÖban
@bot.command(name="ban")
async def ban_usuario(ctx, usuario: discord.Member = None, *, razon="Traici√≥n al reino"):
    """Banear usuario con contador y mensajes medievales"""
    # Borrar comando del usuario en 25 segundos
    asyncio.create_task(borrar_comando_usuario(ctx.message, 25))
    
    user_level = get_user_level(ctx.author.id, ctx.guild.id)
    
    # VERIFICAR VIP SOLO (solo frases personalizadas, sin comandos)
    if user_level == "VIP":
        frase = random.choice(WHITELIST_VIP[ctx.author.id])
        await ctx.send(frase, delete_after=10)
        return
    
    # VERIFICAR CIUDADANOS (frases de rechazo)
    if user_level == "CIUDADANO":
        frase = random.choice(FRASES_NO_WHITELIST)
        await ctx.send(f"**{frase}**", delete_after=10)
        return
    
    # Si no se menciona usuario, solo mostrar estad√≠sticas
    if not usuario:
        total_bans = sanciones_hoy['bans']
        if total_bans == 0:
            await ctx.send("**El d√≠a de hoy no ejecutamos a nadie mi se√±or**", delete_after=10)
        else:
            await ctx.send(f"**El d√≠a de hoy ejecutamos a {total_bans} traidores**", delete_after=10)
        return
    
    if usuario.bot:
        await ctx.send("‚ùå **No puedo banear bots**", delete_after=10)
        return
    
    try:
        await usuario.ban(reason=f"{razon} - Baneado por {ctx.author}")
        incrementar_sancion("bans")
        total_bans = sanciones_hoy['bans']
        
        # Embed profesional
        embed = discord.Embed(
            title="üî® Usuario Baneado",
            description=f"**Usuario:** {usuario.mention}\n**Raz√≥n:** {razon}\n**Moderador:** {ctx.author.mention}",  # ‚úÖ CORREGIDO
            color=discord.Color.red(),
            timestamp=discord.utils.utcnow()
        )
        
        await ctx.send(embed=embed, delete_after=10)
        
        # Mensaje medieval con contador
        if total_bans == 0:
            await ctx.send("**El d√≠a de hoy no ejecutamos a nadie mi se√±or**", delete_after=10)
        else:
            await ctx.send(f"**El d√≠a de hoy ejecutamos a {total_bans} traidores**", delete_after=10)
        
        # Log del evento
        await enviar_log(ctx.guild, 
                        f"üî® **USUARIO BANEADO**\n**Usuario:** {usuario.mention}\n**Raz√≥n:** {razon}\n**Moderador:** {ctx.author.mention}",  # ‚úÖ CORREGIDO
                        "üî® Moderaci√≥n")
        
    except discord.Forbidden:
        await ctx.send("**No pude ejecutar al traidor, mi se√±or.**", delete_after=10)
    except Exception as e:
        await ctx.send(f"‚ùå **Error:** {str(e)}", delete_after=10)

#  ‚ô£‚úÖkick
@bot.command(name="kick")
async def kick_usuario(ctx, usuario: discord.Member = None, *, razon="Expulsi√≥n del castillo"):
    """Expulsar usuario con contador y mensajes medievales"""
    # Borrar comando del usuario en 25 segundos
    asyncio.create_task(borrar_comando_usuario(ctx.message, 25))
    
    user_level = get_user_level(ctx.author.id, ctx.guild.id)
    
    # VERIFICAR VIP SOLO (solo frases personalizadas, sin comandos)
    if user_level == "VIP":
        frase = random.choice(WHITELIST_VIP[ctx.author.id])
        await ctx.send(frase, delete_after=10)
        return
    
    # VERIFICAR CIUDADANOS (frases de rechazo)
    if user_level == "CIUDADANO":
        frase = random.choice(FRASES_NO_WHITELIST)
        await ctx.send(f"**{frase}**", delete_after=10)
        return
    
    # Si no se menciona usuario, mostrar estad√≠sticas
    if not usuario:
        total_kicks = sanciones_hoy['kicks']
        if total_kicks == 0:
            await ctx.send("**El d√≠a de hoy no expulsamos a nadie del castillo mi se√±or**", delete_after=10)
        else:
            await ctx.send(f"**El d√≠a de hoy expulsamos a {total_kicks} intrusos del castillo**", delete_after=10)
        return
    
    if usuario.bot:
        await ctx.send("‚ùå **No puedo expulsar bots**", delete_after=10)
        return
    
    try:
        await usuario.kick(reason=f"{razon} - Expulsado por {ctx.author}")
        incrementar_sancion("kicks")
        total_kicks = sanciones_hoy['kicks']
        
        # Embed profesional
        embed = discord.Embed(
            title="üë¢ Usuario Expulsado",
            description=f"**Usuario:** {usuario.mention}\n**Raz√≥n:** {razon}\n**Moderador:** {ctx.author.mention}",  # ‚úÖ CORREGIDO
            color=discord.Color.orange(),
            timestamp=discord.utils.utcnow()
        )
        
        await ctx.send(embed=embed, delete_after=10)
        
        # Mensaje medieval con contador
        await ctx.send(f"‚úÖ **{usuario.display_name} ha sido expulsado del castillo**", delete_after=60)  # ‚úÖ CORREGIDO
        
        # Log del evento
        await enviar_log(ctx.guild,
                        f"üë¢ **USUARIO EXPULSADO**\n**Usuario:** {usuario.mention}\n**Raz√≥n:** {razon}\n**Moderador:** {ctx.author.mention}",  # ‚úÖ CORREGIDO
                        "üë¢ Moderaci√≥n")
        
    except discord.Forbidden:
        await ctx.send("**JAJAJA alguien tan debil no puede expulsar a nadie.**", delete_after=10)
    except Exception as e:
        await ctx.send(f"‚ùå **Error:** {str(e)}", delete_after=10)

#  ‚ô£‚úÖtimeout
@bot.command()
async def timeout(ctx):
    """Mostrar usuarios en calabozo (timeout)"""
    # Borrar comando del usuario en 25 segundos
    asyncio.create_task(borrar_comando_usuario(ctx.message, 25))
    
    # VERIFICAR PERMISOS CON SISTEMA UNIFICADO
    user_level = get_user_level(ctx.author.id, ctx.guild.id)
    
    # 1. CIUDADANOS NO PUEDEN USAR EL COMANDO
    if user_level == "CIUDADANO":
        frase = random.choice(FRASES_NO_WHITELIST)
        await ctx.send(f"**{frase}**", delete_after=10)
        return
    
    # 2. VIP NO PUEDEN USAR COMANDOS DE INFORMACI√ìN
    if user_level == "VIP":
        frase = random.choice(WHITELIST_VIP[ctx.author.id])
        await ctx.send(frase, delete_after=10)
        return
    
    # 3. RECLUTAS Y SUPERIORES S√ç PUEDEN USAR TIMEOUT
    if user_level not in ["RECLUTA", "SUPERIOR"]:
        await ctx.send("üëë **Solo los guerreros del reino pueden ver los calabozos.**", delete_after=10)
        return
    
    # Contar usuarios con timeout activo
    usuarios_timeout = 0
    for member in ctx.guild.members:
        if member.timed_out_until and member.timed_out_until > datetime.now(datetime.timezone.utc):
            usuarios_timeout += 1
    
    # Mensaje con n√∫mero de usuarios en calabozo
    if usuarios_timeout == 1:
        mensaje = f"‚õìÔ∏è **El d√≠a de hoy tenemos a {usuarios_timeout} revoltoso en los calabozos**"
    else:
        mensaje = f"‚õìÔ∏è **El d√≠a de hoy tenemos a {usuarios_timeout} revoltosos en los calabozos**"

    await ctx.send(mensaje, delete_after=10)

#  ‚ô£‚úÖexpulsar
@bot.command()
async def expulsar(ctx, member: discord.Member = None, *, razon="No especificada"):
    """Expulsar usuario del servidor (kick)"""
    # Borrar comando del usuario en 25 segundos
    asyncio.create_task(borrar_comando_usuario(ctx.message, 25))
    
    # VERIFICAR PERMISOS CON SISTEMA UNIFICADO
    user_level = get_user_level(ctx.author.id, ctx.guild.id)
    
    # 1. CIUDADANOS NO PUEDEN USAR EL COMANDO
    if user_level == "CIUDADANO":
        frase = random.choice(FRASES_NO_WHITELIST)
        await ctx.send(f"**{frase}**", delete_after=10)
        return
    
    # 2. VIP NO PUEDEN USAR COMANDOS DE COMBATE
    if user_level == "VIP":
        frase = random.choice(WHITELIST_VIP[ctx.author.id])
        await ctx.send(frase, delete_after=10)
        return
    
    # 3. RECLUTAS Y SUPERIORES S√ç PUEDEN USAR EXPULSAR
    if user_level not in ["RECLUTA", "SUPERIOR"]:
        await ctx.send("üëë **Solo los guerreros del reino pueden expulsar usuarios.**", delete_after=10)
        return
    
    if member is None:
        await ctx.send("‚öîÔ∏è **¬°Dime el nombre y yo mismo lo buscare y lo expulsare del reino!**\nüìù **Uso:** `!expulsar @usuario [raz√≥n]`", delete_after=10)
        return
    
    # Verificar que no sea el autor
    if member.id == ctx.author.id:
        await ctx.send("üõ°Ô∏è **No puedes expulsarte a ti mismo, valiente guerrero**", delete_after=10)
        return
    
    try:
        # Intentar expulsar
        await member.kick(reason=f"Expulsado por {ctx.author}: {razon}")
        
    except discord.Forbidden:
        await ctx.send("‚ùå **No tengo permisos para expulsar a este usuario**", delete_after=10)
        return
    except Exception as e:
        await ctx.send(f"‚ùå **Error al expulsar: {e}**", delete_after=10)
        return

    # EMBED FUERA DEL TRY/EXCEPT DEL KICK
    try:
        embed = discord.Embed(
            title="‚öîÔ∏è **EXPULSADO DEL REINO**",
            description=f"**{member.display_name}** ha sido expulsado\nüìù **Raz√≥n:** {razon}",
            color=0xff8000
        )
        gif_aleatorio = random.choice(GIFS_KICK)
        embed.set_image(url=gif_aleatorio)
        
        await ctx.send(embed=embed, delete_after=60)
        
    except Exception as e:
        print(f"‚ùå Error en embed: {e}")
        await ctx.send(f"‚ùå **Error en embed: {e}**")

#  ‚ô£‚úÖliberar (solo timeout)
@bot.command()
async def liberar(ctx, *, usuario_input=None):
    """Quitar timeout de un usuario"""
    # Borrar comando del usuario en 25 segundos
    asyncio.create_task(borrar_comando_usuario(ctx.message, 25))
    
    # VERIFICAR PERMISOS CON SISTEMA UNIFICADO
    user_level = get_user_level(ctx.author.id, ctx.guild.id)
    
    # 1. CIUDADANOS NO PUEDEN USAR EL COMANDO
    if user_level == "CIUDADANO":
        await ctx.send("üõ°Ô∏è **¬°L√°rgate, plebeyo!** No tienes autoridad para quitar timeouts.", delete_after=20)
        return
    
    # 2. VIP NO PUEDEN USAR COMANDOS DE COMBATE
    if user_level == "VIP":
        frase = random.choice(WHITELIST_VIP[ctx.author.id])
        await ctx.send(frase, delete_after=20)
        return
    
    # 3. RECLUTAS Y SUPERIORES S√ç PUEDEN USAR LIBERAR
    if user_level not in ["RECLUTA", "SUPERIOR"]:
        await ctx.send("üëë **Solo los guerreros del reino pueden liberar usuarios.**", delete_after=20)
        return
    
    if not usuario_input:
        await ctx.send("üîì **¬øA qui√©n quieres quitar el timeout? Uso:** `!liberar @usuario`", delete_after=30)
        return
    
    # Buscar usuario por ID, menci√≥n o nombre
    member = None
    
    # Si es una menci√≥n (@usuario)
    if ctx.message.mentions:
        member = ctx.message.mentions[0]
    # Si es un ID
    elif usuario_input.isdigit():
        member = ctx.guild.get_member(int(usuario_input))
    # Si es un nombre
    else:
        member = discord.utils.get(ctx.guild.members, name=usuario_input)

    
    if not member:
        await ctx.send("‚ùå **Usuario no encontrado**", delete_after=20)
        return
    
    # Verificar que tenga timeout activo
    if not member.timed_out_until:
        await ctx.send("‚ö†Ô∏è **Ese usuario no tiene timeout activo**", delete_after=20)
        return
    
    try:
        # Quitar timeout
        await member.timeout(None, reason=f"Timeout removido por {ctx.author}")
        
        # Limpiar tracking si existe
        if ctx.guild.id in muted_users and member.id in muted_users[ctx.guild.id]:
            del muted_users[ctx.guild.id][member.id]
        
    except Exception as e:
        await ctx.send(f"‚ùå **Error al quitar timeout: {e}**", delete_after=20)
        return

    # Embed de confirmaci√≥n
    try:
        embed = discord.Embed(
            title="üîì Timeout Removido",
            description=f"**{member.mention}** ya puede hablar nuevamente",
            color=0x00ff00
        )
        embed.add_field(name="Moderador", value=ctx.author.mention, inline=True)
        embed.set_thumbnail(url="https://i.gifer.com/T8jg.gif")
        
        await ctx.send(embed=embed, delete_after=60)
        
    except Exception as e:
        print(f"‚ùå Error en embed: {e}")
        await ctx.send(f"‚ùå **Error en embed: {e}**")

#  ‚ô£‚úÖejecutar
@bot.command()
async def ejecutar(ctx, member: discord.Member = None, *, razon="No especificada"):
    """Ejecutar usuario del servidor (ban)"""
    # Borrar comando del usuario en 25 segundos
    asyncio.create_task(borrar_comando_usuario(ctx.message, 25))
    
    user_level = get_user_level(ctx.author.id, ctx.guild.id)
    
    # Verificar permisos
    if not puede_usar_comando(user_level, "ejecutar"):
        if user_level == "VIP":
            frase = random.choice(WHITELIST_VIP[ctx.author.id])
            await ctx.send(frase, delete_after=10)
            return
        elif user_level == "CIUDADANO":
            frase = random.choice(FRASES_NO_WHITELIST)
            await ctx.send(f"**{frase}**", delete_after=10)
            return
        else:  # RECLUTA sin acceso a este comando
            await enviar_rechazo_recluta(ctx)
            return
    
    if member is None:
        await ctx.send("‚öîÔ∏è **¬øA qui√©n debo ejecutar? Necesito el nombre del condenado**\n**Uso:** `!ejecutar @usuario [raz√≥n]`", delete_after=10)
        return
    
    # Verificar que no sea el autor
    if member.id == ctx.author.id:
        await ctx.send("üõ°Ô∏è **No puedes ejecutarte a ti mismo, valiente guerrero**", delete_after=10)
        return
    
    try:
        # Intentar banear
        await member.ban(reason=f"Ejecutado por {ctx.author}: {razon}")
        
    except discord.Forbidden:
        await ctx.send("‚ùå **No puedo ejecutar a este noble, est√° protegido**", delete_after=10)
        return
    except Exception as e:
        await ctx.send(f"‚ùå **Error al banear: {e}**", delete_after=10)
        return

    # EMBED FUERA DEL TRY/EXCEPT DEL BAN
    try:
        embed = discord.Embed(
            title="‚öîÔ∏è **EJECUTADO EN LA PLAZA**",
            description=f"**{member.display_name}** ha sido ejecutado\nüìù **Raz√≥n:** {razon}",
            color=0x8B0000
        )
        gif_aleatorio = random.choice(GIFS_BAN)
        embed.set_image(url=gif_aleatorio)
        
        await ctx.send(embed=embed)
        
    except Exception as e:
        print(f"‚ùå Error en embed: {e}")
        await ctx.send(f"‚ùå **Error en embed: {e}**")

        await ctx.send(embed=embed, delete_after=200)

#  ‚ô£‚úÖcalabozo
@bot.command()
async def calabozo(ctx, user: discord.Member = None, tiempo_str: str = None):
    # Borrar comando del usuario en 25 segundos
    asyncio.create_task(borrar_comando_usuario(ctx.message, 25))
    
    # VERIFICAR PERMISOS CON SISTEMA UNIFICADO
    user_level = get_user_level(ctx.author.id, ctx.guild.id)
    
    # 1. CIUDADANOS NO PUEDEN USAR EL COMANDO
    if user_level == "CIUDADANO":
        await ctx.send("**Al que encerrare en el calabozo sera a ti, por intentar darme ordenes.**", delete_after=10)
        return
    
    # 2. VIP NO PUEDEN USAR COMANDOS DE COMBATE
    if user_level == "VIP":
        frase = random.choice(WHITELIST_VIP[ctx.author.id])
        await ctx.send(frase, delete_after=10)
        return
    
    # 3. RECLUTAS Y SUPERIORES S√ç PUEDEN USAR CALABOZO
    if user_level not in ["RECLUTA", "SUPERIOR"]:
        await ctx.send("üëë **Solo los guerreros del reino pueden enviar usuarios al calabozo.**", delete_after=10)
        return

    print("‚úÖ Usuario tiene permisos")
    
    # üîç DEBUG: Verificar qu√© encuentra el bot
    canal_calabozo = discord.utils.get(ctx.guild.channels, name="calabozo")
    rol_calabozo = discord.utils.get(ctx.guild.roles, name="Calabozo")
    print(f"üîç Canal calabozo encontrado: {canal_calabozo}")
    print(f"üîç Rol Calabozo encontrado: {rol_calabozo}")
    sistema_existe = await verificar_sistema_calabozo(ctx.guild)
    print(f"üîç Sistema existe: {sistema_existe}")

    # üîç VERIFICAR SISTEMA PRIMERO
    if not await verificar_sistema_calabozo(ctx.guild):
        embed = discord.Embed(
            title="üèóÔ∏è Sistema de Calabozo No Configurado",
            description="Primero debes crear el sistema de calabozos",
            color=0xff9900
        )
        view = BotonCrearCalbozo()
        await ctx.send(embed=embed, view=view, delete_after=10)
        return
    
    # ‚úÖ VALIDAR PAR√ÅMETROS
    if user is None:
        await ctx.send(
            "**A quien quieres que encerremos en los calabozos, necesito el nombre**\n\n**Uso:** `!calabozo @usuario [OPCION] corto=30m/medio=1h/largo=3h/`",
            delete_after=6
        )
        return
    
    if tiempo_str is None:
        await ctx.send(
            "**Necesito saber cuanto tiempo estara en el calabozo**\n`!calabozo @usuario [corto/medio/largo]`",
            delete_after=6
        )
        return
    
    # ‚úÖ VALIDAR TIEMPO
    if tiempo_str.lower() not in ['corto', 'medio', 'largo']:
        await ctx.send(
            "‚ùå **Tiempo inv√°lido**\n`Usa: corto, medio o largo`",
            delete_after=5
        )
        return
    
    # Determinar tiempo seg√∫n opci√≥n
    duracion_lower = tiempo_str.lower()
    if duracion_lower == "corto":
        tiempo = timedelta(minutes=1)
        tiempo_texto = "1 minuto"
        duracion_minutos = 1
    elif duracion_lower == "medio":
        tiempo = timedelta(hours=1)
        tiempo_texto = "1 hora"
        duracion_minutos = 60
    elif duracion_lower == "largo":
        tiempo = timedelta(hours=3)
        tiempo_texto = "3 horas"
        duracion_minutos = 180
    else:
        mensaje = (
            "‚ùå **Opci√≥n inv√°lida. Usa:**\n"
            "‚Ä¢ **Corto** = 1M\n"
            "‚Ä¢ **Medio** = 1H\n"
            "‚Ä¢ **Largo** = 3H"
        )
        await ctx.send(mensaje, delete_after=5)
        return
    
    try:
        rol_calabozo = discord.utils.get(ctx.guild.roles, name="Calabozo")
        await user.add_roles(rol_calabozo)

        # 2.5 üìÖ GUARDAR TIEMPO EN TRACKING
        tiempo_fin = datetime.now(timezone.utc) + tiempo
        tiempo_calabozos[user.id] = tiempo_fin
        guardar_calabozos()
        
        # ‚úÖ LOGS DEBUG:
        print(f"üîç CALABOZO DEBUG:")
        print(f"   Usuario ID: {user.id}")
        print(f"   Tiempo fin: {tiempo_fin}")
        print(f"   Diccionario despu√©s: {tiempo_calabozos}")
        print(f"   Usuario en diccionario: {user.id in tiempo_calabozos}")
        
        # Verificar archivo
        try:
            with open(ARCHIVO_CALABOZOS, 'r') as f:
                contenido = f.read()
                print(f"   Archivo guardado: {contenido}")
        except:
            print("   ‚ùå Error leyendo archivo")
        
        # 3. GUARDAR EN BASE DE DATOS
        try:
            await db_manager.agregar_sancion(
                guild_id=ctx.guild.id,
                user_id=user.id,
                moderador_id=ctx.author.id,
                tipo="timeout",
                razon=f"calabozo por {tiempo_texto}",
                duracion=duracion_minutos
            )
        except:
            # Si falla la DB, contin√∫a sin error
            pass
        
        # 4. üé¨ CREAR EMBED CON GIF √âPICO
        canal_calabozo = discord.utils.get(ctx.guild.channels, name="calabozo")
        embed = discord.Embed(
            title="‚õìÔ∏è **ENVIADO A LOS CALABOZOS**",
            description=f"**{user.display_name}** ha sido encerrado en las mazmorras\n‚è∞ **Duraci√≥n:** {tiempo_texto}\nüè∞ **Canal:** {canal_calabozo.mention if canal_calabozo else '#calabozo'}",
            color=0x8B4513
        )
        gif_aleatorio = random.choice(GIFS_CALABOZO)
        embed.set_image(url=gif_aleatorio)
        
        await ctx.send(embed=embed, delete_after=20)
        
    except discord.Forbidden:
        await ctx.send("‚ùå **No tengo permisos para enviar usuarios al calabozo**", delete_after=20)
    except Exception as e:
        await ctx.send(f"**Ponte a trabajar ciudadano y deja de querer darme ordenes.** {str(e)}", delete_after=20)

async def verificar_sistema_calabozo(guild):
    """Verificar si existe canal calabozo y rol calabozo"""
    canal_calabozo = discord.utils.get(guild.channels, name="calabozo")
    rol_calabozo = discord.utils.get(guild.roles, name="Calabozo")
    return canal_calabozo is not None and rol_calabozo is not None
    
#  ‚ô£‚úÖtime
@bot.command()
async def time(ctx):
    """Ver tiempo restante en el calabozo"""
    await ctx.message.delete(delay=5)
    
    # üè∞ VERIFICAR QUE EST√â EN EL CANAL CALABOZO
    if ctx.channel.name.lower() != "calabozo":
        await ctx.send("**Deja de hacerme perder el tiempo**", delete_after=10)
        return
    
    user_id = ctx.author.id
    
    # üîç DEBUG COMPLETO
    print(f"üîç Usuario ID: {user_id}")
    print(f"üîç Tipo usuario ID: {type(user_id)}")
    print(f"üîç Diccionario completo: {tiempo_calabozos}")
    print(f"üîç Keys del diccionario: {list(tiempo_calabozos.keys())}")
    print(f"üîç Tipos de keys: {[type(k) for k in tiempo_calabozos.keys()]}")
    print(f"üîç Usuario en diccionario: {user_id in tiempo_calabozos}")
    
    if user_id not in tiempo_calabozos:
        await ctx.send(f"‚ùå **{ctx.author.display_name} no est√° en el calabozo**", delete_after=20)
        return
    
    tiempo_fin = tiempo_calabozos[user_id]
    tiempo_restante = max(0, int((tiempo_fin - datetime.now(timezone.utc)).total_seconds()))
    
    # ‚úÖ YA NO ELIMINA - Solo avisa que el tiempo expir√≥
    if tiempo_restante <= 0:
        await ctx.send(f"‚è∞ **{ctx.author.display_name}** tu tiempo ya expir√≥. El sistema te liberar√° autom√°ticamente.", delete_after=20)
        return
    
    # üéØ SOLO MINUTOS
    minutos = tiempo_restante // 60
    tiempo_texto = f"{minutos} minutos"
    
    # üéØ ELEGIR FRASE Y REEMPLAZAR
    frase = random.choice(FRASES_TIME_CALABOZO)
    
    if "tiempo" in frase:
        mensaje = frase.replace("tiempo", tiempo_texto)
    elif " m√°s " in frase:
        mensaje = frase.replace(" m√°s ", f" {tiempo_texto} m√°s ")
    elif " en " in frase and "quedan" in frase:
        mensaje = frase.replace(" en ", f" {tiempo_texto} en ")
    else:
        mensaje = f"{frase} Te quedan {tiempo_texto}."
    
    await ctx.send(f"üè∞ {mensaje}", delete_after=10)

#  ‚ô£‚úÖfianza
@bot.command()
async def fianza(ctx):
    await ctx.message.delete(delay=5)
    
    user_id = ctx.author.id
    config = await db_manager.get_config(ctx.guild.id)
    whitelist = config.get("whitelist", [])
    
    # üè∞ VERIFICAR CANAL Y WHITELIST
    if ctx.channel.name.lower() != "calabozo":
        if user_id not in whitelist:
            await ctx.send("üè∞ **¬øAcaso no tienes cosas m√°s importantes que hacer que hacerme perder el tiempo, plebeyo? Vete a cumplir con tus obligaciones reales.**", delete_after=15)
        else:
            await ctx.send("‚ö†Ô∏è **Este comando solo funciona en el canal #calabozo**", delete_after=10)
        return
    
    # ‚úÖ EN CANAL CALABOZO - FUNCIONA NORMAL PARA TODOS
    if user_id not in tiempo_calabozos:
        await ctx.send("‚ùå **No est√°s en los calabozos.** No puedes consultar fianza si no est√°s preso.", delete_after=10)
        return
    
    # ‚úÖ UNA SOLA FRASE RANDOM
    frase_medieval = random.choice(FRASES_FIANZA_FLORINES)
    await ctx.send(f"üè∞ **{frase_medieval}**", delete_after=15)
    
    # ‚úÖ ESPERAR 3 SEGUNDOS
    await asyncio.sleep(3)
    
    try:
        # Calcular datos
        tiempo_fin = tiempo_calabozos[user_id]
        tiempo_restante = max(0, int((tiempo_fin - datetime.now(timezone.utc)).total_seconds()))
        
        if tiempo_restante <= 0:
            await ctx.send("‚úÖ **Tu tiempo ya termin√≥.** Deber√≠as ser libre pronto.", delete_after=10)
            return
        
        fianza = max(50, tiempo_restante // 30)
        florines_usuario = await db_manager.get_user_coins(ctx.author.id)
        
        # ‚úÖ DETERMINAR TIPO DE SENTENCIA SIMPLIFICADO
        if tiempo_restante <= 1800:  # 30 minutos o menos
            tipo_sentencia = "Corto"
            color_embed = 0x90EE90
        elif tiempo_restante <= 3600:  # 1 hora o menos
            tipo_sentencia = "Mediano" 
            color_embed = 0xFFA500
        else:  # M√°s de 1 hora
            tipo_sentencia = "Largo"
            color_embed = 0xFF6347
        
        # Crear embed
        embed = discord.Embed(
            title="üí∞ CONSULTA DE FIANZA",
            description=f"**Prisionero:** {ctx.author.display_name}",
            color=color_embed
        )
        
        # ‚úÖ CAMPOS SIMPLIFICADOS
        embed.add_field(
            name="‚öñÔ∏è Tipo de Condena",
            value=tipo_sentencia,
            inline=True
        )
        
        embed.add_field(
            name="üí∞ Precio Fianza",
            value=f"{fianza} florines",
            inline=True
        )
        
        embed.add_field(
            name="ü™ô Tus Florines", 
            value=f"{florines_usuario} florines",
            inline=True
        )
        
        # Enviar embed con m√°s tiempo
        await ctx.send(embed=embed, delete_after=15)
        
    except Exception as e:
        print(f"‚ùå Error en fianza: {e}")
        await ctx.send(f"‚ùå **Error al consultar fianza: {e}**", delete_after=10)
    

#  ‚ô£‚úÖpagar_fianza
@bot.command()
async def pagar_fianza(ctx):
    await ctx.message.delete(delay=5)
    
    user_id = ctx.author.id
    config = await db_manager.get_config(ctx.guild.id)
    whitelist = config.get("whitelist", [])
    
    # üè∞ VERIFICAR CANAL Y WHITELIST
    if ctx.channel.name.lower() != "calabozo":
        if user_id not in whitelist:
            await ctx.send("üè∞ **¬øAcaso no tienes cosas m√°s importantes que hacer que hacerme perder el tiempo, plebeyo? Vete a cumplir con tus obligaciones reales.**", delete_after=15)
        else:
            await ctx.send("‚ö†Ô∏è **Este comando solo funciona en el canal #calabozo**", delete_after=10)
        return
    
    # ‚úÖ EN CANAL CALABOZO - FUNCIONA NORMAL PARA TODOS
    # ‚úÖ UNA SOLA FRASE RANDOM
    frase_previa = random.choice(PAGA_FIANZA_FLORINES)
    await ctx.send(f"üí∞ **{frase_previa}**", delete_after=15)
    await asyncio.sleep(2)
    
    if user_id not in tiempo_calabozos:
        embed = discord.Embed(
            title="‚ùå No Est√°s Preso",
            description="No puedes pagar fianza si no est√°s en las mazmorras.",
            color=0xff0000
        )
        await ctx.send(embed=embed, delete_after=15)
        return
    
    try:
        # Calcular datos
        tiempo_fin = tiempo_calabozos[user_id]
        tiempo_restante = max(0, int((tiempo_fin - datetime.now(timezone.utc)).total_seconds()))
        fianza = max(50, tiempo_restante // 60)
        florines_usuario = await db_manager.get_user_coins(ctx.author.id)
        
        # ‚úÖ DETERMINAR TIPO DE SENTENCIA COMO ANTES
        if tiempo_restante <= 1800:  # 30 minutos
            tipo_sentencia = "Corto"
            color_embed = 0x90EE90
        elif tiempo_restante <= 3600:  # 1 hora
            tipo_sentencia = "Mediano"
            color_embed = 0xFFA500
        else:  # M√°s de 1 hora
            tipo_sentencia = "Largo"
            color_embed = 0xFF6347
        
        # ‚úÖ EMBED COMPLETO COMO ANTES
        embed = discord.Embed(
            title="üí∞ PAGAR FIANZA",
            description=f"**Prisionero:** {ctx.author.display_name}",
            color=color_embed
        )
        
        # ‚úÖ TODOS LOS CAMPOS COMO ANTES
        embed.add_field(
            name="‚öñÔ∏è Tipo de Condena",
            value=tipo_sentencia,
            inline=True
        )
        
        embed.add_field(
            name="üí∞ Precio Fianza",
            value=f"{fianza} florines",
            inline=True
        )
        
        embed.add_field(
            name="ü™ô Tus Florines",
            value=f"{florines_usuario} florines",
            inline=True
        )
        
        # Vista con bot√≥n
        view = BotonPagarFianza(ctx.author, fianza, florines_usuario)
        await ctx.send(embed=embed, view=view, delete_after=25)
        
    except Exception as e:
        print(f"‚ùå Error en pagar_fianza: {e}")
        await ctx.send(f"‚ùå **Error al procesar fianza: {e}**", delete_after=10)

#  ‚ô£‚úÖprisioneros
@bot.command()
async def prisioneros(ctx):
    """Ver lista de prisioneros actuales"""
    
    # Borrar comando del usuario
    try:
        await ctx.message.delete()
    except:
        pass
    
    user_id = ctx.author.id
    config = await db_manager.get_config(ctx.guild.id)
    whitelist = config.get("whitelist", [])
    
    # üè∞ VERIFICAR WHITELIST CON MENSAJE MEDIEVAL
    if user_id not in whitelist:
        await ctx.send("üè∞ **¬øAcaso crees que tienes autoridad para inspeccionar mis mazmorras, miserable plebeyo? Solo los guardianes del reino pueden acceder a esta informaci√≥n.**", delete_after=15)
        return
    
    rol_calabozo = discord.utils.get(ctx.guild.roles, name="Calabozo")
    prisioneros = []
    
    for member in ctx.guild.members:
        if rol_calabozo in member.roles:
            tiempo_restante = "Sin tiempo" 
            if member.id in tiempo_calabozos:
                tiempo_fin = tiempo_calabozos[member.id]
                segundos = max(0, int((tiempo_fin - datetime.now(timezone.utc)).total_seconds()))
                minutos = segundos // 60
                tiempo_restante = f"{minutos}min"
            
            prisioneros.append(f"‚õìÔ∏è **{member.display_name}** - ‚è∞ {tiempo_restante}")
    
    if not prisioneros:
        embed = discord.Embed(
            title="üè∞ PRISIONEROS EN LAS MAZMORRAS üè∞",
            description="‚ú® **Las mazmorras est√°n vac√≠as**",
            color=0x00ff00
        )
    else:
        embed = discord.Embed(
            title="üè∞ PRISIONEROS EN LAS MAZMORRAS üè∞",
            description=f"**{len(prisioneros)} rebeldes encerrados:**\n\n" + "\n".join(prisioneros),
            color=0x8B0000
        )
        embed.set_footer(text="üí° Usa !liberar_nombre [nombre] para liberar")
    
    embed.set_thumbnail(url="https://i.gifer.com/T8jg.gif")
    await ctx.send(embed=embed, delete_after=15)

#  ‚ô£‚úÖliberar nombre
@bot.command(name='liberar_nombre')
async def liberar_nombre(ctx, *, nombre=None):
    # Borrar comando del usuario en 25 segundos
    asyncio.create_task(borrar_comando_usuario(ctx.message, 25))
    
    # VERIFICAR PERMISOS CON SISTEMA UNIFICADO
    user_level = get_user_level(ctx.author.id, ctx.guild.id)
    
    # 1. CIUDADANOS NO PUEDEN USAR EL COMANDO
    if user_level == "CIUDADANO":
        embed = discord.Embed(
            title="üö´ Acceso Denegado",
            description="Solo los guardianes del reino pueden liberar prisioneros.",
            color=0xff0000
        )
        await ctx.send(embed=embed, delete_after=30)
        return
    
    # 2. VIP NO PUEDEN USAR COMANDOS DE COMBATE
    if user_level == "VIP":
        frase = random.choice(WHITELIST_VIP[ctx.author.id])
        await ctx.send(frase, delete_after=30)
        return
    
    # 3. RECLUTAS Y SUPERIORES S√ç PUEDEN USAR LIBERAR_NOMBRE
    if user_level not in ["RECLUTA", "SUPERIOR"]:
        await ctx.send("üëë **Solo los guerreros del reino pueden liberar prisioneros.**", delete_after=30)
        return
    
    if not nombre:
        await ctx.send("**Necesito un nombre Uso: liberar_nombre user**", delete_after=30)
        return

    # Buscar prisionero por nombre parcial
    usuario_encontrado = None
    
    for member in ctx.guild.members:
        if nombre.lower() in member.display_name.lower() and member.id in tiempo_calabozos:
            usuario_encontrado = member
            break
    
    if not usuario_encontrado:
        embed = discord.Embed(
            title="üîç Prisionero No Encontrado",
            description=f"No se encontr√≥ ning√∫n prisionero con el nombre **{nombre}**",
            color=0xff6b6b
        )
        await ctx.send(embed=embed, delete_after=30)
        return

    # Liberar prisionero
    try:
        # Remover rol calabozo (NO prisionero)
        rol_calabozo = discord.utils.get(ctx.guild.roles, name="Calabozo")
        if rol_calabozo and rol_calabozo in usuario_encontrado.roles:
            await usuario_encontrado.remove_roles(rol_calabozo)
        
        # Eliminar de datos
        if usuario_encontrado.id in tiempo_calabozos:
            del tiempo_calabozos[usuario_encontrado.id]
            guardar_calabozos()
        
        embed = discord.Embed(
            title="üóùÔ∏è ¬°Prisionero Liberado!",
            description=f"**{usuario_encontrado.display_name}** ha sido liberado de las mazmorras por orden real.",
            color=0x00ff00
        )
        embed.set_thumbnail(url="https://i.gifer.com/T8jg.gif")
        await ctx.send(embed=embed, delete_after=30)
        
    except Exception as e:
        embed = discord.Embed(
            title="‚ùå Error en la Liberaci√≥n",
            description="Hubo un problema al liberar al prisionero.",
            color=0xff0000
        )
        await ctx.send(embed=embed, delete_after=30)

#  ‚ô£‚úÖwhitelist
@bot.command(name="whitelist")
async def gestionar_whitelist(ctx, accion=None, usuario: discord.Member = None):
    """Gestionar whitelist (solo superiores)"""
    user_level = get_user_level(ctx.author.id, ctx.guild.id)
    
    if user_level != "SUPERIOR":
        if user_level == "VIP":
            frase = random.choice(WHITELIST_VIP[ctx.author.id])
            await ctx.send(frase, delete_after=10)
        elif user_level == "RECLUTA":
            await enviar_rechazo_recluta(ctx)
        else:
            frase = random.choice(FRASES_NO_WHITELIST)
            await ctx.send(f"**{frase}**", delete_after=10)
        return
    
    if not accion:
        await ctx.send("üìù **Uso:** `!whitelist add/remove/list @usuario`", delete_after=60)
        return
    
    config = await db_manager.get_config(ctx.guild.id)
    whitelist = config.get("whitelist", [])
    
    if accion.lower() == "add":
        if not usuario:
            await ctx.send("‚ùå **Debes mencionar un usuario para agregar**", delete_after=10)
            return
        
        if usuario.id in whitelist:
            await ctx.send("‚ùå **Usuario ya est√° en whitelist**", delete_after=10)
            return
        
        whitelist.append(usuario.id)
        whitelist_added_users.append(usuario.id)  # CORREGIDO: Agregar a la lista
        config["whitelist"] = whitelist
        await db_manager.save_config(ctx.guild.id, config)
        
        await ctx.send(f"‚úÖ **{usuario.mention} agregado a whitelist como RECLUTA**", delete_after=60)  # ‚úÖ CORREGIDO
        await enviar_log(ctx.guild,
                        f"üëë **WHITELIST ACTUALIZADA**\n**Usuario:** {usuario.mention}\n**Acci√≥n:** Agregado como RECLUTA\n**Por:** {ctx.author.mention}",  # ‚úÖ CORREGIDO
                        "üëë Gesti√≥n de Whitelist")
    
    elif accion.lower() == "remove":
        if not usuario:
            await ctx.send("‚ùå **Debes mencionar un usuario para remover**", delete_after=10)
            return
        
        if usuario.id not in whitelist:
            await ctx.send("‚ùå **Usuario no est√° en whitelist**", delete_after=10)
            return
        
        # No permitir remover superiores hardcodeados
        whitelist_hardcoded = [744653546435379243, 461049946682949632]
        if usuario.id in whitelist_hardcoded:
            await ctx.send("‚ùå **No puedes remover usuarios SUPERIORES**", delete_after=10)
            return
        
        whitelist.remove(usuario.id)
        if usuario.id in whitelist_added_users:
            whitelist_added_users.remove(usuario.id)  # CORREGIDO: Remover de la lista
        config["whitelist"] = whitelist
        await db_manager.save_config(ctx.guild.id, config)
        
        await ctx.send(f"‚úÖ **{usuario.mention} removido de whitelist**", delete_after=60)  # ‚úÖ CORREGIDO
        await enviar_log(ctx.guild,
                        f"üëë **WHITELIST ACTUALIZADA**\n**Usuario:** {usuario.mention}\n**Acci√≥n:** Removido\n**Por:** {ctx.author.mention}",  # ‚úÖ CORREGIDO
                        "üëë Gesti√≥n de Whitelist")
    
    elif accion.lower() == "list":
        embed = discord.Embed(
            title="üëë Lista de Whitelist",
            color=discord.Color.gold()
        )
        
        # Separar por categor√≠as
        superiores = []
        reclutas = []
        vips = []
        
        for user_id in whitelist:
            user = bot.get_user(user_id)
            user_name = user.display_name if user else f"Usuario {user_id}"
            
            if user_id in [744653546435379243, 461049946682949632]:
                superiores.append(f"üëë {user_name}")
            else:
                reclutas.append(f"‚öîÔ∏è {user_name}")
        
        for user_id in WHITELIST_VIP:
            user = bot.get_user(user_id)
            user_name = user.display_name if user else f"Usuario {user_id}"
            vips.append(f"üíé {user_name}")
        
        if superiores:
            embed.add_field(name="üèÜ SUPERIORES", value="\n".join(superiores), inline=False)
        if reclutas:
            embed.add_field(name="‚öîÔ∏è RECLUTAS", value="\n".join(reclutas), inline=False)
        if vips:
            embed.add_field(name="üíé VIP (Solo frases)", value="\n".join(vips), inline=False)
        
        await ctx.send(embed=embed, delete_after=10)
    
    else:
        await ctx.send("‚ùå **Acci√≥n no v√°lida. Usa: add, remove, list**", delete_after=10)

#  ‚ô£‚úÖlock
@bot.command(name="lock")
async def bloquear_servidor_comando(ctx, *, razon="Bloqueo manual"):
    """Bloquear servidor (canales de texto y voz)"""
    global servidor_bloqueado  # üîß MOVER AL INICIO
    
    # BORRAR COMANDO DEL USUARIO EN 25 SEGUNDOS
    asyncio.create_task(borrar_comando_usuario(ctx.message, 25))
    
    # VERIFICAR PERMISOS CON SISTEMA UNIFICADO
    user_level = get_user_level(ctx.author.id, ctx.guild.id)
    
    # 1. CIUDADANOS NO PUEDEN USAR EL COMANDO
    if user_level == "CIUDADANO":
        frase = random.choice(FRASES_NO_WHITELIST)
        await ctx.send(f"**{frase}**", delete_after=30)
        return
    
    # 2. RECLUTAS TAMPOCO PUEDEN (SON MUY J√ìVENES)
    if user_level == "RECLUTA":
        await ctx.send("‚öîÔ∏è **Te falta mucho para manejar estas √≥rdenes, recluta. Solo los veteranos pueden cerrar el castillo.**", delete_after=30)
        return
    
    # 3. VIP TAMPOCO PUEDEN (NO ES SU √ÅREA)
    if user_level == "VIP":
        frase = random.choice(WHITELIST_VIP[ctx.author.id])
        await ctx.send(frase, delete_after=30)
        return
    
    # 4. SOLO SUPERIORES PUEDEN
    if user_level != "SUPERIOR":
        await ctx.send("üëë **Solo los comandantes supremos pueden cerrar el reino.**", delete_after=30)
        return
    
    # Verificar si ya est√° bloqueado
    if servidor_bloqueado:
        await ctx.send("üè∞ **El castillo ya se encuentra cerrado, se√±or**", delete_after=30)
        return
    
    # Mensaje de procesando
    await ctx.send("üîÑ **Cerrando el castillo... un momento...**", delete_after=5)
    
    # üîß NUEVA L√ìGICA: Respetar canales seguros
    try:
        servidor_bloqueado = True
        
        # Obtener canales seguros
        config = await db_manager.get_config(ctx.guild.id)
        canales_seguros = config.get("canales_seguros", [])
        
        canales_texto_bloqueados = 0
        canales_voz_bloqueados = 0
        canales_ignorados = 0
        
        # Bloquear CANALES DE TEXTO
        for channel in ctx.guild.channels:
            if channel.type == discord.ChannelType.text:
                if channel.id in canales_seguros:
                    canales_ignorados += 1
                    print(f"DEBUG LOCK - Canal seguro ignorado: {channel.name}")
                    continue
                else:
                    await channel.set_permissions(ctx.guild.default_role, send_messages=False)
                    canales_texto_bloqueados += 1
                    print(f"DEBUG LOCK - Canal texto bloqueado: {channel.name}")
        
        # üîä BLOQUEAR CANALES DE VOZ
        for voice_channel in ctx.guild.channels:
            if voice_channel.type == discord.ChannelType.voice:
                if voice_channel.id in canales_seguros:
                    canales_ignorados += 1
                    print(f"DEBUG LOCK - Canal voz seguro ignorado: {voice_channel.name}")
                    continue
                else:
                    # Bloquear conectarse y hablar
                    await voice_channel.set_permissions(
                        ctx.guild.default_role, 
                        connect=False, 
                        speak=False
                    )
                    canales_voz_bloqueados += 1
                    print(f"DEBUG LOCK - Canal voz bloqueado: {voice_channel.name}")
        
        # üé¨ CREAR EMBED CON GIF √âPICO
        embed = discord.Embed(
            title="üè∞ **CASTILLO CERRADO**",
            description=f"**{canales_texto_bloqueados}** canales de texto bloqueados\n**{canales_voz_bloqueados}** canales de voz cerrados\n**{canales_ignorados}** fortalezas protegidas",
            color=0xff0000
        )
        gif_aleatorio = random.choice(GIFS_LOCK)
        embed.set_image(url=gif_aleatorio)
        
        await ctx.send(embed=embed, delete_after=30)
        
    except Exception as e:
        print(f"ERROR en lock: {e}")
        servidor_bloqueado = False
        await ctx.send("‚ùå **Error cerrando el castillo**", delete_after=10)

#  ‚ô£‚úÖunlock
@bot.command(name="unlock")
async def desbloquear_servidor_comando(ctx):
    """Desbloquear servidor (canales de texto y voz)"""
    global servidor_bloqueado  # üîß MOVER AL INICIO
    
    # BORRAR COMANDO DEL USUARIO EN 25 SEGUNDOS
    asyncio.create_task(borrar_comando_usuario(ctx.message, 25))
    
    # VERIFICAR PERMISOS CON SISTEMA UNIFICADO
    user_level = get_user_level(ctx.author.id, ctx.guild.id)
    
    # 1. CIUDADANOS NO PUEDEN USAR EL COMANDO
    if user_level == "CIUDADANO":
        frase = random.choice(FRASES_NO_WHITELIST)
        await ctx.send(f"**{frase}**", delete_after=30)
        return
    
    # 2. RECLUTAS TAMPOCO PUEDEN (SON MUY J√ìVENES)
    if user_level == "RECLUTA":
        await ctx.send("‚öîÔ∏è **Te falta mucho para manejar estas √≥rdenes, recluta. Solo los veteranos pueden abrir el castillo.**", delete_after=30)
        return
    
    # 3. VIP TAMPOCO PUEDEN (NO ES SU √ÅREA)
    if user_level == "VIP":
        frase = random.choice(WHITELIST_VIP[ctx.author.id])
        await ctx.send(frase, delete_after=30)
        return
    
    # 4. SOLO SUPERIORES PUEDEN
    if user_level != "SUPERIOR":
        await ctx.send("üëë **Solo los comandantes supremos pueden abrir el reino.**", delete_after=30)
        return
    
    # Verificar si ya est√° desbloqueado
    if not servidor_bloqueado:
        await ctx.send("üè∞ **El castillo tiene sus puertas abiertas, se√±or... ¬øacaso est√° ebrio?**", delete_after=30)
        return
    
    # Mensaje de procesando
    await ctx.send("üîÑ **Abriendo el castillo... un momento...**", delete_after=5)
    
    # üîß NUEVA L√ìGICA: Respetar canales seguros
    try:
        servidor_bloqueado = False
        
        # Obtener canales seguros
        config = await db_manager.get_config(ctx.guild.id)
        canales_seguros = config.get("canales_seguros", [])
        
        canales_texto_desbloqueados = 0
        canales_voz_desbloqueados = 0
        canales_ignorados = 0
        
        # Desbloquear CANALES DE TEXTO
        for channel in ctx.guild.channels:
            if channel.type == discord.ChannelType.text:
                if channel.id in canales_seguros:
                    canales_ignorados += 1
                    print(f"DEBUG UNLOCK - Canal seguro ignorado: {channel.name}")
                    continue
                else:
                    await channel.set_permissions(ctx.guild.default_role, send_messages=None)
                    canales_texto_desbloqueados += 1
                    print(f"DEBUG UNLOCK - Canal texto desbloqueado: {channel.name}")
        
        # üîä DESBLOQUEAR CANALES DE VOZ
        for voice_channel in ctx.guild.channels:
            if voice_channel.type == discord.ChannelType.voice:
                if voice_channel.id in canales_seguros:
                    canales_ignorados += 1
                    print(f"DEBUG UNLOCK - Canal voz seguro ignorado: {voice_channel.name}")
                    continue
                else:
                    # Restaurar permisos de voz (None = usar permisos por defecto)
                    await voice_channel.set_permissions(
                        ctx.guild.default_role, 
                        connect=None, 
                        speak=None
                    )
                    canales_voz_desbloqueados += 1
                    print(f"DEBUG UNLOCK - Canal voz desbloqueado: {voice_channel.name}")
        
        # üé¨ CREAR EMBED CON GIF √âPICO
        embed = discord.Embed(
            title="üè∞ **CASTILLO ABIERTO**",
            description=f"**{canales_texto_desbloqueados}** canales de texto abiertos\n**{canales_voz_desbloqueados}** canales de voz habilitados\n**{canales_ignorados}** fortalezas siguen protegidas",
            color=0x00ff00
        )
        gif_aleatorio = random.choice(GIFS_UNLOCK)
        embed.set_image(url=gif_aleatorio)
        
        await ctx.send(embed=embed, delete_after=30)
        
    except Exception as e:
        print(f"ERROR en unlock: {e}")
        await ctx.send("‚ùå **Error abriendo el castillo**", delete_after=30)

#  ‚ô£‚úÖhoneypot
@bot.command(name="honeypot")
async def crear_honeypot(ctx):
    """Crear trampa honeypot (solo whitelist)"""
    if not await solo_verificar_whitelist(ctx):
        return
    
    embed = discord.Embed(
        title="üçØ Sistema de Trampa Honeypot",
        description="‚ö†Ô∏è **ADVERTENCIA:** Solo usuarios autorizados deben presionar este bot√≥n.\n\nCualquier usuario no autorizado que lo presione ser√° **baneado autom√°ticamente**.",
        color=discord.Color.red()
    )
    
    view = HoneypotView()
    await ctx.send(embed=embed, view=view)


#  ‚ô£‚úÖreset_raid
@bot.command(name='reset_raid')
async def reset_raid(ctx):
    """Resetear raid mode para debugging"""
    user_id = ctx.author.id
    config = await db_manager.get_config(ctx.guild.id)
    whitelist = config.get("whitelist", [])
    
    if user_id not in whitelist:
        await ctx.send("‚ùå **No tienes permisos.**", delete_after=25)
        return
    
    config['raid_mode'] = False
    await db_manager.save_config(ctx.guild.id, config)
    await ctx.send("‚úÖ **Raid mode reseteado**", delete_after=25)


#  ‚ô£‚úÖraid_on
@bot.command(name='raid_on')
async def raid_on(ctx):
    """Activar raid mode manualmente"""
    print("üîç RAID_ON INICIADO")
    
    # Borrar comando del usuario en 25 segundos
    asyncio.create_task(borrar_comando_usuario(ctx.message, 25))
    
    # VERIFICAR PERMISOS CON SISTEMA UNIFICADO
    user_level = get_user_level(ctx.author.id, ctx.guild.id)
    print(f"üîç User level: {user_level}")
    
    # 1. CIUDADANOS NO PUEDEN USAR EL COMANDO
    if user_level == "CIUDADANO":
        await ctx.send("**Alguien como tu nunca podria darme ordenes.**", delete_after=10)
        return
    
    # 2. RECLUTAS TAMPOCO PUEDEN (SON MUY J√ìVENES)
    if user_level == "RECLUTA":
        await ctx.send("‚öîÔ∏è **Te falta mucho para manejar estas √≥rdenes, recluta. Solo los veteranos pueden declarar guerra.**", delete_after=10)
        return
    
    # 3. VIP TAMPOCO PUEDEN (NO ES SU √ÅREA)
    if user_level == "VIP":
        await ctx.send("üíé **Jovencito noble, la guerra no es tu juguete. Deja que los comandantes manejen la batalla.**", delete_after=10)
        return
    
    # 4. SOLO SUPERIORES PUEDEN
    if user_level != "SUPERIOR":
        await ctx.send("üëë **Solo los comandantes supremos pueden declarar guerra al reino.**", delete_after=10)
        return
    
    print("üîç Usuario autorizado, continuando...")
    
    try:
        config = await db_manager.get_config(ctx.guild.id)
        
        # Verificar si ya est√° activado
        if config.get("raid_mode_activo", False):
            print("üîç Raid mode ya activado")
            await ctx.send("üõ°Ô∏è **Las tropas ya est√°n en posici√≥n de combate, mi se√±or. El castillo est√° en modo batalla.**", delete_after=10)
            return
        
        print("üîç Enviando mensaje √©pico...")
        # MENSAJE √âPICO ANTES DEL EMBED
        await ctx.send("**¬°EL CASTILLO ESTA BAJO ASEDIO!**", delete_after=10)
        await asyncio.sleep(3)
        
        print("üîç Obteniendo canales seguros...")
        # Obtener canales seguros
        canales_seguros = config.get('canales_seguros', [])
        canales_cerrados = 0
        errores = 0
        
        print(f"üîç Canales seguros: {canales_seguros}")
        print("üîç Cerrando canales...")
        
        # 1. DESHABILITAR TODOS LOS CANALES (excepto seguros)
        for canal in ctx.guild.channels:
            if canal.id in canales_seguros:
                print(f"üõ°Ô∏è Canal seguro ignorado: {canal.name}")
                continue
                
            try:
                overwrite = discord.PermissionOverwrite()
                overwrite.send_messages = False
                overwrite.connect = False
                overwrite.create_instant_invite = False
                
                await canal.set_permissions(ctx.guild.default_role, overwrite=overwrite)
                canales_cerrados += 1
                print(f"üîí Canal {canal.name} bloqueado")
                
            except Exception as e:
                print(f"‚ùå Error cerrando canal {canal.name}: {e}")
                errores += 1
        
        print(f"üîç Canales cerrados: {canales_cerrados}")
        
        # 2. BLOQUEAR CREACI√ìN DE NUEVAS INVITACIONES
        print("üîç Bloqueando invitaciones...")
        try:
            role_everyone = ctx.guild.default_role
            perms = role_everyone.permissions
            config['invite_permission_backup'] = perms.create_instant_invite
            
            # VERIFICAR SI YA EST√Å DESHABILITADO
            if perms.create_instant_invite:
                perms.create_instant_invite = False
                await role_everyone.edit(permissions=perms, reason="Raid mode - Bloquear invitaciones")
                print("üîç Invitaciones bloqueadas exitosamente")
            else:
                print("üîç Invitaciones ya estaban bloqueadas")
                
        except discord.Forbidden:
            print("‚ùå Sin permisos para editar rol @everyone")
            errores += 1
        except Exception as e:
            print(f"‚ùå Error bloqueando invitaciones: {e}")
            errores += 1
        
        # 3. CAMBIAR VERIFICACI√ìN A HIGHEST
        print("üîç Cambiando verificaci√≥n...")
        try:
            config['verification_backup'] = ctx.guild.verification_level.value
            await ctx.guild.edit(verification_level=discord.VerificationLevel.highest)
            print("üîç Verificaci√≥n cambiada exitosamente")
        except discord.Forbidden:
            print("‚ùå Sin permisos para cambiar verificaci√≥n")
            errores += 1
        except Exception as e:
            print(f"‚ùå Error cambiando verificaci√≥n: {e}")
            errores += 1
        
        # 4. GUARDAR CONFIG
        print("üîç Guardando configuraci√≥n...")
        config['raid_mode'] = True
        config['raid_mode_activo'] = True
        config['raid_activado_por'] = ctx.author.id
        config['raid_activado_en'] = datetime.now().isoformat()
        await db_manager.save_config(ctx.guild.id, config)
        print("üîç Configuraci√≥n guardada")
        
        # 5. EMBED √âPICO FINAL
        print("üîç LLEGANDO AL EMBED...")
        
        try:
            gifs_raid = [
                "https://i.gifer.com/UrIP.gif",
                "https://i.gifer.com/YKEt.gif", 
                "https://i.gifer.com/C3A.gif",
                "https://media.giphy.com/media/l0HlTy9x8FZo0XO1i/giphy.gif"
            ]
            
            embed = discord.Embed(
                title="üè∞ FORTALEZA SELLADA",
                description="**¬°LAS TROPAS FUERON ENVIADAS AL CAMPO DE BATALLA!**\n\n"
                           f"üîí **{canales_cerrados}** salones cerrados\n"
                           f"üõ°Ô∏è **{len(canales_seguros)}** torres resguardadas\n"
                           f"üö´ **Invitaciones deshabilitadas**\n"
                           f"‚öîÔ∏è **Verificaci√≥n m√°xima activada**\n\n"
                           "**El reino esta en alerta maxima.**",
                color=0xFF0000
            )
            
            embed.add_field(
                name="üõ°Ô∏è **ESTADO DEL REINO**",
                value="üî¥ **SELLADO COMPLETAMENTE**\n‚öîÔ∏è Defensas al m√°ximo\nüö´ Acceso restringido",
                inline=False
            )
            
            embed.set_footer(text=f"ü§ñ Sellado por {ctx.author.display_name} ‚Ä¢ {datetime.now().strftime('%H:%M')}")
            embed.set_image(url=random.choice(gifs_raid))
            
            await ctx.send(embed=embed, delete_after=30)
            print("üîç EMBED √âPICO ENVIADO EXITOSAMENTE")
            
        except Exception as embed_error:
            print(f"‚ùå ERROR EN EMBED: {embed_error}")
            await ctx.send(f"‚ùå Error espec√≠fico en embed: {embed_error}")
    
    except Exception as e:
        print(f"‚ùå Error GENERAL en raid_on: {e}")
        print(f"‚ùå Tipo de error: {type(e)}")
        import traceback
        traceback.print_exc()
        await ctx.send(f"‚ùå **Error espec√≠fico: {e}**", delete_after=15)

#  ‚ô£‚úÖraid_off
@bot.command(name='raid_off')
async def raid_off(ctx):
    """Desactivar manualmente el raid mode"""
    print("üîç RAID_OFF INICIADO")
    
    # Borrar comando del usuario en 25 segundos
    asyncio.create_task(borrar_comando_usuario(ctx.message, 25))
    
    # VERIFICAR PERMISOS CON SISTEMA UNIFICADO
    user_level = get_user_level(ctx.author.id, ctx.guild.id)
    print(f"üîç User level: {user_level}")
    
    # 1. CIUDADANOS NO PUEDEN USAR EL COMANDO
    if user_level == "CIUDADANO":
        await ctx.send("**Porque no vas a limpiar los ba√±os del reino y dejas de decir tonterias.**", delete_after=10)
        return
    
    # 2. RECLUTAS TAMPOCO PUEDEN (SON MUY J√ìVENES)
    if user_level == "RECLUTA":
        await ctx.send("‚öîÔ∏è **Te falta mucho para manejar estas √≥rdenes, recluta. Solo los veteranos pueden declarar la paz.**", delete_after=10)
        return
    
    # 3. VIP TAMPOCO PUEDEN (NO ES SU √ÅREA)
    if user_level == "VIP":
        await ctx.send("üíé **Jovencito noble, la guerra no es tu juguete. Deja que los comandantes manejen la paz.**", delete_after=10)
        return
    
    # 4. SOLO SUPERIORES PUEDEN
    if user_level != "SUPERIOR":
        await ctx.send("üëë **Solo los comandantes supremos pueden declarar la paz en el reino.**", delete_after=10)
        return
    
    print("üîç Usuario autorizado, continuando...")
    
    try:
        config = await db_manager.get_config(ctx.guild.id)
        
        # Verificar si raid mode ya est√° desactivado
        if not config.get("raid_mode_activo", False):
            print("üîç Raid mode ya desactivado")
            await ctx.send("‚ö†Ô∏è **Las tropas ya estan de regreso, mi se√±or. El castillo est√° abierto a los visitantes.**", delete_after=10)
            return
        
        print("üîç Enviando mensaje √©pico...")
        # MENSAJE √âPICO ANTES DEL EMBED
        await ctx.send("**¬°TODOS LOS INTRUSOS FUERON ELIMINADOS!**", delete_after=10)
        await asyncio.sleep(3)
        
        canales_abiertos = 0
        errores = 0
        
        print("üîç Restaurando canales...")
        
        # Obtener canales seguros
        canales_seguros = config.get('canales_seguros', [])
        print(f"üîç Canales seguros que NO se tocar√°n: {canales_seguros}")
        
        # 1. RESTAURAR TODOS LOS CANALES (excepto seguros)
        for canal in ctx.guild.channels:
            # ‚≠ê IGNORAR CANALES SEGUROS
            if canal.id in canales_seguros:
                print(f"üõ°Ô∏è Canal seguro ignorado: {canal.name}")
                continue
                
            try:
                # Eliminar COMPLETAMENTE el overwrite del rol @everyone
                await canal.set_permissions(ctx.guild.default_role, overwrite=None, reason="Raid mode desactivado")
                canales_abiertos += 1
                print(f"‚úÖ Canal {canal.name} desbloqueado")
            except Exception as e:
                print(f"‚ùå Error abriendo canal {canal.name}: {e}")
                errores += 1
        
        print(f"üîç Canales procesados: {canales_abiertos} desbloqueados")
        
        # 2. RESTAURAR CREACI√ìN DE INVITACIONES
        print("üîç Restaurando invitaciones...")
        try:
            role_everyone = ctx.guild.default_role
            perms = role_everyone.permissions
            perms.create_instant_invite = config.get('invite_permission_backup', True)
            await role_everyone.edit(permissions=perms)
            print("üîç Invitaciones restauradas exitosamente")
        except Exception as e:
            print(f"‚ùå Error restaurando invitaciones: {e}")
            errores += 1
        
        # 3. RESTAURAR VERIFICACI√ìN NORMAL
        print("üîç Restaurando verificaci√≥n...")
        try:
            verification_level = config.get('verification_backup', 1)
            await ctx.guild.edit(verification_level=discord.VerificationLevel(verification_level))
            print("üîç Verificaci√≥n restaurada exitosamente")
        except Exception as e:
            print(f"‚ùå Error restaurando verificaci√≥n: {e}")
            errores += 1
        
        # 4. ACTUALIZAR CONFIG
        print("üîç Actualizando configuraci√≥n...")
        config['raid_mode'] = False
        config['raid_mode_activo'] = False
        config['raid_desactivado_por'] = ctx.author.id
        config['raid_desactivado_en'] = datetime.now().isoformat()
        await db_manager.save_config(ctx.guild.id, config)
        print("üîç Configuraci√≥n actualizada")
        
        # 5. EMBED √âPICO
        print("üîç LLEGANDO AL EMBED...")
        
        try:
            gifs_paz = [
                "https://media3.giphy.com/media/v1.Y2lkPTc5MGI3NjExYnR3b3ZjazQ3czFvdDd0bGt0Ym04MHFneWNsdGJsc28yb2cxODZjNSZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/l0HlJSlZLiZ5KXtN6/giphy.gif",
                "https://media0.giphy.com/media/v1.Y2lkPTc5MGI3NjExaDZhMHd6bDBrMnBvem43ZmpwemFtZHNianBqcHQzN20yNXZvNXZ6NiZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/5GZLvPbKO5jhu/giphy.gif",
            ]
            
            embed = discord.Embed(
                title="üïäÔ∏è REINO RESTAURADO",
                description="**¬°LAS PUERTAS DEL REINO HAN SIDO ABIERTAS!**\n\n"
                           f"üîì **{canales_abiertos}** salones abiertos\n"
                           f"‚úÖ **Invitaciones reactivadas**\n"
                           f"üõ°Ô∏è **Verificaci√≥n normalizada**\n"
                           f"üïäÔ∏è **Paz restaurada en el reino**\n\n"
                           "**El castillo vuelve a recibir visitantes.**",
                color=0x00FF00
            )
            
            embed.add_field(
                name="üè∞ **ESTADO DEL REINO**",
                value="üü¢ **ABIERTO AL P√öBLICO**\nüïäÔ∏è Paz restaurada\n‚úÖ Funcionamiento normal",
                inline=False
            )
            
            embed.set_footer(text=f"ü§ñ Abierto por {ctx.author.display_name} ‚Ä¢ {datetime.now().strftime('%H:%M')}")
            embed.set_image(url=random.choice(gifs_paz))
            
            await ctx.send(embed=embed, delete_after=30)
            print("üîç EMBED √âPICO ENVIADO EXITOSAMENTE")
            
        except Exception as embed_error:
            print(f"‚ùå ERROR EN EMBED: {embed_error}")
            await ctx.send(f"‚ùå Error espec√≠fico en embed: {embed_error}")
        
    except Exception as e:
        print(f"‚ùå Error GENERAL en raid_off: {e}")


#  ‚ô£‚úÖinfo
@bot.command()
async def info(ctx):
    """Mostrar lista de comandos disponibles"""
    # Borrar comando del usuario en 25 segundos
    asyncio.create_task(borrar_comando_usuario(ctx.message, 25))
    
    user_level = get_user_level(ctx.author.id, ctx.guild.id)
    
    # 1. CIUDADANOS - FRASE NEGATIVA
    if user_level == "CIUDADANO":
        frase = random.choice(FRASES_NO_WHITELIST)
        await ctx.send(f"**{frase}**", delete_after=10)
        return
    
    # 2. VIP - SOLO FRASES PERSONALIZADAS
    if user_level == "VIP":
        frase = random.choice(WHITELIST_VIP[ctx.author.id])
        await ctx.send(frase, delete_after=10)
        return
    
    # 3. RECLUTAS - PANEL LIMITADO
    if user_level == "RECLUTA":
        await ctx.send("üóùÔ∏è **Te ense√±ar√© algunos de los secretos, joven recluta**", delete_after=40)
        
        # Crear embed espec√≠fico para RECLUTAS
        embed = discord.Embed(
            title="üìú Pergamino Para Reclutas Del Reino",
            description="‚öîÔ∏è **Comandos disponibles para reclutas en entrenamiento** ‚öîÔ∏è",
            color=0x4B0082  # Color p√∫rpura para reclutas
        )
        
        # COMANDOS DE COMBATE B√ÅSICOS
        embed.add_field(
            name="‚öîÔ∏è **Comandos de Combate B√°sicos**",
            value="`!ejecutar @usuario` - Ejecuci√≥n √©pica (banea a un usuario)\n"
                  "`!expulsar @usuario` - Expulsar del reino (kick del server)\n"
                  "`!timeout` - Muestra cantidad de usuarios en el calabozo\n"
                  "`!ban` - Muestra cantidad de usuarios ejecutados\n"
                  "`!kick` - Muestra cantidad de usuarios expulsados",
            inline=False
        )

        # SISTEMA DE CALABOZOS
        embed.add_field(
              name="‚õìÔ∏è **Sistema de Calabozos**",
              value="`!calabozo @usuario corto/medio/largo [raz√≥n]` - Enviar a los calabozos\n"
              "`!liberar @usuario` - Sacar time out a un usuario\n"
              "`!liberar_nombre [nombre]` - Libera alguien del calabozo\n"
              "`!prisioneros` - Lista de rebeldes en los calabozos",
            inline=False
        )
        
        # COMANDOS DE INFORMACI√ìN
        embed.add_field(
            name="üìä **Comandos de Informaci√≥n**",
            value="`!status` - Reporte de sanciones del d√≠a\n"
                  "`!avatar @usuario` - Ver avatar en grande\n"
                  "`!rango` - Ver tu nivel de acceso\n"
                  "`!info` - Mostrar esta lista de comandos",
            inline=False
        )

        # SISTEMA RPG
        embed.add_field(
            name="üè∞ **Sistema de Aventuras**",
            value="`!florines` - Ver tu balance de Florines de Oro\n"
                  "`!oraculo` - Consultar profec√≠a siniestra (50 florines)",
            inline=False
        )
        
        # Footer espec√≠fico para reclutas
        embed.set_footer(text="‚öîÔ∏è Panel de Recluta - Entrena duro para convertirte en veterano")
        
        await ctx.send(embed=embed, delete_after=50)
        return
    
    # 4. SUPERIORES - PANEL COMPLETO
    if user_level == "SUPERIOR":
        await ctx.send("üóùÔ∏è **Los secretos del reino son tuyos**", delete_after=10)
        
        # Crear embed completo para SUPERIORES
        embed = discord.Embed(
            title="üìú Pergamino De Comandos Del Reino",
            description="‚öîÔ∏è **Lista de comandos disponibles para los nobles del castillo** ‚öîÔ∏è",
            color=0x8B0000
        )
        
        # INCIDENCIAS EN EL REINO
        embed.add_field(
            name="üìã **Incidencias en el reino**",
            value="`!ban` - Muestra cuantos usuarios fueron ejecutados\n"
                  "`!kick` - Muestra cuantos usuarios fueron expulsados del castillo\n"
                  "`!timeout` - Muestra cuantos usuarios fueron enviados al calabozo",
            inline=False
        )
        
        # COMANDOS DE COMBATE
        embed.add_field(
            name="‚öîÔ∏è **Comandos de Combate**",
            value="`!ejecutar @usuario` - Ejecuci√≥n √©pica (banea a un usuario)\n"
                  "`!expulsar @usuario` - Expulsar del reino (kick del server)\n"
                  "`!liberar @usuario` - Sacar time out a un usuario",
            inline=False
        )

        # SISTEMA DE CALABOZOS
        embed.add_field(
              name="‚õìÔ∏è **Sistema de Calabozos**",
              value="`!calabozo @usuario corto/medio/largo [raz√≥n]` - Enviar a los calabozos\n"
              "`!time` - Ver tu tiempo restante en prisi√≥n\n"
              "`!fianza` - Pagar rescate para salir anticipadamente\n"
              "`!precio_fianza @usuario` - Consultar costo del rescate\n"
              "`!prisioneros` - Lista de rebeldes en los calabozos\n"
              "`!liberar_nombre [nombre]` - Liberar prisionero de los calabozos",
            inline=False
        )
        
        # COMANDOS DE PROTECCI√ìN
        embed.add_field(
            name="üõ°Ô∏è **Comandos de Protecci√≥n**",
            value="`!lock` - Bloquear todos los canales del servidor\n"
                  "`!unlock` - Desbloquear todos los canales del servidor\n"
                  "`!canal_seguro add/remove/list #canal` - Gestionar canales seguros\n"
                  "`!raid_on` - Activar modo raid manual\n"
                  "`!raid_off` - Desactivar modo raid manual\n"
                  "`!test_raid_auto` - Simular raid para probar sistema autom√°tico\n"
                  "`!debug_raid_test` - Informaci√≥n del sistema de protecci√≥n",
            inline=False
        )
        
        # COMANDOS DE INVESTIGACI√ìN
        embed.add_field(
            name="üïµÔ∏è **Comandos de Investigaci√≥n**",
            value="`!investigar @usuario` - An√°lisis completo de usuario\n"
                  "`!reputacion @usuario` - Consultar reputaci√≥n global",
            inline=False
        )
        
        # COMANDOS DE PREDICCI√ìN
        embed.add_field(
            name="üîÆ **Comandos de Predicci√≥n**",
            value="`!prediccion` - Ver an√°lisis de riesgo de raid actual",
            inline=False
        )
        
        # COMANDOS DE INFORMACI√ìN
        embed.add_field(
            name="üìä **Comandos de Informaci√≥n**",
            value="`!status` - Reporte de sanciones del d√≠a\n"
                  "`!avatar @usuario` - Ver avatar en grande\n"
                  "`!menu` - Panel de configuraci√≥n AntiRaid\n"
                  "`!info` - Mostrar esta lista de comandos\n"
                  "`!rango` - Ver tu nivel de acceso",
            inline=False
        )
        
        # MERCADO DEL REINO
        embed.add_field(
            name="üè™ **Mercado del Reino**",
            value="`!florines` - Ver tu balance de Florines de Oro\n"
                  "`!dar_florines @usuario cantidad` - [ADMIN] Otorgar florines\n"
                  "`!oraculo` - Consultar profec√≠a siniestra (50 florines)",
            inline=False
        )
        
        # SISTEMA HONEYPOT
        embed.add_field(
            name="üçØ **Sistema Honeypot**",
            value="`!setup_honeypot` - Configurar sistema de trampas\n"
                  "`!remove_honeypot` - Remover trampas completamente\n"
                  "`!test_honeypot` - Probar configuraci√≥n de logs",
            inline=False
        )
        
        # RED GLOBAL
        embed.add_field(
            name="üåç **Red Global del Reino**",
            value="`!red_global stats` - Estad√≠sticas del reino\n"
                  "`!red_global blacklist` - Ver lista negra global\n"
                  "`!red_global remove @usuario` - Quitar de blacklist\n"
                  "`!red_global add @usuario` - Agregar a blacklist\n"
                  "`!red_global info @usuario` - Info global de usuario",
            inline=False
        )
        
        # COMANDOS DE ADMINISTRACI√ìN
        embed.add_field(
            name="üëë **Comandos de Administraci√≥n**",
            value="`!whitelist_add @usuario` - Agregar a whitelist\n"
                  "`!whitelist_remove @usuario` - Remover de whitelist",
            inline=False
        )

        # Footer
        embed.set_footer(text="üõ°Ô∏è Cuy AntiRaid - Guardi√°n del Reino | Solo para miembros de la WhiteList")
        
        await ctx.send(embed=embed, delete_after=50)
        return













# =================================================================================
#‚ô£ RPG
# =================================================================================


async def mostrar_pvp(interaction, personaje, user_id):
    """Mostrar la arena de combate PVP"""
    embed = discord.Embed(
        title="‚öîÔ∏è ARENA DE COMBATE ‚öîÔ∏è",
        description="""ü©∏ **BIENVENIDO A LA ARENA DE SANGRE** ü©∏

En este lugar maldito donde el eco de mil batallas resuena eternamente, solo los guerreros m√°s valientes se atreven a pisar la arena empapada en sangre. Aqu√≠ no importa tu linaje, tu clase o tu pasado... solo importa tu sed de victoria.

Las razas han cruzado sus armas desde tiempos inmemoriables en este campo de honor. Humanos con su valor inquebrantable, Elfos con su gracia letal, Orcos con su furia salvaje, Enanos con su resistencia f√©rrea, y los No Muertos con su frialdad eterna.

‚öîÔ∏è **REGLAS DEL HONOR:**
‚Ä¢ Selecciona un oponente de la lista y desafialo
‚Ä¢ Tu oponente tiene **2 minutos** para aceptar o rechazar
‚Ä¢ Pasado este tiempo, el desaf√≠o se desvanecer√° como humo
‚Ä¢ Equipa tus mejores armas y consume pociones antes de la batalla

*"Solo el m√°s fuerte vivir√° para contar su historia... ¬øSer√°s t√∫ quien escriba la leyenda?"*

üíÄ **QUE COMIENCE EL DERRAMAMIENTO DE SANGRE** üíÄ""",
        color=0xFF0000
    )
    embed.set_image(url="https://i.ibb.co/99shgj7y/22222.png")
    
    view = PVPView(personaje, user_id)
    await interaction.response.edit_message(embed=embed, view=view)
















class PVPView(View):
    def __init__(self, personaje=None, user_id=None):
        super().__init__(timeout=None)
        self.personaje = personaje
        self.user_id = user_id
    
    @discord.ui.button(label="üèÜ Ranking", style=discord.ButtonStyle.primary, emoji="üëë")
    async def ranking_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        # VERIFICAR QUE SEA EL DUE√ëO DEL PERSONAJE
        if interaction.user.id != self.user_id:
            await interaction.response.send_message("‚ùå **Solo el due√±o del personaje puede usar esto.**", ephemeral=True)
            return
            
        try:
            # CREAR TABLA SI NO EXISTE
            async with aiosqlite.connect(db_manager.db_path) as db:
                await db.execute("""
                    CREATE TABLE IF NOT EXISTS ranking (
                        user_id INTEGER,
                        guild_id INTEGER,
                        victorias_pvp INTEGER DEFAULT 0,
                        PRIMARY KEY (user_id, guild_id)
                    )
                """)
                await db.commit()
                
                # OBTENER RANKING REAL
                cursor = await db.execute("""
                    SELECT user_id, victorias_pvp 
                    FROM ranking 
                    WHERE guild_id = ? AND victorias_pvp > 0
                    ORDER BY victorias_pvp DESC 
                    LIMIT 10
                """, (interaction.guild.id,))
                
                ranking_data = await cursor.fetchall()

            if not ranking_data:
                ranking_text = "*A√∫n no hay guerreros con victorias...*\nüó°Ô∏è **¬°S√© el primero en ganar batallas PVP!**"
            else:
                ranking_text = ""
                for i, (user_id, victorias_pvp) in enumerate(ranking_data, 1):
                    try:
                        user = await bot.fetch_user(int(user_id))
                        username = user.display_name or user.name
                        
                        # Obtener clase del personaje
                        personaje = await obtener_personaje(interaction.guild.id, user_id)
                        clase = personaje[2] if personaje else "Guerrero"
                    except:
                        username = "Guerrero Desconocido"
                        clase = "Guerrero"
                    
                    # ICONOS POR POSICI√ìN
                    if i == 1:
                        icono = "ü•á"
                    elif i == 2:
                        icono = "ü•à" 
                    elif i == 3:
                        icono = "ü•â"
                    else:
                        icono = f"{i}."
                        
                    ranking_text += f"{icono} **{username}** ({clase.title()}) : {victorias_pvp} Victorias\n"
            
        except Exception as e:
            ranking_text = f"‚ùå **Error al cargar ranking:** {str(e)}"
        
        embed = discord.Embed(
            title="üèÜ SAL√ìN DEL HONOR",
            description="*Los guerreros m√°s valientes del reino*",
            color=0xFFD700
        )
        
        embed.add_field(
            name="‚öîÔ∏è GUERREROS LEGENDARIOS",
            value=ranking_text,
            inline=False
        )
        
        embed.set_image(url="https://i.ibb.co/vnGHXJ4/Sin-t-tulo.png")
        embed.set_footer(text="Solo el m√°s fuerte vivir√° para contar su historia...")
        
        # Crear una nueva vista solo para el ranking
        ranking_view = RankingPVPView(self.personaje, self.user_id)
        await interaction.response.edit_message(embed=embed, view=ranking_view)
    
    @discord.ui.button(label="‚öîÔ∏è Desafiar", style=discord.ButtonStyle.danger, emoji="üó°Ô∏è")
    async def desafiar_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        # VERIFICAR QUE SEA EL DUE√ëO DEL PERSONAJE
        if interaction.user.id != self.user_id:
            await interaction.response.send_message("‚ùå **Solo el due√±o del personaje puede usar esto.**", ephemeral=True)
            return
            
        view = SeleccionarUsuarioView()
        await view.agregar_usuarios_con_personajes(interaction.guild)
        
        if len(view.select_usuario.options) == 0:
            await interaction.response.send_message("‚ùå **No hay otros guerreros dignos de batalla.**", ephemeral=True)
            return
        
        embed = discord.Embed(
            title="‚öîÔ∏è Arena de Combate", 
            description="üèõÔ∏è **Bienvenido a la Arena de los Campeones**\n\n"
                       "üó°Ô∏è Aqu√≠ los guerreros m√°s valientes demuestran su honor\n"
                       "üõ°Ô∏è Cada victoria se graba en piedra para la eternidad\n"
                       "üèÜ Solo los dignos pueden reclamar la gloria\n\n"
                       "‚ö° **Selecciona tu oponente y que comience la batalla...**",
            color=0x8B0000
        )
        embed.set_footer(text="üî• Que la suerte favorezca al m√°s valiente")

        embed.set_image(url="https://i.ibb.co/5hz9cJ99/2222111.png")
        
        await interaction.response.edit_message(embed=embed, view=view)
    
    @discord.ui.button(label="üîô Regresar", style=discord.ButtonStyle.gray, emoji="‚Ü©Ô∏è")
    async def regresar_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        # VERIFICAR QUE SEA EL DUE√ëO DEL PERSONAJE
        if interaction.user.id != self.user_id:
            await interaction.response.send_message("‚ùå **Solo el due√±o del personaje puede usar esto.**", ephemeral=True)
            return
            
        personaje = await obtener_personaje(interaction.guild.id, interaction.user.id)
        await mostrar_reino_principal(interaction, personaje, interaction.user.id)


# NUEVA CLASE SOLO PARA EL RANKING
class RankingPVPView(View):
    def __init__(self, personaje, user_id):
        super().__init__(timeout=30)
        self.personaje = personaje
        self.user_id = user_id
    
    @discord.ui.button(label="üîô Regresar", style=discord.ButtonStyle.gray, emoji="‚Ü©Ô∏è")
    async def regresar_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        # VERIFICAR QUE SEA EL DUE√ëO DEL PERSONAJE
        if interaction.user.id != self.user_id:
            await interaction.response.send_message("‚ùå **Solo el due√±o del personaje puede usar esto.**", ephemeral=True)
            return
            
        await mostrar_pvp(interaction, self.personaje, self.user_id)


class SeleccionarUsuarioView(View):
    def __init__(self):
        super().__init__(timeout=60)
        self.setup_dropdown()
    
    def setup_dropdown(self):
        # Crear el dropdown vac√≠o primero
        self.select_usuario = discord.ui.Select(
            placeholder="üéØ Selecciona tu oponente...",
            min_values=1,
            max_values=1
        )
        self.select_usuario.callback = self.select_callback
        self.add_item(self.select_usuario)
    
    async def agregar_usuarios_con_personajes(self, guild):
        """Agregar solo usuarios que tengan personajes"""
        for member in guild.members:
            if not member.bot and len(self.select_usuario.options) < 25:
                personaje = await obtener_personaje(guild.id, member.id)
                if personaje:
                    clase = personaje[2]
                    nivel = personaje[3]
                    
                    self.select_usuario.add_option(
                        label=f"{member.display_name} - {clase.title()} Nv.{nivel}",
                        value=str(member.id),
                        emoji="‚öîÔ∏è"
                    )

    async def select_callback(self, interaction: discord.Interaction):
        usuario_id = int(self.select_usuario.values[0])
        usuario_encontrado = interaction.guild.get_member(usuario_id)
        
        if usuario_encontrado.id == interaction.user.id:
            await interaction.response.send_message("‚ùå **No puedes retarte a ti mismo, guerrero.**", ephemeral=True)
            return
        
        # Crear embed de menci√≥n con botones
        embed = discord.Embed(
            title="‚öîÔ∏è DESAF√çO A DUELO",
            description=f"**{interaction.user.display_name}** te desaf√≠a a un duelo, {usuario_encontrado.mention}!",
            color=0xFF0000
        )
        embed.set_footer(text="‚è∞ Tienes 2 minutos para responder")
        
        # Crear vista con botones solo para el retado
        view = DesafioView(usuario_encontrado.id, interaction.user, usuario_encontrado)
        
        await interaction.response.edit_message(embed=embed, view=view)
    
    @discord.ui.button(label="üîô Regresar", style=discord.ButtonStyle.gray, emoji="‚Ü©Ô∏è")
    async def regresar_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        personaje = await obtener_personaje(interaction.guild.id, interaction.user.id)
        await mostrar_pvp(interaction, personaje, interaction.user.id)


# COMANDO PARA AGREGAR LA COLUMNA VICTORIAS (ejecutar una sola vez)
@bot.command(name='add_victorias')
async def add_victorias_column(ctx):
    async with aiosqlite.connect(db_manager.db_path) as db:
        try:
            await db.execute("ALTER TABLE personajes ADD COLUMN victorias INTEGER DEFAULT 0")
            await db.commit()
            await ctx.send("‚úÖ **Columna 'victorias' agregada exitosamente**")
        except:
            await ctx.send("‚ö†Ô∏è **La columna 'victorias' ya existe**")


# FUNCI√ìN PARA INCREMENTAR VICTORIAS DESPU√âS DE UN DUELO GANADO
async def incrementar_victoria_pvp(guild_id, user_id):
    """Incrementar victorias PVP despu√©s de ganar un duelo"""
    async with aiosqlite.connect(db_manager.db_path) as db:
        await db.execute("""
            UPDATE personajes 
            SET victorias = victorias + 1 
            WHERE guild_id = ? AND user_id = ?
        """, (guild_id, user_id))
        await db.commit()

def obtener_victorias_pvp(user_id, guild_id):
    """Obtener victorias PVP del ranking"""
    try:
        cursor.execute('''
            SELECT victorias_pvp FROM ranking 
            WHERE user_id = ? AND guild_id = ?
        ''', (user_id, guild_id))
        resultado = cursor.fetchone()
        return resultado[0] if resultado else 0
    except:
        return 0








async def crear_embed_desafio_from_interaction(interaction, retador, retado, personaje_retador, personaje_retado):
    """Crear embed de desaf√≠o desde una interacci√≥n"""
    
    # Obtener datos (igual que antes)
    nivel_retador = personaje_retador[3]
    clase_retador = personaje_retador[2]
    titulo_retador = obtener_titulo_por_nivel(clase_retador, nivel_retador)
    
    nivel_retado = personaje_retado[3]
    clase_retado = personaje_retado[2]
    titulo_retado = obtener_titulo_por_nivel(clase_retado, nivel_retado)
    
    # Obtener victorias PVP del ranking
    victorias_retador = obtener_victorias_pvp(retador.id, interaction.guild.id)
    victorias_retado = obtener_victorias_pvp(retado.id, interaction.guild.id)
    
    # Crear embed
    embed = discord.Embed(
        title="‚öîÔ∏è DESAF√çO A DUELO ‚öîÔ∏è",
        description=f"**{retador.display_name}** VS **{retado.display_name}**",
        color=0xFF0000
    )
    
    # Campo del retador (izquierda)
    embed.add_field(
        name="‚öîÔ∏è",
        value=f"**Nivel:** {nivel_retador}\n**Clase:** {clase_retador}\n**T√≠tulo:** {titulo_retador}\n**Victorias en la arena:** {victorias_retador}",
        inline=True
    )
    
    # Campo del retado (derecha)
    embed.add_field(
        name="üõ°Ô∏è", 
        value=f"**Nivel:** {nivel_retado}\n**Clase:** {clase_retado}\n**T√≠tulo:** {titulo_retado}\n**Victorias en la arena:** {victorias_retado}",
        inline=True
    )
    
    # Editar el mensaje original
    await interaction.response.edit_message(embed=embed, view=None)
    
    # Cuenta regresiva de 20 segundos
    for i in range(20, 0, -1):
        embed.set_footer(text=f"‚è∞ La batalla comenzar√° en {i} segundos...")
        await interaction.edit_original_response(embed=embed)
        await asyncio.sleep(1)
    
    # Mensaje final
    embed.set_footer(text="üî• ¬°QUE COMIENCE LA BATALLA!")
    await interaction.edit_original_response(embed=embed)

        # AGREGAR ESTO:
    await asyncio.sleep(1)
    await ejecutar_duelo(interaction, personaje_retador, personaje_retado)









async def crear_embed_desafio_from_interaction(interaction, retador, retado, personaje_retador, personaje_retado):
    """Crear embed de desaf√≠o desde una interacci√≥n"""
    
    # Obtener datos (igual que antes)
    nivel_retador = personaje_retador[3]
    clase_retador = personaje_retador[2]
    titulo_retador = obtener_titulo_por_nivel(clase_retador, nivel_retador)
    
    nivel_retado = personaje_retado[3]
    clase_retado = personaje_retado[2]
    titulo_retado = obtener_titulo_por_nivel(clase_retado, nivel_retado)
    
    # Obtener victorias PVP del ranking
    victorias_retador = obtener_victorias_pvp(retador.id, interaction.guild.id)
    victorias_retado = obtener_victorias_pvp(retado.id, interaction.guild.id)
    
    # Crear embed
    embed = discord.Embed(
        title="‚öîÔ∏è DESAF√çO A DUELO ‚öîÔ∏è",
        description=f"**{retador.display_name}** VS **{retado.display_name}**",
        color=0xFF0000
    )
    
    # Campo del retador (izquierda)
    embed.add_field(
        name="‚öîÔ∏è",
        value=f"**Nivel:** {nivel_retador}\n**Clase:** {clase_retador}\n**T√≠tulo:** {titulo_retador}\n**Victorias en la arena:** {victorias_retador}",
        inline=True
    )
    
    # Campo del retado (derecha)
    embed.add_field(
        name="üõ°Ô∏è", 
        value=f"**Nivel:** {nivel_retado}\n**Clase:** {clase_retado}\n**T√≠tulo:** {titulo_retado}\n**Victorias en la arena:** {victorias_retado}",
        inline=True
    )
    
    # Editar el mensaje original
    await interaction.response.edit_message(embed=embed, view=None)
    
    # Cuenta regresiva de 20 segundos
    for i in range(20, 0, -1):
        embed.set_footer(text=f"‚è∞ La batalla comenzar√° en {i} segundos...")
        await interaction.edit_original_response(embed=embed)
        await asyncio.sleep(1)
    
    # Mensaje final
    embed.set_footer(text="üî• ¬°QUE COMIENCE LA BATALLA!")
    await interaction.edit_original_response(embed=embed)

        # AGREGAR ESTO:
    await asyncio.sleep(1)
    await ejecutar_duelo(interaction, personaje_retador, personaje_retado)
    
    


def obtener_titulo_por_nivel(clase, nivel):
    """Obtener t√≠tulo basado en clase y nivel"""
    clase_lower = clase.lower().replace(" ", "_")
    
    if clase_lower not in RANGOS_POR_CLASE:
        return "Recluta"
    
    rangos = RANGOS_POR_CLASE[clase_lower]
    
    # Para nivel 1, siempre es Recluta
    if nivel < 5:
        return "Recluta"
    
    # Buscar el rango m√°s alto que el nivel puede alcanzar
    titulo_actual = "Recluta"
    for nivel_requerido in sorted(rangos.keys()):
        if nivel >= nivel_requerido:
            titulo_actual = rangos[nivel_requerido]
        else:
            break
    
    return titulo_actual



class DesafioView(View):
    def __init__(self, retado_id, retador, retado):
        super().__init__(timeout=120)  # 2 minutos
        self.retado_id = retado_id
        self.retador = retador
        self.retado = retado
    
    @discord.ui.button(label="‚úÖ Aceptar", style=discord.ButtonStyle.green)
    async def aceptar_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        if interaction.user.id != self.retado_id:
            await interaction.response.send_message("‚ùå **Solo el retado puede responder.**", ephemeral=True)
            return
        
        # Obtener personajes y mostrar embed de desaf√≠o
        personaje_retador = await obtener_personaje(interaction.guild.id, self.retador.id)
        personaje_retado = await obtener_personaje(interaction.guild.id, self.retado.id)
        
        await crear_embed_desafio_from_interaction(interaction, self.retador, self.retado, personaje_retador, personaje_retado)
        
        # Auto-borrar despu√©s de 3 segundos
        await asyncio.sleep(3)
        try:
            await interaction.delete_original_response()
        except:
            pass
    
    @discord.ui.button(label="‚ùå Rechazar", style=discord.ButtonStyle.red)
    async def rechazar_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        if interaction.user.id != self.retado_id:
            await interaction.response.send_message("‚ùå **Solo el retado puede responder.**", ephemeral=True)
            return
        
        await interaction.response.edit_message(content="‚ùå **Desaf√≠o rechazado.**", embed=None, view=None)
        
        # Auto-borrar despu√©s de 3 segundos
        await asyncio.sleep(3)
        try:
            await interaction.delete_original_response()
        except:
            pass
    
    async def on_timeout(self):
        # Cuando se acaba el tiempo, borrar mensaje
        try:
            await self.message.edit(content="‚è∞ **Tiempo agotado - Desaf√≠o rechazado.**", embed=None, view=None)
            await asyncio.sleep(3)
            await self.message.delete()
        except:
            pass








# ========================================================================
#‚ô£ FUNCI√ìN MASCOTA
# ========================================================================

# ‚ô£‚úÖ FUNCI√ìN MOSTRAR MASCOTA ACTIVA ARREGLADA CON DISE√ëO ALINEADO
async def mostrar_mascota_activa(interaction, personaje, user_id=None):
    """Mostrar mascota activa con dise√±o alineado y EXP"""
    guild_id = interaction.guild.id
    if user_id is None:
        user_id = interaction.user.id
    
    # CREAR TABLA SI NO EXISTE
    await crear_tabla_mascotas()
    
    # Obtener clase del personaje
    clase_personaje = personaje[2]
    
    async with aiosqlite.connect(db_manager.db_path) as db:
        cursor = await db.execute(
            "SELECT * FROM mascotas WHERE guild_id = ? AND user_id = ? AND activa = 1",
            (guild_id, user_id)
        )
        mascota = await cursor.fetchone()
    
    if not mascota:
        embed = discord.Embed(
            title="üêæ Sin Mascota Activa",
            description="üì¶ **Tu establo est√° vac√≠o**\n\nNo tienes ninguna mascota equipada.\n\nüó°Ô∏è Puedes obtener mascotas en las aventuras\nüéí O revisar tu inventario si tienes huevos por eclosionar",
            color=0x808080
        )
        embed.set_image(url="https://via.placeholder.com/400x300/808080/FFFFFF?text=Sin+Mascota")
    else:
        nombre = mascota[2]
        tipo = mascota[3]
        nivel = mascota[4]
        hp_maximo = mascota[6]
        # ‚ô£‚úÖ L√çNEAS ARREGLADAS:
        exp_actual = int(mascota[9]) if len(mascota) > 9 and mascota[9] is not None and str(mascota[9]).isdigit() else 0
        exp_necesaria = int(mascota[10]) if len(mascota) > 10 and mascota[10] is not None and str(mascota[10]).isdigit() else nivel * 100
        
        # Extraer rareza del JSON stats
        stats = mascota[8] if len(mascota) > 8 else '{}'
        try:
            import json
            stats_data = json.loads(stats)
            rareza = stats_data.get("rareza", "comun")  # ‚ô£‚úÖ CAMBIAR "normal" POR "comun"
        except:
            rareza = "comun"  # ‚ô£‚úÖ CAMBIAR "normal" POR "comun"
        
        # Sistema de colores y emojis por rareza
        color_embed = COLORES_RAREZA_MASCOTA.get(rareza, 0x808080)
        emojis_rareza = {
            "comun": "ü§ç",  # ‚ô£‚úÖ CAMBIAR "normal" POR "comun"
            "raro": "üîµ", 
            "epico": "üü£",
            "legendario": "üü°"
        }
        emoji_rareza = emojis_rareza.get(rareza, "ü§ç")
        
        # Calcular bonificaciones por rareza
        multiplicador = {"normal": 1, "raro": 1.5, "epico": 2, "legendario": 3}.get(rareza, 1)
        atk_bonus = int((nivel * 2) * multiplicador)
        def_bonus = int(nivel * multiplicador)
        suerte_bonus = int((nivel // 2) * multiplicador)
        
        # ‚ô£‚úÖ NUEVO LAYOUT PERFECTO COMO DISE√ëAMOS
        # ‚ô£‚úÖ CALCULAR PORCENTAJE CON VALIDACI√ìN
        exp_porcentaje = int((exp_actual / exp_necesaria) * 100) if exp_necesaria > 0 and exp_actual >= 0 else 0
        barras_llenas = int((exp_actual / exp_necesaria) * 20) if exp_necesaria > 0 and exp_actual >= 0 else 0
        
        # Obtener descripci√≥n √©pica
        # Buscar en legendario y legendario_2
        desc_dict = DESCRIPCIONES_MASCOTAS.get(clase_personaje, {})
        descripcion_mascota = (desc_dict.get(rareza, {}).get(nombre) or 
                              desc_dict.get(rareza + "_2", {}).get(nombre) or 
                              "Una mascota leal que acompa√±a\na su compa√±ero en todas\nsus aventuras peligrosas.")
        
        # Calcular barras de progreso
        barras_totales = 10
        barras_llenas = int((exp_porcentaje / 100) * barras_totales)
        barras_vacias = barras_totales - barras_llenas
        
        embed = discord.Embed(
            title=f"üêæ MASCOTA ACTIVA",
            description=f"‚öîÔ∏è **ATK:** +{atk_bonus}„ÄÄ„ÄÄ„ÄÄ„ÄÄ„ÄÄ„ÄÄ„ÄÄüçÄ **SUERTE:** +{suerte_bonus}\n" +
                       f"üõ°Ô∏è **DEF:** +{def_bonus}„ÄÄ„ÄÄ„ÄÄ„ÄÄ„ÄÄ„ÄÄ„ÄÄ„ÄÄ{emoji_rareza} **Rareza:** {rareza.capitalize()}\n" +
                       f"üåü **EXP:** {exp_actual}/{exp_necesaria}„ÄÄ„ÄÄ„ÄÄü¶Ö **{nombre.upper()}** - Nivel {nivel}\n\n" +
                       f"üìä **Progreso EXP:** {'‚ñà' * barras_llenas}{'‚ñì' * barras_vacias} **{exp_porcentaje}%**\n\n" +
                       f"üéØ **Contribuci√≥n al PJ:** x{multiplicador} Multiplicador\n" +
                       f"üè∞ **Clase Compatible:** {CLASES_RPG[clase_personaje]['nombre']}\n\n" +
                       f"*{descripcion_mascota}*",
            color=color_embed
        )
        
        # Imagen din√°mica por clase y rareza
        imagen_mascota = IMAGENES_MASCOTAS.get(clase_personaje, {}).get(nombre, "url_default")
        embed.set_image(url=imagen_mascota)
    
    view = MascotaView(personaje, user_id)
    await interaction.response.edit_message(embed=embed, view=view)

class MascotaView(discord.ui.View):
    def __init__(self, personaje, user_id):
        super().__init__(timeout=300)
        self.personaje = personaje
        self.user_id = user_id
    
    @discord.ui.button(label="üîÑ Cambiar Mascota", style=discord.ButtonStyle.secondary)
    async def cambiar_mascota(self, interaction: discord.Interaction, button: discord.ui.Button):
        """Selector de mascotas disponibles"""
        if interaction.user.id != self.user_id:
            await interaction.response.send_message("‚õî Solo el due√±o del personaje puede usar esto.", ephemeral=True)
            return
            
        # CREAR TABLA SI NO EXISTE
        await crear_tabla_mascotas()
        
        guild_id = interaction.guild.id
        user_id = self.user_id or interaction.user.id
        
        # ‚ô£‚úÖ OBTENER SOLO MASCOTAS COMPATIBLES CON LA CLASE
        clase_personaje = self.personaje[2]  # Obtener clase del personaje
            
        async with aiosqlite.connect(db_manager.db_path) as db:
            cursor = await db.execute(
                "SELECT * FROM mascotas WHERE guild_id = ? AND user_id = ? AND clase = ?",
                (guild_id, user_id, clase_personaje)
            )
            mascotas = await cursor.fetchall()
        
        if not mascotas:
            await interaction.response.send_message("üì¶ No tienes mascotas disponibles.", ephemeral=True)
            return
        
        # ‚ô£‚úÖ CREAR SELECT MENU EN LUGAR DE BOTONES
        options = []
        for i, mascota in enumerate(mascotas[:25]):  # M√°ximo 25 opciones
            nombre = mascota[2]
            tipo = mascota[3]
            nivel = mascota[4]
            activa = mascota[7]
            
            # ‚ô£‚úÖ EXTRAER RAREZA DEL JSON STATS
            stats = mascota[8] if len(mascota) > 8 else '{}'
            try:
                import json
                stats_data = json.loads(stats)
                rareza = stats_data.get("rareza", "normal")
            except:
                rareza = "normal"
            
            # Emoji por rareza
            emojis_rareza = {
                "normal": "ü§ç",
                "raro": "üîµ", 
                "epico": "üü£",
                "legendario": "üü°"
            }
            emoji_rareza = emojis_rareza.get(rareza, "ü§ç")
            
            status = " ‚úÖ" if activa else ""
            
            options.append(discord.SelectOption(
                label=f"{nombre} - Lv.{nivel}{status}",
                description=f"{emoji_rareza} {tipo} - {rareza.capitalize()}",
                value=str(i),
                emoji=emoji_rareza
            ))
        
        embed = discord.Embed(
            title="üîÑ CAMBIAR MASCOTA ACTIVA",
            description="Selecciona una mascota:",
            color=0x9932CC
        )
        
        view = CambiarMascotaView(self.personaje, mascotas, self.user_id)
        await interaction.response.edit_message(embed=embed, view=view)
    
    @discord.ui.button(label="üîô Volver", style=discord.ButtonStyle.secondary)
    async def volver_personaje(self, interaction: discord.Interaction, button: discord.ui.Button):
        """Volver al men√∫ principal del personaje"""
        if interaction.user.id != self.user_id:
            await interaction.response.send_message("‚õî Solo el due√±o del personaje puede usar esto.", ephemeral=True)
            return

        #reino
        await mostrar_reino_principal(interaction, self.personaje, self.user_id)

# ‚ô£‚úÖ VISTA PARA CAMBIAR MASCOTA CON SELECT MENU
class CambiarMascotaView(discord.ui.View):
    def __init__(self, personaje, mascotas, user_id):
        super().__init__(timeout=300)
        self.personaje = personaje
        self.mascotas = mascotas
        self.user_id = user_id
        
        # ‚ô£‚úÖ AGREGAR EL SELECT MENU (DESCOMENTA ESTA L√çNEA)
        self.add_item(SelectorMascota(personaje, mascotas, user_id))
    
    @discord.ui.button(label="üîô Volver", style=discord.ButtonStyle.secondary)
    async def volver_mascota(self, interaction: discord.Interaction, button: discord.ui.Button):
        """Volver a la vista de mascota activa"""
        if interaction.user.id != self.user_id:
            await interaction.response.send_message("‚õî Solo el due√±o del personaje puede usar esto.", ephemeral=True)
            return
            
        await mostrar_mascota_activa(interaction, self.personaje, self.user_id)

# ‚ô£‚úÖ SELECT MENU PARA SELECCIONAR MASCOTA
class SelectorMascota(discord.ui.Select):
    def __init__(self, personaje, mascotas, user_id):
        self.personaje = personaje
        self.mascotas = mascotas
        self.user_id = user_id
        
        # Crear opciones para el select menu
        options = []
        for i, mascota in enumerate(mascotas[:25]):  # M√°ximo 25 opciones
            nombre = mascota[2]
            tipo = mascota[3]
            nivel = mascota[4]
            activa = mascota[7]
            
            # Extraer rareza del JSON stats
            stats = mascota[8] if len(mascota) > 8 else '{}'
            try:
                import json
                stats_data = json.loads(stats)
                rareza = stats_data.get("rareza", "normal")
            except:
                rareza = "normal"
            
            # Emoji por rareza
            emojis_rareza = {
                "normal": "ü§ç",
                "raro": "üîµ", 
                "epico": "üü£",
                "legendario": "üü°"
            }
            emoji_rareza = emojis_rareza.get(rareza, "ü§ç")
            
            status = " ‚úÖ" if activa else ""
            
            options.append(discord.SelectOption(
                label=f"{nombre} - Lv.{nivel}{status}",
                description=f"{tipo} - {rareza.capitalize()}",
                value=str(i),
                emoji=emoji_rareza
            ))
        
        super().__init__(placeholder="Selecciona una mascota...", options=options)
    
    async def callback(self, interaction: discord.Interaction):
        if interaction.user.id != self.user_id:
            await interaction.response.send_message("‚õî Solo el due√±o del personaje puede usar esto.", ephemeral=True)
            return
        
        # CREAR TABLA SI NO EXISTE
        await crear_tabla_mascotas()
        
        # Obtener mascota seleccionada
        index = int(self.values[0])
        mascota_seleccionada = self.mascotas[index]
        
        guild_id = interaction.guild.id
        user_id = self.user_id
        nombre_mascota = mascota_seleccionada[2]
        
        # Desactivar todas las mascotas del usuario
        async with aiosqlite.connect(db_manager.db_path) as db:
            await db.execute(
                "UPDATE mascotas SET activa = 0 WHERE guild_id = ? AND user_id = ?",
                (guild_id, user_id)
            )
            
            # Activar la mascota seleccionada
            await db.execute(
                "UPDATE mascotas SET activa = 1 WHERE guild_id = ? AND user_id = ? AND mascota_nombre = ?",
                (guild_id, user_id, nombre_mascota)
            )
            
            await db.commit()
        
        # Volver a mostrar la mascota activa
        await mostrar_mascota_activa(interaction, self.personaje, self.user_id)

# ‚ô£‚úÖ CLASE SELECTOR DE MASCOTAS CON SELECT MENU
class SelectorMascotasView(discord.ui.View):
    def __init__(self, personaje, mascotas, user_id):
        super().__init__(timeout=300)
        self.personaje = personaje
        # ‚ô£‚úÖ FILTRAR MASCOTAS POR CLASE
        clase_personaje = personaje[2]
        mascotas_filtradas = [m for m in mascotas if len(m) > 5 and m[5] == clase_personaje]
        self.mascotas = mascotas_filtradas
        self.user_id = user_id
        
        # ‚ô£‚úÖ CREAR SELECT MENU
        options = []
        for i, mascota in enumerate(self.mascotas[:25]):  # M√°ximo 25 opciones
            nombre = mascota[2]
            tipo = mascota[3]
            nivel = mascota[4]
            activa = mascota[7]
            
            # ‚ô£‚úÖ EXTRAER RAREZA DEL JSON STATS
            stats = mascota[8] if len(mascota) > 8 else '{}'
            try:
                import json
                stats_data = json.loads(stats)
                rareza = stats_data.get("rareza", "normal")
            except:
                rareza = "normal"
            
            # Emoji por rareza
            emojis_rareza = {
                "normal": "ü§ç",
                "raro": "üîµ", 
                "epico": "üü£",
                "legendario": "üü°"
            }
            emoji_rareza = emojis_rareza.get(rareza, "ü§ç")
            
            status = " ‚úÖ" if activa else ""
            
            options.append(discord.SelectOption(
                label=f"{nombre} - Lv.{nivel}{status}",
                description=f"{emoji_rareza} {tipo} - {rareza.capitalize()}",
                value=str(i),
                emoji=emoji_rareza
            ))
        
        select = discord.ui.Select(
            placeholder="Elige una mascota...",
            options=options
        )
        select.callback = self.seleccionar_mascota
        self.add_item(select)
    
    @discord.ui.button(label="üîÑ Volver", style=discord.ButtonStyle.gray)
    async def volver(self, interaction: discord.Interaction, button: discord.ui.Button):
        if interaction.user.id != self.user_id:
            await interaction.response.send_message("‚õî Solo el due√±o del personaje puede usar esto.", ephemeral=True)
            return
        await mostrar_mascota_activa(interaction, self.personaje, self.user_id)
    
    async def seleccionar_mascota(self, interaction):
        """Equipar mascota seleccionada"""
        if interaction.user.id != self.user_id:
            await interaction.response.send_message("‚õî Solo el due√±o del personaje puede usar esto.", ephemeral=True)
            return
        
        # CREAR TABLA SI NO EXISTE
        await crear_tabla_mascotas()
            
        index = int(interaction.data['values'][0])
        
        if index >= len(self.mascotas):
            return
            
        guild_id = interaction.guild.id
        mascota_seleccionada = self.mascotas[index]
        nombre = mascota_seleccionada[2]
        
        async with aiosqlite.connect(db_manager.db_path) as db:
            # Desactivar todas las mascotas del usuario
            await db.execute(
                "UPDATE mascotas SET activa = 0 WHERE guild_id = ? AND user_id = ?",
                (guild_id, self.user_id)
            )
            
            # ‚ô£‚úÖ ACTIVAR POR NOMBRE EN LUGAR DE ID
            await db.execute(
                "UPDATE mascotas SET activa = 1 WHERE guild_id = ? AND user_id = ? AND mascota_nombre = ?",
                (guild_id, self.user_id, nombre)
            )
            
            await db.commit()
        
        # ‚ô£‚úÖ REGRESAR A LA VISTA DE MASCOTA
        await mostrar_mascota_activa(interaction, self.personaje, self.user_id)
# ========================================================================
#‚ô£ FUNCI√ìN AVENTURA
# ========================================================================


# ‚ô£‚úÖ FUNCI√ìN MOSTRAR AVENTURAS (AGREGAR ESTA FUNCI√ìN)
async def mostrar_aventuras(interaction, personaje, user_id):
    """Mostrar las aventuras disponibles"""
    clase = personaje[2]
    nivel = int(personaje[3])
    
    clase_info = CLASES_RPG[clase]
    
    embed = discord.Embed(
        title="üó°Ô∏è AVENTURAS √âPICAS",
        description=f"*{clase_info['nombre']}, elige tu destino...*\n\n" +
                   "Cada aventura ofrece diferentes recompensas y peligros.",
        color=0xFF4500
    )
    
    embed.add_field(
        name="üü¢ Normal (Lv. 1+)",
        value="Recompensas b√°sicas\nTiempo: 2 horas",
        inline=True
    )
    
    if nivel >= 26:
        embed.add_field(
            name="üîµ Rara (Lv. 26+)",
            value="Mejores recompensas\nTiempo: 2 horas",
            inline=True
        )
    
    if nivel >= 51:
        embed.add_field(
            name="üü£ √âpica (Lv. 51+)",
            value="Grandes recompensas\nTiempo: 2 horas",
            inline=True
        )
    
    if nivel >= 76:
        embed.add_field(
            name="üü° Legendaria (Lv. 76+)",
            value="Recompensas legendarias\nTiempo: 2 horas",
            inline=True
        )
    
    view = AventurasView(personaje, user_id)
    await interaction.response.edit_message(embed=embed, view=view)

# ‚ô£‚úÖ CLASE VISTA MEN√ö REINO ARREGLADA
class MenuReinoView(discord.ui.View):
    def __init__(self, personaje, user_id):
        super().__init__(timeout=300)
        self.personaje = personaje
        self.user_id = user_id
    
    @discord.ui.button(label="üó°Ô∏è Aventura", style=discord.ButtonStyle.primary, row=0)
    async def aventura_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        if interaction.user.id != self.user_id:
            await interaction.response.send_message("‚õî Solo el due√±o del personaje puede usar esto.", ephemeral=True)
            return
        await mostrar_aventuras(interaction, self.personaje, self.user_id)
    
    @discord.ui.button(label="üêæ Mascota", style=discord.ButtonStyle.primary, row=0)
    async def mascota_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        if interaction.user.id != self.user_id:
            await interaction.response.send_message("‚õî Solo el due√±o del personaje puede usar esto.", ephemeral=True)
            return
        await mostrar_mascota_activa(interaction, self.personaje, self.user_id)
    
    @discord.ui.button(label="üéí Inventario", style=discord.ButtonStyle.primary, row=0)
    async def inventario_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        if interaction.user.id != self.user_id:
            await interaction.response.send_message("‚õî Solo el due√±o del personaje puede usar esto.", ephemeral=True)
            return
        await mostrar_inventario(interaction, editar=True)
    
    @discord.ui.button(label="‚öîÔ∏è Equipo", style=discord.ButtonStyle.primary, row=0)
    async def equipo_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        if interaction.user.id != self.user_id:
            await interaction.response.send_message("‚õî Solo el due√±o del personaje puede usar esto.", ephemeral=True)
            return
        await mostrar_equipo(interaction, editar=True)
    
    @discord.ui.button(label="‚öîÔ∏è PVP", style=discord.ButtonStyle.danger, row=1)
    async def pvp_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        if interaction.user.id != self.user_id:
            await interaction.response.send_message("‚õî Solo el due√±o del personaje puede usar esto.", ephemeral=True)
            return
        await mostrar_pvp(interaction, await obtener_personaje(interaction.guild.id, interaction.user.id), interaction.user.id)

# ‚ô£‚úÖ CLASE VISTA AVENTURAS
class AventurasView(discord.ui.View):
    def __init__(self, personaje, user_id):
        super().__init__(timeout=300)
        self.personaje = personaje
        self.user_id = user_id
        nivel = personaje[3]
        
        # A√±adir botones seg√∫n nivel
        if nivel >= 1:
            self.add_item(AventuraButton("Normal", "üü¢", user_id))
        if nivel >= 26:
            self.add_item(AventuraButton("Rara", "üîµ", user_id))
        if nivel >= 51:
            self.add_item(AventuraButton("√âpica", "üü£", user_id))
        if nivel >= 76:
            self.add_item(AventuraButton("Legendaria", "üü°", user_id))
    
    @discord.ui.button(label="üîÑ Volver", style=discord.ButtonStyle.gray, row=2)
    async def volver_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        if interaction.user.id != self.user_id:
            await interaction.response.send_message("‚õî Solo el due√±o del personaje puede usar esto.", ephemeral=True)
            return
        await mostrar_reino_principal(interaction, self.personaje)


async def agregar_stats_a_inventario():
    """Agregar stats a todos los items del inventario basado en ARMAS_POR_CLASE, etc."""
    import json
    
    async with aiosqlite.connect(db_manager.db_path) as db:
        # Obtener todos los items sin stats
        cursor = await db.execute("SELECT guild_id, user_id, objeto_nombre, objeto_tipo FROM inventario_objetos WHERE stats IS NULL OR stats = ''")
        items_sin_stats = await cursor.fetchall()
        
        for guild_id, user_id, nombre, tipo in items_sin_stats:
            stats_encontrados = None
            
            # Buscar en ARMAS_POR_CLASE
            if tipo == 'arma':
                for clase, armas in ARMAS_POR_CLASE.items():
                    for arma in armas:
                        if arma['nombre'] == nombre:
                            stats_encontrados = {"ataque": arma['ataque'], "defensa": arma['defensa']}
                            break
                    if stats_encontrados:
                        break
            
            # Buscar en ARMADURAS_POR_CLASE
            elif tipo == 'armadura':
                for clase, armaduras in ARMADURAS_POR_CLASE.items():
                    for armadura in armaduras:
                        if armadura['nombre'] == nombre:
                            stats_encontrados = {"ataque": armadura['ataque'], "defensa": armadura['defensa']}
                            break
                    if stats_encontrados:
                        break
            
            # Buscar en ACCESORIOS_POR_CLASE
            elif tipo == 'accesorio':
                for clase, accesorios in ACCESORIOS_POR_CLASE.items():
                    for accesorio in accesorios:
                        if accesorio['nombre'] == nombre:
                            stats_encontrados = {"ataque": accesorio['ataque'], "defensa": accesorio['defensa']}
                            break
                    if stats_encontrados:
                        break
            
            # Actualizar si se encontraron stats
            if stats_encontrados:
                stats_json = json.dumps(stats_encontrados)
                await db.execute(
                    "UPDATE inventario_objetos SET stats = ? WHERE guild_id = ? AND user_id = ? AND objeto_nombre = ?",
                    (stats_json, guild_id, user_id, nombre)
                )
                print(f"‚úÖ Stats agregados a {nombre}: {stats_encontrados}")
        
        await db.commit()
        print("üéØ Todos los stats han sido agregados al inventario!")

# COMANDO PARA EJECUTAR LA FUNCI√ìN
@bot.command(name='fix_stats')
@commands.is_owner()
async def fix_stats_command(ctx):
    """Comando para agregar stats a todos los items (solo propietario)"""
    await agregar_stats_a_inventario()
    await ctx.send("‚úÖ Stats agregados a todos los items del inventario!")



# ‚ô£‚úÖ CLASE BOT√ìN AVENTURA
class AventuraButton(discord.ui.Button):
    def __init__(self, tipo, emoji, user_id):
        super().__init__(label=f"{emoji} {tipo}", style=discord.ButtonStyle.primary)
        self.tipo = tipo.lower()
        self.user_id = user_id
    
    async def callback(self, interaction: discord.Interaction):
        if interaction.user.id != self.user_id:
            await interaction.response.send_message("‚õî Solo el due√±o del personaje puede usar esto.", ephemeral=True)
            return
        await iniciar_aventura(interaction, self.view.personaje, self.tipo)

# ‚ô£‚úÖ FUNCI√ìN INICIAR AVENTURA
async def iniciar_aventura(interaction, personaje, tipo):
    """Iniciar una aventura"""
    guild_id = interaction.guild.id
    user_id = interaction.user.id
    hp_actual = personaje[5]
    
    # Verificar si ya est√° en aventura
    async with aiosqlite.connect(db_manager.db_path) as db:
        cursor = await db.execute(
            "SELECT * FROM aventuras_activas WHERE guild_id = ? AND user_id = ?",
            (guild_id, user_id)
        )
        aventura_activa = await cursor.fetchone()
    
    if aventura_activa:
        await interaction.response.send_message("‚õî Ya tienes una aventura en progreso.", ephemeral=True)
        return
    
    if hp_actual < 30:
        await interaction.response.send_message(
            "üíî Tu h√©roe est√° gravemente herido. Debe descansar o usar una poci√≥n antes de aventurarse.",
            ephemeral=True
        )
        return
    
    # Iniciar aventura
    tiempo_inicio = datetime.now(timezone.utc)
    tiempo_fin = tiempo_inicio + timedelta(hours=2)
    
    async with aiosqlite.connect(db_manager.db_path) as db:
        await db.execute(
            "INSERT INTO aventuras_activas (guild_id, user_id, tipo_aventura, tiempo_inicio, tiempo_fin) VALUES (?, ?, ?, ?, ?)",
            (guild_id, user_id, tipo, tiempo_inicio.isoformat(), tiempo_fin.isoformat())
        )
        await db.commit()

    embed = discord.Embed(
        title="üó°Ô∏è ¬°AVENTURA INICIADA!",
        description=f"Tu h√©roe ha partido en una aventura **{tipo}**.\n\n" +
                   f"‚è∞ Tiempo estimado: **2 horas**\n" +
                   f"üîç Usa `!aventura` para verificar el progreso.",
        color=0x00FF00
    )
    
    await interaction.response.edit_message(embed=embed, view=None)


# ========================================================================
#‚ô£ FUNCI√ìN VISTA DE QUIPO
# ========================================================================


# ‚ô£‚úÖ CLASE VISTA EQUIPO ARREGLADA
class EquipoView(discord.ui.View):
    def __init__(self, personaje, user_id):
        super().__init__(timeout=300)
        self.personaje = personaje
        self.user_id = user_id
    
    @discord.ui.button(label="‚öîÔ∏è Cambiar Equipo", style=discord.ButtonStyle.primary)
    async def cambiar_equipo(self, interaction: discord.Interaction, button: discord.ui.Button):
        if interaction.user.id != self.user_id:
            await interaction.response.send_message("‚õî Solo el due√±o puede usar esto.", ephemeral=True)
            return
        await mostrar_inventario(interaction, editar=True)
    
    @discord.ui.button(label="üîÑ Volver", style=discord.ButtonStyle.gray)
    async def volver(self, interaction: discord.Interaction, button: discord.ui.Button):
        if interaction.user.id != self.user_id:
            await interaction.response.send_message("‚õî Solo el due√±o puede usar esto.", ephemeral=True)
            return
        await mostrar_reino_principal(interaction, self.personaje)




# ========================================================================
#‚ô£ FUNCI√ìN MOSTRAR INVENTARIO
# ========================================================================



async def mostrar_armas(interaction, personaje, user_id):
    """Mostrar armas disponibles con SELECT MENU para equipar/desequipar"""
    guild_id = interaction.guild.id
    clase = personaje[2]
    
    # Obtener armas del inventario
    async with aiosqlite.connect(db_manager.db_path) as db:
        cursor = await db.execute(
            "SELECT objeto_nombre, rareza, equipado, stats FROM inventario_objetos WHERE guild_id = ? AND user_id = ? AND objeto_tipo = 'arma'",
            (guild_id, str(user_id))
        )
        armas = await cursor.fetchall()
    
    # Buscar arma equipada
    arma_equipada = None
    for arma_nombre, rareza, equipado, stats in armas:
        if equipado == 1:
            emoji_rareza = obtener_emoji_rareza(rareza)
            arma_equipada = f"{emoji_rareza} {arma_nombre} ‚úÖ EQUIPADO"
            break
    
    if not arma_equipada:
        arma_equipada = "‚ùå Sin arma equipada"
    
    embed = discord.Embed(
        title="‚öîÔ∏è ARMAS DISPONIBLES",
        description=f"Clase: {clase.capitalize()}\n{arma_equipada}",
        color=0xff6b35
    )
    
    if not armas:
        embed.description = f"Clase: {clase.capitalize()}\n‚ùå No tienes armas en tu inventario"
        view = InventarioView(personaje, user_id)
        try:
            await interaction.response.edit_message(embed=embed, view=view)
        except:
            await interaction.edit_original_response(embed=embed, view=view)
        return
    
    # ‚ô£‚úÖ CREAR SELECT MENU PARA ARMAS CON CALLBACK
    select_armas = discord.ui.Select(
        placeholder="Selecciona un arma para equipar/desequipar...",
        min_values=1,
        max_values=1,
        custom_id="select_arma"
    )
    
    for arma_nombre, rareza, equipado, stats in armas:
        estado_emoji = "‚úÖ" if equipado else "‚ùå"
        
        # ‚ô£‚úÖ OBTENER STATS DEL ITEM
        stats_text = ""
        if stats:
            try:
                import json
                stats_data = json.loads(stats)
                atk = stats_data.get('ataque', 0)
                def_val = stats_data.get('defensa', 0)
                stats_text = f" | ATK: +{atk} DEF: +{def_val}"
            except:
                pass
        
        select_armas.add_option(
            label=f"{arma_nombre}",
            description=f"Rareza: {rareza.capitalize()}{stats_text} | {('Equipado' if equipado else 'Sin equipar')}",
            emoji=estado_emoji,
            value=f"arma_{arma_nombre}"
        )
    
    # ‚ô£‚úÖ AGREGAR CALLBACK AL SELECT
    async def select_callback(interaction):
        valor = interaction.data['values'][0]
        await manejar_equipar_item(interaction, valor, personaje, user_id)

    select_armas.callback = select_callback

    view = InventarioView(personaje, user_id)
    view.add_item(select_armas)

    try:
        await interaction.response.edit_message(embed=embed, view=view)
    except:
        await interaction.edit_original_response(embed=embed, view=view)

async def mostrar_armaduras(interaction, personaje, user_id):
    """Mostrar armaduras disponibles con SELECT MENU para equipar/desequipar"""
    guild_id = interaction.guild.id
    clase = personaje[2]
    
    # Obtener armaduras del inventario
    async with aiosqlite.connect(db_manager.db_path) as db:
        cursor = await db.execute(
            "SELECT objeto_nombre, rareza, equipado, stats FROM inventario_objetos WHERE guild_id = ? AND user_id = ? AND objeto_tipo = 'armadura'",
            (guild_id, str(user_id))
        )
        armaduras = await cursor.fetchall()
    
    # Buscar armadura equipada
    armadura_equipada = None
    for armadura_nombre, rareza, equipado, stats in armaduras:
        if equipado == 1:
            emoji_rareza = obtener_emoji_rareza(rareza)
            armadura_equipada = f"{emoji_rareza} {armadura_nombre} ‚úÖ EQUIPADO"
            break
    
    if not armadura_equipada:
        armadura_equipada = "‚ùå Sin armadura equipada"
    
    embed = discord.Embed(
        title="üõ°Ô∏è ARMADURAS DISPONIBLES",
        description=f"Clase: {clase.capitalize()}\n{armadura_equipada}",
        color=0x4a90e2
    )
    
    if not armaduras:
        embed.description = f"Clase: {clase.capitalize()}\n‚ùå No tienes armaduras en tu inventario"
        view = InventarioView(personaje, user_id)
        try:
            await interaction.response.edit_message(embed=embed, view=view)
        except:
            await interaction.edit_original_response(embed=embed, view=view)
        return
    
    # ‚ô£‚úÖ CREAR SELECT MENU PARA ARMADURAS CON CALLBACK
    select_armaduras = discord.ui.Select(
        placeholder="Selecciona una armadura para equipar/desequipar...",
        min_values=1,
        max_values=1,
        custom_id="select_armadura"
    )
    
    for armadura_nombre, rareza, equipado, stats in armaduras:
        estado_emoji = "‚úÖ" if equipado else "‚ùå"
        
        # ‚ô£‚úÖ OBTENER STATS DEL ITEM
        stats_text = ""
        if stats:
            try:
                import json
                stats_data = json.loads(stats)
                atk = stats_data.get('ataque', 0)
                def_val = stats_data.get('defensa', 0)
                stats_text = f" | ATK: +{atk} DEF: +{def_val}"
            except:
                pass
        
        select_armaduras.add_option(
            label=f"{armadura_nombre}",
            description=f"Rareza: {rareza.capitalize()}{stats_text} | {('Equipado' if equipado else 'Sin equipar')}",
            emoji=estado_emoji,
            value=f"armadura_{armadura_nombre}"
        )
    
    # ‚ô£‚úÖ AGREGAR CALLBACK AL SELECT
    async def select_callback(interaction):
        valor = interaction.data['values'][0]
        await manejar_equipar_item(interaction, valor, personaje, user_id)
    
    select_armaduras.callback = select_callback
    
    view = InventarioView(personaje, user_id)
    view.add_item(select_armaduras)
    
    try:
        await interaction.response.edit_message(embed=embed, view=view)
    except:
        
        await interaction.edit_original_response(embed=embed, view=view)

async def mostrar_accesorios(interaction, personaje, user_id):
    """Mostrar accesorios disponibles con SELECT MENU para equipar/desequipar"""
    guild_id = interaction.guild.id
    clase = personaje[2]
    
    # Obtener accesorios del inventario
    async with aiosqlite.connect(db_manager.db_path) as db:
        cursor = await db.execute(
            "SELECT objeto_nombre, rareza, equipado, stats FROM inventario_objetos WHERE guild_id = ? AND user_id = ? AND objeto_tipo = 'accesorio'",
            (guild_id, str(user_id))
        )
        accesorios = await cursor.fetchall()
    
    # Buscar accesorio equipado
    accesorio_equipado = None
    for accesorio_nombre, rareza, equipado, stats in accesorios:
        if equipado == 1:
            emoji_rareza = obtener_emoji_rareza(rareza)
            accesorio_equipado = f"{emoji_rareza} {accesorio_nombre} ‚úÖ EQUIPADO"
            break
    
    if not accesorio_equipado:
        accesorio_equipado = "‚ùå Sin accesorio equipado"
    
    embed = discord.Embed(
        title="üíç ACCESORIOS DISPONIBLES",
        description=f"Clase: {clase.capitalize()}\n{accesorio_equipado}",
        color=0x9b59b6
    )
    
    if not accesorios:
        embed.description = f"Clase: {clase.capitalize()}\n‚ùå No tienes accesorios en tu inventario"
        view = InventarioView(personaje, user_id)
        try:
            await interaction.response.edit_message(embed=embed, view=view)
        except:
            await interaction.edit_original_response(embed=embed, view=view)
        return
    
    # ‚ô£‚úÖ CREAR SELECT MENU PARA ACCESORIOS CON CALLBACK
    select_accesorios = discord.ui.Select(
        placeholder="Selecciona un accesorio para equipar/desequipar...",
        min_values=1,
        max_values=1,
        custom_id="select_accesorio"
    )
    
    for accesorio_nombre, rareza, equipado, stats in accesorios:
        estado_emoji = "‚úÖ" if equipado else "‚ùå"
        
        # ‚ô£‚úÖ OBTENER STATS DEL ITEM
        stats_text = ""
        if stats:
            try:
                import json
                stats_data = json.loads(stats)
                atk = stats_data.get('ataque', 0)
                def_val = stats_data.get('defensa', 0)
                stats_text = f" | ATK: +{atk} DEF: +{def_val}"
            except:
                pass
        
        select_accesorios.add_option(
            label=f"{accesorio_nombre}",
            description=f"Rareza: {rareza.capitalize()}{stats_text} | {('Equipado' if equipado else 'Sin equipar')}",
            emoji=estado_emoji,
            value=f"accesorio_{accesorio_nombre}"
        )
    
    # ‚ô£‚úÖ AGREGAR CALLBACK AL SELECT
    async def select_callback(interaction):
        valor = interaction.data['values'][0]
        await manejar_equipar_item(interaction, valor, personaje, user_id)
    
    select_accesorios.callback = select_callback
    
    view = InventarioView(personaje, user_id)
    view.add_item(select_accesorios)
    
    try:
        await interaction.response.edit_message(embed=embed, view=view)
    except:
        await interaction.edit_original_response(embed=embed, view=view)


class InventarioView(discord.ui.View):
    def __init__(self, personaje, user_id):
        super().__init__(timeout=300)
        self.personaje = personaje
        self.user_id = user_id

    @discord.ui.button(label="‚öîÔ∏è Armas", style=discord.ButtonStyle.primary)
    async def armas_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        await mostrar_armas(interaction, self.personaje, self.user_id)

# ‚ô£‚úÖ BUSCA LA CLASE InventarioView Y AGREGA ESTE BOT√ìN:

    @discord.ui.button(label="üß™ Pociones", style=discord.ButtonStyle.primary)
    async def pociones_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        await mostrar_pociones(interaction, self.personaje, self.user_id)
    
    @discord.ui.button(label="üõ°Ô∏è Armaduras", style=discord.ButtonStyle.primary)
    async def armaduras_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        await mostrar_armaduras(interaction, self.personaje, self.user_id)

    @discord.ui.button(label="üíç Accesorios", style=discord.ButtonStyle.primary)
    async def accesorios_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        await mostrar_accesorios(interaction, self.personaje, self.user_id)

    @discord.ui.button(label="üè† Volver", style=discord.ButtonStyle.secondary)
    async def volver_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        await mostrar_reino_principal(interaction, self.personaje, self.user_id)

    async def interaction_check(self, interaction: discord.Interaction) -> bool:
        """Verificar que solo el usuario correcto pueda usar la vista"""
        return interaction.user.id == self.user_id

    async def on_timeout(self):
        """Cuando se agote el tiempo, deshabilitar la vista"""
        for item in self.children:
            item.disabled = True


async def mostrar_armas_refresh(interaction, personaje, user_id):
    """Refrescar vista de armas usando edit_original_response"""
    guild_id = interaction.guild.id
    clase = personaje[2]
    
    # Obtener armas del inventario
    async with aiosqlite.connect(db_manager.db_path) as db:
        cursor = await db.execute(
            "SELECT objeto_nombre, rareza, equipado FROM inventario_objetos WHERE guild_id = ? AND user_id = ? AND objeto_tipo = 'arma'",
            (guild_id, str(user_id))
        )
        armas = await cursor.fetchall()
    
    # Buscar arma equipada
    arma_equipada = None
    for arma_nombre, rareza, equipado in armas:
        if equipado == 1:
            emoji_rareza = obtener_emoji_rareza(rareza)
            arma_equipada = f"{emoji_rareza} {arma_nombre} ‚úÖ EQUIPADO"
            break
    
    if not arma_equipada:
        arma_equipada = "‚ùå Sin arma equipada"
    
    embed = discord.Embed(
        title="‚öîÔ∏è ARMAS DISPONIBLES",
        description=f"Clase: {clase.capitalize()}\n{arma_equipada}",
        color=0xff6b35
    )
    
    if not armas:
        embed.description = f"Clase: {clase.capitalize()}\n‚ùå No tienes armas en tu inventario"
        view = InventarioView(personaje, user_id)
        await interaction.edit_original_response(embed=embed, view=view)
        return
    
    # SELECT MENU
    select_armas = discord.ui.Select(
        placeholder="Selecciona un arma para equipar/desequipar...",
        min_values=1,
        max_values=1,
        custom_id="select_arma"
    )
    
    for arma_nombre, rareza, equipado in armas:
        estado_emoji = "‚úÖ" if equipado else "‚ùå"
        select_armas.add_option(
            label=f"{arma_nombre}",
            description=f"Rareza: {rareza.capitalize()} | {('Equipado' if equipado else 'Sin equipar')}",
            emoji=estado_emoji,
            value=f"arma_{arma_nombre}"
        )
    
    async def select_callback(interaction):
        valor = interaction.data['values'][0]
        await manejar_equipar_item(interaction, valor, personaje, user_id)

    select_armas.callback = select_callback

    view = InventarioView(personaje, user_id)
    view.add_item(select_armas)

    await interaction.edit_original_response(embed=embed, view=view)



# ‚ô£‚úÖ 1. CREAR TABLA DE EFECTOS TEMPORALES
async def crear_tabla_efectos():
    """Crear tabla para efectos temporales"""
    async with aiosqlite.connect(db_manager.db_path) as db:
        await db.execute('''
            CREATE TABLE IF NOT EXISTS efectos_temporales (
                guild_id TEXT,
                user_id TEXT,
                efecto_tipo TEXT,
                efecto_valor INTEGER,
                inicio REAL,
                duracion INTEGER,
                activo INTEGER DEFAULT 1
            )
        ''')
        await db.commit()

# ‚ô£‚úÖ 2. APLICAR EFECTO TEMPORAL (ARREGLADO CON L√çMITE)
async def aplicar_efecto_temporal(guild_id, user_id, efecto_tipo, valor, duracion_horas=2):
    """Aplicar efecto temporal (ataque, defensa, etc.) con l√≠mite de 3 efectos"""
    import time
    
    await crear_tabla_efectos()  # Asegurar que la tabla existe
    
    async with aiosqlite.connect(db_manager.db_path) as db:
        # ‚úÖ VERIFICAR L√çMITE DE 3 EFECTOS ACTIVOS
        cursor = await db.execute(
            "SELECT COUNT(*) FROM efectos_temporales WHERE guild_id = ? AND user_id = ? AND activo = 1",
            (guild_id, user_id)
        )
        efectos_activos = await cursor.fetchone()
        
        # Verificar si ya tiene este tipo de efecto
        cursor = await db.execute(
            "SELECT COUNT(*) FROM efectos_temporales WHERE guild_id = ? AND user_id = ? AND efecto_tipo = ? AND activo = 1",
            (guild_id, user_id, efecto_tipo)
        )
        mismo_tipo = await cursor.fetchone()
        
        # Si ya tiene 3 efectos y no es reemplazo del mismo tipo
        if efectos_activos[0] >= 3 and mismo_tipo[0] == 0:
            return False  # No se puede agregar m√°s efectos
        
        # Remover efecto anterior del mismo tipo
        await db.execute(
            "UPDATE efectos_temporales SET activo = 0 WHERE guild_id = ? AND user_id = ? AND efecto_tipo = ?",
            (guild_id, user_id, efecto_tipo)
        )
        
        # Agregar nuevo efecto
        inicio = time.time()
        duracion_segundos = duracion_horas * 3600
        
        await db.execute(
            "INSERT INTO efectos_temporales (guild_id, user_id, efecto_tipo, efecto_valor, inicio, duracion, activo) VALUES (?, ?, ?, ?, ?, ?, 1)",
            (guild_id, user_id, efecto_tipo, valor, inicio, duracion_segundos)
        )
        await db.commit()
        return True  # Efecto aplicado con √©xito

# ‚ô£‚úÖ 3. CALCULAR STATS CON EFECTOS (ARREGLADO)
async def calcular_stats_con_efectos(guild_id, user_id, stats_base):
    """Calcular stats incluyendo efectos temporales activos"""
    import time
    
    # ‚úÖ CREAR TABLA SI NO EXISTE
    await crear_tabla_efectos()
    
    async with aiosqlite.connect(db_manager.db_path) as db:
        # Limpiar efectos expirados primero
        tiempo_actual = time.time()
        await db.execute(
            "UPDATE efectos_temporales SET activo = 0 WHERE (inicio + duracion) <= ? AND activo = 1",
            (tiempo_actual,)
        )
        await db.commit()
        
        # Obtener efectos activos
        cursor = await db.execute(
            "SELECT efecto_tipo, efecto_valor FROM efectos_temporales WHERE guild_id = ? AND user_id = ? AND activo = 1",
            (guild_id, user_id)
        )
        efectos = await cursor.fetchall()
        
        stats_finales = stats_base.copy()
        
        for efecto_tipo, valor in efectos:
            if efecto_tipo == 'ataque':
                stats_finales['ataque'] += valor
            elif efecto_tipo == 'defensa':
                stats_finales['defensa'] += valor
            elif efecto_tipo == 'regeneracion':
                stats_finales['regeneracion'] = stats_finales.get('regeneracion', 0) + valor
            elif efecto_tipo == 'doble_ataque':
                stats_finales['doble_ataque'] = stats_finales.get('doble_ataque', 0) + valor
            elif efecto_tipo == 'suerte':
                stats_finales['suerte'] = stats_finales.get('suerte', 0) + valor
            elif efecto_tipo == 'debuff_enemigo':
                stats_finales['debuff_enemigo'] = stats_finales.get('debuff_enemigo', 0) + valor
            elif efecto_tipo == 'ataque_inmunidad':
                stats_finales['ataque_inmunidad'] = stats_finales.get('ataque_inmunidad', 0) + valor
            elif efecto_tipo == 'critico':
                stats_finales['critico'] = stats_finales.get('critico', 0) + valor
            elif efecto_tipo == 'revive':
                stats_finales['revive'] = stats_finales.get('revive', 0) + valor
        
        return stats_finales

async def obtener_efectos_activos_texto(guild_id, user_id):
    """Obtener texto de efectos activos con countdown"""
    import time
    
    # ‚úÖ CREAR TABLA SI NO EXISTE
    await crear_tabla_efectos()
    
    async with aiosqlite.connect(db_manager.db_path) as db:
        # Limpiar efectos expirados primero
        tiempo_actual = time.time()
        await db.execute(
            "UPDATE efectos_temporales SET activo = 0 WHERE (inicio + duracion) <= ? AND activo = 1",
            (tiempo_actual,)
        )
        await db.commit()
        
        # Obtener efectos activos (m√°ximo 3)
        cursor = await db.execute(
            "SELECT efecto_tipo, efecto_valor, inicio, duracion FROM efectos_temporales WHERE guild_id = ? AND user_id = ? AND activo = 1 ORDER BY inicio DESC LIMIT 3",
            (guild_id, user_id)
        )
        efectos = await cursor.fetchall()
        
        if not efectos:
            return ""
        
        texto_efectos = "‚ú® **Efectos Activos:**\n"
        
        for efecto_tipo, valor, inicio, duracion in efectos:
            tiempo_restante = (inicio + duracion) - tiempo_actual
            
            if tiempo_restante > 0:
                horas = int(tiempo_restante // 3600)
                minutos = int((tiempo_restante % 3600) // 60)
                segundos = int(tiempo_restante % 60)
                
                # Emoji seg√∫n tipo
                if efecto_tipo == "ataque":
                    emoji = "‚öîÔ∏è"
                elif efecto_tipo == "defensa":
                    emoji = "üõ°Ô∏è"
                elif efecto_tipo == "regeneracion":
                    emoji = "üîÑ"
                elif efecto_tipo == "doble_ataque":
                    emoji = "‚ö°"
                elif efecto_tipo == "suerte":
                    emoji = "üçÄ"
                elif efecto_tipo == "debuff_enemigo":
                    emoji = "üò®"
                elif efecto_tipo == "ataque_inmunidad":
                    emoji = "üõ°Ô∏è"
                elif efecto_tipo == "critico":
                    emoji = "üéØ"
                elif efecto_tipo == "revive":
                    emoji = "üíÄ"
                else:
                    emoji = "‚ú®"
                
                texto_efectos += f"{emoji} +{valor} {efecto_tipo.capitalize()} - {horas:02d}:{minutos:02d}:{segundos:02d}\n"
        
        return texto_efectos

async def calcular_stats_totales(personaje, guild_id, user_id):
    """Calcular stats totales: nivel + equipo + efectos temporales"""
    nivel = personaje[3]
    clase = personaje[2]
    
    # ‚ô£‚úÖ STATS BASE CON HP INCLUIDO
    stats_base = {
        'ataque': STATS_BASE_POR_CLASE[clase]['ataque'] + (nivel * 10),
        'defensa': STATS_BASE_POR_CLASE[clase]['defensa'] + (nivel * 10),
        'hp': 1000 + (nivel * 100)  # HP base + nivel
    }
    
    # Sumar stats de equipamiento
    async with aiosqlite.connect(db_manager.db_path) as db:
        cursor = await db.execute(
            "SELECT stats FROM inventario_objetos WHERE guild_id = ? AND user_id = ? AND equipado = 1",
            (guild_id, str(user_id))
        )
        items_equipados = await cursor.fetchall()
        
        for item_stats in items_equipados:
            if item_stats[0]:
                try:
                    import json
                    stats = json.loads(item_stats[0])
                    stats_base['ataque'] += stats.get('ataque', 0)
                    stats_base['defensa'] += stats.get('defensa', 0)
                    stats_base['hp'] += stats.get('hp', 0)  # Tambi√©n HP de equipos
                except:
                    pass
    
    # ‚ô£‚úÖ SUMAR EFECTOS TEMPORALES
    stats_finales = await calcular_stats_con_efectos(guild_id, str(user_id), stats_base)
    
    return stats_finales

# ‚ô£‚úÖ 7. COMANDO PARA CREAR TABLA (EJECUTAR UNA VEZ)
@bot.command(name='create_efectos')
@commands.is_owner()
async def create_efectos_command(ctx):
    """Crear tabla de efectos temporales"""
    await crear_tabla_efectos()
    await ctx.send("‚úÖ Tabla de efectos temporales creada!")



@bot.command(name="debug_efectos", description="Ver efectos en base de datos (debug)")
async def debug_efectos(ctx):
    guild_id = ctx.guild.id
    user_id = str(ctx.author.id)
    
    async with aiosqlite.connect(db_manager.db_path) as db:
        cursor = await db.execute(
            "SELECT efecto_tipo, efecto_valor, inicio, duracion, activo FROM efectos_temporales WHERE guild_id = ? AND user_id = ?",
            (guild_id, user_id)
        )
        efectos = await cursor.fetchall()
        
        if not efectos:
            await ctx.send("No tienes efectos en la base de datos")
            return
            
        texto = "**EFECTOS EN BASE DE DATOS:**\n"
        for efecto in efectos:
            texto += f"- {efecto[0]}: +{efecto[1]} | Activo: {efecto[4]}\n"
            
        await ctx.send(texto)




# ‚ô£‚úÖ AGREGAR BOT√ìN POCIONES A InventarioView
@discord.ui.button(label="üß™ Pociones", style=discord.ButtonStyle.primary)
async def pociones_button(self, interaction: discord.Interaction, button: discord.ui.Button):
    await mostrar_pociones(interaction, self.personaje, self.user_id)

# ‚ô£‚úÖ FUNCI√ìN MOSTRAR POCIONES
async def mostrar_pociones(interaction, personaje, user_id):
    """Mostrar pociones disponibles con SELECT MENU para usar"""
    guild_id = interaction.guild.id
    clase = personaje[2]
    
    # Obtener pociones del inventario
    async with aiosqlite.connect(db_manager.db_path) as db:
        cursor = await db.execute(
            "SELECT objeto_nombre, rareza, cantidad FROM inventario_objetos WHERE guild_id = ? AND user_id = ? AND objeto_tipo = 'pocion'",
            (guild_id, str(user_id))
        )
        pociones = await cursor.fetchall()
    
    embed = discord.Embed(
        title="üß™ POCIONES DISPONIBLES",
        description=f"Clase: {clase.capitalize()}\nüïê Efectos activos expiran en tiempo real",
        color=0x8e44ad
    )
    
    if not pociones:
        embed.description = f"Clase: {clase.capitalize()}\n‚ùå No tienes pociones en tu inventario"
        view = InventarioView(personaje, user_id)
        try:
            await interaction.response.edit_message(embed=embed, view=view)
        except:
            await interaction.edit_original_response(embed=embed, view=view)
        return
    
    # ‚ô£‚úÖ CREAR SELECT MENU PARA POCIONES
    select_pociones = discord.ui.Select(
        placeholder="Selecciona una poci√≥n para usar...",
        min_values=1,
        max_values=1,
        custom_id="select_pocion"
    )
    
    for pocion_nombre, rareza, cantidad in pociones:
        # Obtener efecto de la poci√≥n
        efecto_texto = ""
        if pocion_nombre in POCIONES:
            efecto_datos = POCIONES[pocion_nombre]
            
            # Mostrar efecto seg√∫n tipo
            if efecto_datos['efecto'] == 'heal':
                efecto_texto = f"üíö Cura {efecto_datos['valor']} HP"
            elif efecto_datos['efecto'] == 'ataque':
                efecto_texto = f"‚öîÔ∏è +{efecto_datos['valor']} ATK por {efecto_datos['duracion']}min"
            elif efecto_datos['efecto'] == 'defensa':
                efecto_texto = f"üõ°Ô∏è +{efecto_datos['valor']} DEF por {efecto_datos['duracion']}min"
            elif efecto_datos['efecto'] == 'doble_ataque':
                efecto_texto = f"‚ö° Doble ataque por {efecto_datos['duracion']}min"
            elif efecto_datos['efecto'] == 'critico':
                efecto_texto = f"üí• {efecto_datos['valor']}% cr√≠tico por {efecto_datos['duracion']}min"
            elif efecto_datos['efecto'] == 'regeneracion':
                efecto_texto = f"üîÑ +{efecto_datos['valor']} HP/turno por {efecto_datos['duracion']}min"
            elif efecto_datos['efecto'] == 'revive':
                efecto_texto = f"üíÄ Revive con {efecto_datos['valor']}% HP"
            elif efecto_datos['efecto'] == 'suerte':
                efecto_texto = f"üçÄ +{efecto_datos['valor']}% suerte por {efecto_datos['duracion']}min"
            else:
                efecto_texto = f"‚ú® Efecto especial"
        else:
            efecto_texto = "Sin descripci√≥n"
            
        emoji_rareza = obtener_emoji_rareza(rareza)
        select_pociones.add_option(
            label=f"{pocion_nombre} (x{cantidad})",
            description=f"Rareza: {rareza.capitalize()} | {efecto_texto}",
            emoji=emoji_rareza,
            value=f"pocion_{pocion_nombre}"
        )
    
    # ‚ô£‚úÖ AGREGAR CALLBACK AL SELECT
    async def select_callback(select_interaction):
        valor = select_interaction.data['values'][0]
        await mostrar_confirmar_pocion(select_interaction, valor, personaje, user_id)

    select_pociones.callback = select_callback

    view = InventarioView(personaje, user_id)
    view.add_item(select_pociones)

    try:
        await interaction.response.edit_message(embed=embed, view=view)
    except:
        await interaction.edit_original_response(embed=embed, view=view)

# ‚ô£‚úÖ MOSTRAR CONFIRMACI√ìN DE POCI√ìN
async def mostrar_confirmar_pocion(interaction, valor_seleccionado, personaje, user_id):
    """Mostrar bot√≥n para confirmar uso de poci√≥n"""
    guild_id = interaction.guild.id
    pocion_nombre = valor_seleccionado.replace('pocion_', '')
    
    embed = discord.Embed(
        title="üß™ CONFIRMAR USO DE POCI√ìN",
        description=f"¬øUsar **{pocion_nombre}**?",
        color=0x8e44ad
    )
    
    # Agregar informaci√≥n de la poci√≥n
    if pocion_nombre in POCIONES:
        efecto_datos = POCIONES[pocion_nombre]
        if efecto_datos['efecto'] == 'heal':
            efecto_texto = f"üíö Cura {efecto_datos['valor']} HP"
        elif efecto_datos['efecto'] == 'ataque':
            efecto_texto = f"‚öîÔ∏è +{efecto_datos['valor']} ATK por {efecto_datos['duracion']}min"
        elif efecto_datos['efecto'] == 'defensa':
            efecto_texto = f"üõ°Ô∏è +{efecto_datos['valor']} DEF por {efecto_datos['duracion']}min"
        else:
            efecto_texto = "‚ú® Efecto especial"
        
        embed.add_field(
            name="üîÆ Efecto",
            value=f"**{efecto_texto}**",
            inline=False
        )
    
    # Crear vista con bot√≥n USAR
    view = ConfirmarPocionView(pocion_nombre, personaje, user_id)
    
    try:
        await interaction.response.edit_message(embed=embed, view=view)
    except:
        await interaction.edit_original_response(embed=embed, view=view)

# ‚ô£‚úÖ VISTA PARA CONFIRMAR POCI√ìN
class ConfirmarPocionView(discord.ui.View):
    def __init__(self, pocion_nombre, personaje, user_id):
        super().__init__(timeout=300)
        self.pocion_nombre = pocion_nombre
        self.personaje = personaje
        self.user_id = user_id
    
    @discord.ui.button(label="‚úÖ USAR POCI√ìN", style=discord.ButtonStyle.success)
    async def usar_pocion(self, interaction: discord.Interaction, button: discord.ui.Button):
        await manejar_usar_pocion(interaction, self.pocion_nombre, self.personaje, self.user_id)
    
    @discord.ui.button(label="üè† Volver", style=discord.ButtonStyle.secondary)
    async def volver(self, interaction: discord.Interaction, button: discord.ui.Button):
        await mostrar_pociones(interaction, self.personaje, self.user_id)


# ‚ô£‚úÖ MANEJAR USAR POCI√ìN CON L√çMITE DE EFECTOS
async def manejar_usar_pocion(interaction, pocion_nombre, personaje, user_id):
    """Usar poci√≥n y aplicar efectos con verificaci√≥n de l√≠mite"""
    guild_id = interaction.guild.id
    
    # Reducir cantidad en inventario
    async with aiosqlite.connect(db_manager.db_path) as db:
        await db.execute(
            "UPDATE inventario_objetos SET cantidad = cantidad - 1 WHERE guild_id = ? AND user_id = ? AND objeto_nombre = ?",
            (guild_id, str(user_id), pocion_nombre)
        )
        
        # Eliminar si cantidad = 0
        await db.execute(
            "DELETE FROM inventario_objetos WHERE guild_id = ? AND user_id = ? AND cantidad <= 0",
            (guild_id, str(user_id))
        )
        
        await db.commit()
    
    # ‚ô£‚úÖ APLICAR EFECTO DE LA POCI√ìN CON VERIFICACI√ìN DE L√çMITE
    if pocion_nombre in POCIONES:
        efecto = POCIONES[pocion_nombre]
        
        # üîπ BLOQUE 1: EFECTOS INMEDIATOS
        if efecto['efecto'] == 'heal':
            # Curar inmediatamente
            nuevo_hp = min(personaje[4] + efecto['valor'], personaje[5])  # No exceder HP m√°ximo
            async with aiosqlite.connect(db_manager.db_path) as db:
                await db.execute(
                    "UPDATE personajes SET hp = ? WHERE guild_id = ? AND user_id = ?",
                    (nuevo_hp, guild_id, str(user_id))
                )
                await db.commit()
        
        # üîπ BLOQUE 2: EFECTOS TEMPORALES (INCLUYE REVIVE)
        elif efecto['efecto'] in ['ataque', 'defensa', 'regeneracion', 'doble_ataque', 'suerte', 'debuff_enemigo', 'ataque_inmunidad', 'critico', 'revive']:
            # ‚úÖ VERIFICAR L√çMITE DE 3 EFECTOS
            resultado = await aplicar_efecto_temporal(guild_id, str(user_id), efecto['efecto'], efecto['valor'])
            
            if not resultado:
                # ‚úÖ MENSAJE DE ERROR POR L√çMITE
                embed = discord.Embed(
                    title="‚ö†Ô∏è L√çMITE DE EFECTOS",
                    description="Ya tienes 3 efectos activos. No puedes usar m√°s pociones de efecto hasta que expiren algunos.",
                    color=0xff9900
                )
                view = InventarioView(personaje, user_id)
                await interaction.response.edit_message(embed=embed, view=view)
                return


    
    # ‚ô£‚úÖ MOSTRAR RESULTADO CON EFECTOS ACTIVOS
    efectos_texto = await obtener_efectos_activos_texto(guild_id, str(user_id))
    
    embed = discord.Embed(
        title="‚úÖ POCI√ìN USADA",
        description=f"Has usado **{pocion_nombre}**\n\n{efectos_texto}",
        color=0x00ff00
    )
    
    view = InventarioView(personaje, user_id)
    await interaction.response.edit_message(embed=embed, view=view)


# ‚ô£‚úÖ MANEJAR EQUIPAR ITEM - ARREGLADO PARA REFRESCAR
async def manejar_equipar_item(interaction, valor_seleccionado, personaje, user_id):
    """Manejar equipar/desequipar items desde SELECT MENU"""
    guild_id = interaction.guild.id
    
    # Parsear el valor seleccionado
    partes = valor_seleccionado.split('_', 1)
    tipo_objeto = partes[0]
    nombre_objeto = partes[1]
    
    async with aiosqlite.connect(db_manager.db_path) as db:
        # Verificar estado actual del item
        cursor = await db.execute(
            "SELECT equipado FROM inventario_objetos WHERE guild_id = ? AND user_id = ? AND objeto_tipo = ? AND objeto_nombre = ?",
            (guild_id, str(user_id), tipo_objeto, nombre_objeto)
        )
        resultado = await cursor.fetchone()
        
        if not resultado:
            await interaction.response.send_message("‚ùå Error: Item no encontrado", ephemeral=True)
            return
        
        equipado_actual = resultado[0]
        
        if equipado_actual == 1:
            # Desequipar
            await db.execute(
                "UPDATE inventario_objetos SET equipado = 0 WHERE guild_id = ? AND user_id = ? AND objeto_tipo = ? AND objeto_nombre = ?",
                (guild_id, str(user_id), tipo_objeto, nombre_objeto)
            )
        else:
            # Desequipar otros items del mismo tipo primero
            await db.execute(
                "UPDATE inventario_objetos SET equipado = 0 WHERE guild_id = ? AND user_id = ? AND objeto_tipo = ?",
                (guild_id, str(user_id), tipo_objeto)
            )
            
            # Equipar el seleccionado
            await db.execute(
                "UPDATE inventario_objetos SET equipado = 1 WHERE guild_id = ? AND user_id = ? AND objeto_tipo = ? AND objeto_nombre = ?",
                (guild_id, str(user_id), tipo_objeto, nombre_objeto)
            )
        
        await db.commit()
    
    # Refrescar la vista correspondiente
    if tipo_objeto == 'arma':
        await mostrar_armas_refresh(interaction, personaje, user_id)
    elif tipo_objeto == 'armadura':
        await mostrar_armaduras_refresh(interaction, personaje, user_id)
    elif tipo_objeto == 'accesorio':
        await mostrar_accesorios_refresh(interaction, personaje, user_id)
    
# ‚ô£‚úÖ FUNCI√ìN MOSTRAR INVENTARIO ARREGLADA CON CONTADORES REALES
async def mostrar_inventario(interaction, editar=False):
    user_id = interaction.user.id
    
    async with aiosqlite.connect(db_manager.db_path) as db:
        cursor = await db.execute(
            "SELECT * FROM personajes WHERE guild_id = ? AND user_id = ?",
            (interaction.guild.id, str(user_id))
        )
        datos_personaje = await cursor.fetchone()
    
    if not datos_personaje:
        embed = discord.Embed(title="‚ùå Error", description="No tienes un personaje creado.", color=0xff0000)
        if editar:
            try:
                await interaction.response.edit_message(embed=embed, view=None)
            except:
                await interaction.edit_original_response(embed=embed, view=None)
        else:
            await interaction.response.send_message(embed=embed, ephemeral=True)
        return
    
    clase = datos_personaje[2]
    nivel = int(datos_personaje[3])
    florines = datos_personaje[7]
    
    # ‚ô£‚úÖ CONTAR ITEMS REALES DE LA BASE DE DATOS
    async with aiosqlite.connect(db_manager.db_path) as db:
        # Contar armas
        cursor = await db.execute(
            "SELECT COUNT(*) FROM inventario_objetos WHERE guild_id = ? AND user_id = ? AND objeto_tipo = 'arma'",
            (interaction.guild.id, str(user_id))
        )
        count_armas = (await cursor.fetchone())[0]
        
        # Contar armaduras
        cursor = await db.execute(
            "SELECT COUNT(*) FROM inventario_objetos WHERE guild_id = ? AND user_id = ? AND objeto_tipo = 'armadura'",
            (interaction.guild.id, str(user_id))
        )
        count_armaduras = (await cursor.fetchone())[0]
        
        # Contar accesorios
        cursor = await db.execute(
            "SELECT COUNT(*) FROM inventario_objetos WHERE guild_id = ? AND user_id = ? AND objeto_tipo = 'accesorio'",
            (interaction.guild.id, str(user_id))
        )
        count_accesorios = (await cursor.fetchone())[0]
        

        # ‚ô£‚úÖ CONTAR POCIONES CORREGIDO
        cursor = await db.execute(
            "SELECT COUNT(*) FROM inventario_objetos WHERE guild_id = ? AND user_id = ? AND objeto_tipo = 'pocion'",
            (interaction.guild.id, str(user_id))
       
        )
        count_pociones = (await cursor.fetchone())[0]
    
    embed = discord.Embed(
        title="üéí INVENTARIO LEGENDARIO",
        description=f"Inventario de {clase} - Nivel {nivel}\nüí∞ Florines: {florines:,}",
        color=0x9966cc
    )
    
    # ‚ô£‚úÖ MOSTRAR CONTADORES REALES
    embed.add_field(name="‚öîÔ∏è ARMAS DISPONIBLES", value=f"**{count_armas}/10** armas √©picas", inline=True)
    embed.add_field(name="üõ°Ô∏è ARMADURAS DISPONIBLES", value=f"**{count_armaduras}/10** armaduras legendarias", inline=True)
    embed.add_field(name="üíç ACCESORIOS DISPONIBLES", value=f"**{count_accesorios}/10** accesorios m√≠sticos", inline=True)
    embed.add_field(name="üß™ POCIONES DISPONIBLES", value=f"**{count_pociones}/15** pociones m√°gicas", inline=True)
    
    view = InventarioView(datos_personaje, user_id)
    
    if editar:
        try:
            await interaction.response.edit_message(embed=embed, view=view)
        except:
            await interaction.edit_original_response(embed=embed, view=view)
    else:
        await interaction.response.send_message(embed=embed, view=view)
# ========================================================================
#‚ô£ FUNCI√ìN EQUIPO
# ========================================================================


# ‚ô£‚úÖ MANEJAR EQUIPAR ITEM - CON REFRESCAR AL REINO
async def manejar_equipar_item(interaction, valor_seleccionado, personaje, user_id):
    """Manejar equipar/desequipar items desde SELECT MENU"""
    guild_id = interaction.guild.id
    
    # Parsear el valor seleccionado
    partes = valor_seleccionado.split('_', 1)
    tipo_objeto = partes[0]
    nombre_objeto = partes[1]
    
    async with aiosqlite.connect(db_manager.db_path) as db:
        # Verificar estado actual del item
        cursor = await db.execute(
            "SELECT equipado FROM inventario_objetos WHERE guild_id = ? AND user_id = ? AND objeto_tipo = ? AND objeto_nombre = ?",
            (guild_id, str(user_id), tipo_objeto, nombre_objeto)
        )
        resultado = await cursor.fetchone()
        
        if not resultado:
            await interaction.response.send_message("‚ùå Error: Item no encontrado", ephemeral=True)
            return
        
        equipado_actual = resultado[0]
        
        if equipado_actual == 1:
            # Desequipar
            await db.execute(
                "UPDATE inventario_objetos SET equipado = 0 WHERE guild_id = ? AND user_id = ? AND objeto_tipo = ? AND objeto_nombre = ?",
                (guild_id, str(user_id), tipo_objeto, nombre_objeto)
            )
            accion = "desequipado"
        else:
            # Desequipar otros items del mismo tipo primero
            await db.execute(
                "UPDATE inventario_objetos SET equipado = 0 WHERE guild_id = ? AND user_id = ? AND objeto_tipo = ?",
                (guild_id, str(user_id), tipo_objeto)
            )
            
            # Equipar el seleccionado
            await db.execute(
                "UPDATE inventario_objetos SET equipado = 1 WHERE guild_id = ? AND user_id = ? AND objeto_tipo = ? AND objeto_nombre = ?",
                (guild_id, str(user_id), tipo_objeto, nombre_objeto)
            )
            accion = "equipado"
        
        await db.commit()
    
    # ‚ô£‚úÖ OBTENER PERSONAJE ACTUALIZADO Y MOSTRAR REINO CON STATS REFRESCADOS
    async with aiosqlite.connect(db_manager.db_path) as db:
        cursor = await db.execute(
            "SELECT * FROM personajes WHERE guild_id = ? AND user_id = ?",
            (guild_id, str(user_id))
        )
        personaje_actualizado = await cursor.fetchone()
    
    # Mostrar reino con stats actualizados
    await mostrar_reino_principal(interaction, personaje_actualizado, user_id)


# ‚ô£‚úÖ FUNCI√ìN MOSTRAR EQUIPO CON COLORES DE RAREZA
async def mostrar_equipo(interaction, editar=False):
    user_id = interaction.user.id
    guild_id = interaction.guild.id
    
    # Obtener datos del personaje
    async with aiosqlite.connect(db_manager.db_path) as db:
        cursor = await db.execute(
            "SELECT * FROM personajes WHERE guild_id = ? AND user_id = ?",
            (guild_id, user_id)
        )
        datos_personaje = await cursor.fetchone()
        
        if not datos_personaje:
            embed = discord.Embed(title="‚ùå Error", description="No tienes un personaje creado.", color=0xff0000)
            if editar:
                await interaction.response.edit_message(embed=embed, view=None)
            else:
                await interaction.response.send_message(embed=embed, ephemeral=True)
            return
        
        # Obtener equipo equipado CON RAREZA
        cursor = await db.execute(
            "SELECT objeto_tipo, objeto_nombre, rareza FROM inventario_objetos WHERE guild_id = ? AND user_id = ? AND equipado = 1",
            (guild_id, user_id)
        )
        equipo_equipado = await cursor.fetchall()
    
    clase = datos_personaje[2]
    nivel = int(datos_personaje[3])
    
    # ‚ô£‚úÖ USAR CALCULAR STATS TOTALES (NIVEL + EQUIPAMIENTO)
    stats_totales = await calcular_stats_totales(datos_personaje, guild_id, user_id)
    
    # ‚ô£‚úÖ CALCULAR SUERTE (BASE + EQUIPAMIENTO + MASCOTA)
    suerte_total = calcular_suerte_total(nivel, stats_totales.get('suerte_bonus', 0))
    
    # ‚ô£‚úÖ BUSCAR EQUIPO CON EMOJIS DE RAREZA
    arma_equipada = "Sin equipar"
    armadura_equipada = "Sin equipar"
    accesorio_equipado = "Sin equipar"
    mascota_equipada = "Sin pet"
    
    for item in equipo_equipado:
        tipo = item[0]
        nombre = item[1]
        rareza = item[2] if len(item) > 2 else "normal"
        
        emoji_rareza = obtener_emoji_rareza(rareza)
        
        if tipo == 'arma':
            arma_equipada = f"{emoji_rareza} {nombre}"
        elif tipo == 'armadura':
            armadura_equipada = f"{emoji_rareza} {nombre}"
        elif tipo == 'accesorio':
            accesorio_equipado = f"{emoji_rareza} {nombre}"
    
    # ‚ô£‚úÖ OBTENER MASCOTA ACTIVA
    async with aiosqlite.connect(db_manager.db_path) as db:
        cursor = await db.execute(
    "SELECT mascota_nombre, mascota_tipo, nivel FROM mascotas WHERE guild_id = ? AND user_id = ? AND activa = 1",
    (guild_id, user_id)
        )
        mascota_activa = await cursor.fetchone()
        
        if mascota_activa:
            nombre_mascota, tipo_mascota, nivel_mascota = mascota_activa
            mascota_equipada = f" {nombre_mascota} Lvl {nivel_mascota}"
    
    # ‚ô£‚úÖ OBTENER EFECTOS ACTIVOS
    efectos_texto = await obtener_efectos_activos_texto(guild_id, user_id)
    
    # ARREGLADO: Obtener rango con clase
    rango_actual = obtener_rango(nivel, clase)
    
    # ARREGLADO: Obtener imagen seg√∫n rango y clase
    imagen_equipo = imagenes_equipo.get(f"{clase}_{rango_actual}")
    
    # Color din√°mico por nivel
    if nivel >= 100:
        color = 0x00FFFF
    elif nivel >= 90:
        color = 0xFF69B4
    elif nivel >= 80:
        color = 0x9400D3
    elif nivel >= 70:
        color = 0xFF4500
    elif nivel >= 60:
        color = 0xFFD700
    elif nivel >= 50:
        color = 0x800080
    elif nivel >= 40:
        color = 0x4169E1
    elif nivel >= 30:
        color = 0x32CD32
    elif nivel >= 20:
        color = 0xFFFF00
    elif nivel >= 10:
        color = 0xC0C0C0
    else:
        color = 0x808080
    
    embed = discord.Embed(
        title=f"‚öîÔ∏è EQUIPO {rango_actual.upper()}",
        description=f"Equipo de un {rango_actual} de nivel {nivel}",
        color=color
    )
    
    # ARREGLADO: Agregar imagen del rango
    if imagen_equipo:
        embed.set_image(url=imagen_equipo)
    
    # ‚ô£‚úÖ EQUIPO CON EMOJIS DE RAREZA (CAMBIOS APLICADOS)
    equipo_info = f"üó°Ô∏è **Arma:** {arma_equipada}\n"
    equipo_info += f"üõ°Ô∏è **Armor:** {armadura_equipada}\n"
    equipo_info += f"üíç **Acc:** {accesorio_equipado}\n"
    equipo_info += f"üêæ **Pet:** {mascota_equipada}\n"
    
    # ‚ô£‚úÖ AGREGAR EFECTOS SI EXISTEN
    if efectos_texto.strip():
        equipo_info += f"\n{efectos_texto}"
    
    # ‚ô£‚úÖ STATS TOTALES (SIN RANGO DUPLICADO + SUERTE)
    stats_info = f"‚öîÔ∏è **ATK:** {stats_totales['ataque']}\n"
    stats_info += f"üõ°Ô∏è **DEF:** {stats_totales['defensa']}\n"
    stats_info += f"‚ù§Ô∏è **HP:** {stats_totales['hp']}\n"
    stats_info += f"üçÄ **Suerte:** {suerte_total}%\n\n"
    stats_info += f"üëë **T√çTULO**\n"
    stats_info += f"          {rango_actual}"
    
    embed.add_field(name="üéí EQUIPAMIENTO", value=equipo_info, inline=True)
    embed.add_field(name="üìä ESTAD√çSTICAS", value=stats_info, inline=True)
    
    view = EquipoView(datos_personaje, user_id)
    
    if editar:
        await interaction.response.edit_message(embed=embed, view=view)
    else:
        await interaction.response.send_message(embed=embed, view=view)
# ========================================================================
#‚ô£ FUNCI√ìN INVENTARIO
# ========================================================================


async def mostrar_armaduras_refresh(interaction, personaje, user_id):
    """Refrescar vista de armaduras usando edit_original_response"""
    guild_id = interaction.guild.id
    clase = personaje[2]
    
    # Obtener armaduras del inventario
    async with aiosqlite.connect(db_manager.db_path) as db:
        cursor = await db.execute(
            "SELECT objeto_nombre, rareza, equipado FROM inventario_objetos WHERE guild_id = ? AND user_id = ? AND objeto_tipo = 'armadura'",
            (guild_id, str(user_id))
        )
        armaduras = await cursor.fetchall()
    
    # Buscar armadura equipada
    armadura_equipada = None
    for armadura_nombre, rareza, equipado in armaduras:
        if equipado == 1:
            emoji_rareza = obtener_emoji_rareza(rareza)
            armadura_equipada = f"{emoji_rareza} {armadura_nombre} ‚úÖ EQUIPADO"
            break
    
    if not armadura_equipada:
        armadura_equipada = "‚ùå Sin armadura equipada"
    
    embed = discord.Embed(
        title="üõ°Ô∏è ARMADURAS DISPONIBLES",
        description=f"Clase: {clase.capitalize()}\n{armadura_equipada}",
        color=0x4a90e2
    )
    
    if not armaduras:
        embed.description = f"Clase: {clase.capitalize()}\n‚ùå No tienes armaduras en tu inventario"
        view = InventarioView(personaje, user_id)
        await interaction.edit_original_response(embed=embed, view=view)
        return
    
    # SELECT MENU
    select_armaduras = discord.ui.Select(
        placeholder="Selecciona una armadura para equipar/desequipar...",
        min_values=1,
        max_values=1,
        custom_id="select_armadura"
    )
    
    for armadura_nombre, rareza, equipado in armaduras:
        estado_emoji = "‚úÖ" if equipado else "‚ùå"
        select_armaduras.add_option(
            label=f"{armadura_nombre}",
            description=f"Rareza: {rareza.capitalize()} | {('Equipado' if equipado else 'Sin equipar')}",
            emoji=estado_emoji,
            value=f"armadura_{armadura_nombre}"
        )
    
    async def select_callback(interaction):
        valor = interaction.data['values'][0]
        await manejar_equipar_item(interaction, valor, personaje, user_id)

    select_armaduras.callback = select_callback

    view = InventarioView(personaje, user_id)
    view.add_item(select_armaduras)

    await interaction.edit_original_response(embed=embed, view=view)


async def mostrar_accesorios_refresh(interaction, personaje, user_id):
    """Refrescar vista de accesorios usando edit_original_response"""
    guild_id = interaction.guild.id
    clase = personaje[2]
    
    # Obtener accesorios del inventario
    async with aiosqlite.connect(db_manager.db_path) as db:
        cursor = await db.execute(
            "SELECT objeto_nombre, rareza, equipado FROM inventario_objetos WHERE guild_id = ? AND user_id = ? AND objeto_tipo = 'accesorio'",
            (guild_id, str(user_id))
        )
        accesorios = await cursor.fetchall()
    
    # Buscar accesorio equipado
    accesorio_equipado = None
    for accesorio_nombre, rareza, equipado in accesorios:
        if equipado == 1:
            emoji_rareza = obtener_emoji_rareza(rareza)
            accesorio_equipado = f"{emoji_rareza} {accesorio_nombre} ‚úÖ EQUIPADO"
            break
    
    if not accesorio_equipado:
        accesorio_equipado = "‚ùå Sin accesorio equipado"
    
    embed = discord.Embed(
        title="üíç ACCESORIOS DISPONIBLES",
        description=f"Clase: {clase.capitalize()}\n{accesorio_equipado}",
        color=0x9b59b6
    )
    
    if not accesorios:
        embed.description = f"Clase: {clase.capitalize()}\n‚ùå No tienes accesorios en tu inventario"
        view = InventarioView(personaje, user_id)
        await interaction.edit_original_response(embed=embed, view=view)
        return
    
    # SELECT MENU
    select_accesorios = discord.ui.Select(
        placeholder="Selecciona un accesorio para equipar/desequipar...",
        min_values=1,
        max_values=1,
        custom_id="select_accesorio"
    )
    
    for accesorio_nombre, rareza, equipado in accesorios:
        estado_emoji = "‚úÖ" if equipado else "‚ùå"
        select_accesorios.add_option(
            label=f"{accesorio_nombre}",
            description=f"Rareza: {rareza.capitalize()} | {('Equipado' if equipado else 'Sin equipar')}",
            emoji=estado_emoji,
            value=f"accesorio_{accesorio_nombre}"
        )
    
    async def select_callback(interaction):
        valor = interaction.data['values'][0]
        await manejar_equipar_item(interaction, valor, personaje, user_id)

    select_accesorios.callback = select_callback

    view = InventarioView(personaje, user_id)
    view.add_item(select_accesorios)

    await interaction.edit_original_response(embed=embed, view=view)



    
# ‚ô£‚úÖ FUNCI√ìN MOSTRAR ARMAS DISPONIBLES ARREGLADA
async def mostrar_armas_disponibles(interaction, personaje):
    clase = personaje[2]
    armas = ARMAS_POR_CLASE.get(clase, [])
    
    embed = discord.Embed(
        title=f"üó°Ô∏è ARMAS DE {clase.upper()}",
        description="Elige un arma para equipar:",
        color=0xff4444
    )
    
    view = ArmasView(armas, personaje)
    await interaction.response.edit_message(embed=embed, view=view)

# ‚ô£‚úÖ FUNCI√ìN MOSTRAR ARMADURAS DISPONIBLES ARREGLADA
async def mostrar_armaduras_disponibles(interaction, personaje):
    clase = personaje[2]
    armaduras = ARMADURAS_POR_CLASE.get(clase, [])
    
    embed = discord.Embed(
        title=f"üõ°Ô∏è ARMADURAS DE {clase.upper()}",
        description="Elige una armadura para equipar:",
        color=0x4444ff
    )
    
    view = ArmadurasView(armaduras, personaje)
    await interaction.response.edit_message(embed=embed, view=view)

# ‚ô£‚úÖ FUNCI√ìN MOSTRAR ACCESORIOS DISPONIBLES ARREGLADA
async def mostrar_accesorios_disponibles(interaction, personaje):
    clase = personaje[2]
    accesorios = ACCESORIOS_POR_CLASE.get(clase, [])
    
    embed = discord.Embed(
        title=f"üíç ACCESORIOS DE {clase.upper()}",
        description="Elige un accesorio para equipar:",
        color=0x9966cc
    )
    
    view = AccesoriosView(accesorios, personaje)
    await interaction.response.edit_message(embed=embed, view=view)

# ‚ô£‚úÖ CLASE VISTA ARMAS CON SELECT MENU
class ArmasView(discord.ui.View):
    def __init__(self, armas, personaje):
        super().__init__(timeout=300)
        self.armas = armas
        self.personaje = personaje
        self.user_id = personaje[1] if len(personaje) > 1 else personaje[0]
        
        # Crear select menu con las armas
        select = discord.ui.Select(
            placeholder="Selecciona un arma...",
            min_values=1,
            max_values=1
        )
        
        for i, arma in enumerate(armas[:25]):  # M√°ximo 25 opciones
            select.add_option(
                label=arma['nombre'],
                description=f"‚öîÔ∏è{arma['ataque']} ATK | üõ°Ô∏è{arma['defensa']} DEF | üí∞{arma['precio']}",
                value=str(i)
            )
        
        select.callback = self.equipar_arma
        self.add_item(select)
    
    async def equipar_arma(self, interaction: discord.Interaction):
        if interaction.user.id != self.user_id:
            await interaction.response.send_message("‚õî Solo el due√±o puede usar esto.", ephemeral=True)
            return
        
        arma_index = int(interaction.data['values'][0])
        arma_seleccionada = self.armas[arma_index]
        
        await interaction.response.send_message(f"‚úÖ Has equipado: {arma_seleccionada['nombre']}", ephemeral=True)
    
    @discord.ui.button(label="üîÑ Volver al Inventario", style=discord.ButtonStyle.gray)
    async def volver_inventario(self, interaction: discord.Interaction, button: discord.ui.Button):
        if interaction.user.id != self.user_id:
            await interaction.response.send_message("‚õî Solo el due√±o puede usar esto.", ephemeral=True)
            return
        
        # CREAR EL EMBED DEL INVENTARIO
        embed = discord.Embed(
            title="üéí INVENTARIO LEGENDARIO",
            description=f"Inventario de {self.personaje[2]} - Nivel {self.personaje[3]}",
            color=0x9966cc
        )
        
        view = InventarioView(self.personaje, self.user_id)
        await interaction.response.edit_message(embed=embed, view=view)

# ‚ô£‚úÖ CLASE VISTA ARMADURAS CON SELECT MENU
class ArmadurasView(discord.ui.View):
    def __init__(self, armaduras, personaje):
        super().__init__(timeout=300)
        self.armaduras = armaduras
        self.personaje = personaje
        self.user_id = personaje[1] if len(personaje) > 1 else personaje[0]
        
        # Crear select menu con las armaduras
        select = discord.ui.Select(
            placeholder="Selecciona una armadura...",
            min_values=1,
            max_values=1
        )
        
        for i, armadura in enumerate(armaduras[:25]):  # M√°ximo 25 opciones
            select.add_option(
                label=armadura['nombre'],
                description=f"‚öîÔ∏è{armadura['ataque']} ATK | üõ°Ô∏è{armadura['defensa']} DEF | üí∞{armadura['precio']}",
                value=str(i)
            )
        
        select.callback = self.equipar_armadura
        self.add_item(select)
    
    async def equipar_armadura(self, interaction: discord.Interaction):
        if interaction.user.id != self.user_id:
            await interaction.response.send_message("‚õî Solo el due√±o puede usar esto.", ephemeral=True)
            return
        
        armadura_index = int(interaction.data['values'][0])
        armadura_seleccionada = self.armaduras[armadura_index]
        
        await interaction.response.send_message(f"‚úÖ Has equipado: {armadura_seleccionada['nombre']}", ephemeral=True)
    
    @discord.ui.button(label="üîÑ Volver al Inventario", style=discord.ButtonStyle.gray)
    async def volver_inventario(self, interaction: discord.Interaction, button: discord.ui.Button):
        if interaction.user.id != self.user_id:
            await interaction.response.send_message("‚õî Solo el due√±o puede usar esto.", ephemeral=True)
            return
        
        # CREAR EL EMBED DEL INVENTARIO
        embed = discord.Embed(
            title="üéí INVENTARIO LEGENDARIO",
            description=f"Inventario de {self.personaje[2]} - Nivel {self.personaje[3]}",
            color=0x9966cc
        )
        
        view = InventarioView(self.personaje, self.user_id)
        await interaction.response.edit_message(embed=embed, view=view)

# ‚ô£‚úÖ CLASE VISTA ACCESORIOS CON SELECT MENU
class AccesoriosView(discord.ui.View):
    def __init__(self, accesorios, personaje):
        super().__init__(timeout=300)
        self.accesorios = accesorios
        self.personaje = personaje
        self.user_id = personaje[1] if len(personaje) > 1 else personaje[0]
        
        # Crear select menu con los accesorios
        select = discord.ui.Select(
            placeholder="Selecciona un accesorio...",
            min_values=1,
            max_values=1
        )
        
        for i, accesorio in enumerate(accesorios[:25]):  # M√°ximo 25 opciones
            select.add_option(
                label=accesorio['nombre'],
                description=f"‚öîÔ∏è{accesorio['ataque']} ATK | üõ°Ô∏è{accesorio['defensa']} DEF | üí∞{accesorio['precio']}",
                value=str(i)
            )
        
        select.callback = self.equipar_accesorio
        self.add_item(select)
    
    async def equipar_accesorio(self, interaction: discord.Interaction):
        if interaction.user.id != self.user_id:
            await interaction.response.send_message("‚õî Solo el due√±o puede usar esto.", ephemeral=True)
            return
        
        accesorio_index = int(interaction.data['values'][0])
        accesorio_seleccionado = self.accesorios[accesorio_index]
        
        await interaction.response.send_message(f"‚úÖ Has equipado: {accesorio_seleccionado['nombre']}", ephemeral=True)
    
    @discord.ui.button(label="üîÑ Volver al Inventario", style=discord.ButtonStyle.gray)
    async def volver_inventario(self, interaction: discord.Interaction, button: discord.ui.Button):
        if interaction.user.id != self.user_id:
            await interaction.response.send_message("‚õî Solo el due√±o puede usar esto.", ephemeral=True)
            return
        
        # CREAR EL EMBED DEL INVENTARIO
        embed = discord.Embed(
            title="üéí INVENTARIO LEGENDARIO",
            description=f"Inventario de {self.personaje[2]} - Nivel {self.personaje[3]}",
            color=0x9966cc
        )
        
        view = InventarioView(self.personaje, self.user_id)
        await interaction.response.edit_message(embed=embed, view=view)


# ‚ô£‚úÖ CLASE PARA SELECCIONAR CLASES
class SeleccionClaseView(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=300)
    
    @discord.ui.button(label="üó°Ô∏è Humano", style=discord.ButtonStyle.secondary, emoji="‚öîÔ∏è")
    async def humano_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        await self.crear_personaje_clase(interaction, "humano")
    
    @discord.ui.button(label="üèπ Elfo", style=discord.ButtonStyle.secondary, emoji="üåø")
    async def elfo_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        await self.crear_personaje_clase(interaction, "elfo")
    
    @discord.ui.button(label="ü™ì Orco", style=discord.ButtonStyle.secondary, emoji="üíÄ")
    async def orco_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        await self.crear_personaje_clase(interaction, "orco")
    
    @discord.ui.button(label="üî® Enano", style=discord.ButtonStyle.secondary, emoji="‚õèÔ∏è")
    async def enano_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        await self.crear_personaje_clase(interaction, "enano")
    
    @discord.ui.button(label="üíÄ No Muerto", style=discord.ButtonStyle.secondary, emoji="‚ò†Ô∏è")
    async def no_muerto_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        await self.crear_personaje_clase(interaction, "no_muerto")
    
    # ‚úÖ AGREGAR ESTE M√âTODO DENTRO DE LA CLASE
    async def crear_personaje_clase(self, interaction: discord.Interaction, clase):
        """Crear personaje de la clase seleccionada"""
        try:
            # Crear personaje en la base de datos
            await crear_personaje(interaction.guild.id, interaction.user.id, clase)
            
            # Obtener informaci√≥n de la clase
            clase_info = CLASES_RPG[clase]
            
            # ‚úÖ DICCIONARIO DE IM√ÅGENES POR CLASE
            imagenes_clases = {
                "humano": "https://i.ibb.co/wr3ynZ2R/Captura-de-pantalla-2025-06-05-092653.png",
                "elfo": "https://i.ibb.co/yBkx1Vn3/Captura-de-pantalla-2025-06-05-085633-removebg-preview.png", 
                "orco": "https://i.ibb.co/PvFm2gLm/Captura-de-pantalla-2025-06-05-095211.png",
                "enano": "https://i.ibb.co/DPCJwD8m/Captura-de-pantalla-2025-06-05-100922.png",
                "no_muerto": "https://i.ibb.co/0p67JSdR/Captura-de-pantalla-2025-06-05-100509.png"
            }
            
            # Mensaje de √©xito
            embed = discord.Embed(
                title=f"üéâ ¬°{clase_info['nombre']} Creado!",
                description=f"**¬°Bienvenido al {clase_info['reino']}!**\n\n" +
                           f"{clase_info['emoji']} *{clase_info['lore']}*\n\n" +
                           f"üìú **Usa `!reino` para explorar tu nuevo hogar.**",
                color=0x00FF00
            )
            embed.set_footer(text="¬°Tu aventura √©pica comienza ahora!")
            
            # ‚úÖ AGREGAR IMAGEN SEG√öN LA CLASE SELECCIONADA
            embed.set_image(url=imagenes_clases[clase])
            
            await interaction.response.edit_message(embed=embed, view=None, delete_after=10)
            
        except Exception as e:
            print(f"‚ùå Error creando personaje: {e}")
            embed = discord.Embed(
                title="‚ùå Error",
                description="Hubo un problema creando tu personaje. Intenta de nuevo.",
                color=0xFF0000
            )
            await interaction.response.edit_message(embed=embed, view=None, delete_after=10)

#  ‚ô£‚úÖ COMANDO AVENTURA ARREGLADO
@bot.command(name="aventura")
async def comando_aventura(ctx):
    """Sistema de aventuras RPG"""
    
    # BORRAR EL COMANDO PRIMERO
    try:
        await ctx.message.delete()
    except:
        pass
    
    # üè∞ VERIFICAR CANAL - SOLO FUNCIONA EN #aventura
    if ctx.channel.name.lower() != "aventura":
        await ctx.send("üè∞ **Las aventuras solo comienzan en el canal #aventura, valiente guerrero.**", delete_after=10)
        return
    
    print(f"üîç Usuario que usa aventura: {ctx.author.id}")
    
    personaje = await obtener_personaje(ctx.guild.id, ctx.author.id)
    
    if not personaje:
        # Primera vez - Crear personaje
        embed = discord.Embed(
            title="üè∞ ¬°BIENVENIDO AL REINO DE AVENTURAS!",
            description="*Las leyendas comienzan con una elecci√≥n...*\n\n" +
                       "Elige tu destino, valiente aventurero. Tu clase determinar√° tu camino en este mundo √©pico.",
            color=0x8B4513
        )
        embed.add_field(
            name="‚öîÔ∏è Las Cinco Sendas del Destino",
            value="Cada clase tiene su propio reino, mascotas √∫nicas y aventuras legendarias.\n" +
                  "**¬°Tu elecci√≥n es permanente y definir√° tu legado!**",
            inline=False
        )
        embed.set_footer(text="Selecciona una clase para comenzar tu leyenda")
        embed.set_image(url="https://i.ibb.co/PZnBDpW3/Captura-de-pantalla-2025-06-05-085633.png")
        
        view = SeleccionClaseView()
        await ctx.send(embed=embed, view=view)
    else:
        # YA TIENE PERSONAJE - MOSTRAR MENSAJE DE REDIRECCI√ìN
        clase_info = CLASES_RPG[personaje[2]]
        embed = discord.Embed(
            title="‚úÖ ¬°Tu leyenda acaba de comenzar!",
            description=f"**{clase_info['emoji']} {clase_info['nombre']}**\n\n" +
                       f"*Ya eres parte del {clase_info['reino']}.*\n\n" +
                       f"üìú **Usa `!reino` para explorar tu nuevo hogar y comenzar tus aventuras √©picas.**",
            color=0x00FF00
        )
        embed.set_footer(text="Tu destino te espera en el reino...")
        await ctx.send(embed=embed, delete_after=15)

# ‚ô£‚úÖ FUNCI√ìN MOSTRAR REINO CORREGIDA
async def mostrar_reino_principal(ctx_or_interaction, personaje, user_id=None): 
    """Mostrar reino desde comando de contexto"""
    
    # √çNDICES CORRECTOS SEG√öN EL DEBUG:
    guild_id = personaje[0]     # guild_id
    user_db_id = personaje[1]   # user_id de BD
    clase = personaje[2]        # clase del personaje
    nivel = int(personaje[3])   # nivel (convertir a entero)
    exp = int(personaje[4])     # experiencia (convertir a entero)
    hp_actual = personaje[5]    # HP actual
    hp_maximo = personaje[6]    # HP m√°ximo
    florines = personaje[7]     # florines
    rango = obtener_rango(nivel, clase)  # T√çTULO DIN√ÅMICO - ARREGLADO
    
    clase_info = CLASES_RPG[clase]
    exp_necesaria = calcular_exp_necesaria(nivel + 1)

    colores_reino = {
        "humano": 0xFFD700,     # Dorado
        "elfo": 0x228B22,       # Verde bosque
        "orco": 0x8B0000,       # Rojo oscuro
        "enano": 0x8B4513,      # Marr√≥n
        "no_muerto": 0x4B0082   # Violeta oscuro
    }
    
    embed = discord.Embed(
        title=f"üè∞ {clase_info['reino']}",
        description=f"*{clase_info['lore']}*",
        color=colores_reino.get(clase, 0x0099FF)
    )
    
    # IMAGEN DIN√ÅMICA POR CLASE:
    imagenes_reino = {
        "humano": "https://i.ibb.co/PGdBjmcr/humano.png",
        "elfo": "https://i.ibb.co/jPbgtwRS/elfo.png", 
        "orco": "https://i.ibb.co/pBCRTML4/orco.png",
        "enano": "https://i.ibb.co/bqFhhfQ/enano.png",
        "no_muerto": "https://i.ibb.co/cSLzCh5Y/nomuerto.png"
    }
    embed.set_image(url=imagenes_reino[clase])

    # ‚ô£‚úÖ CALCULAR STATS TOTALES (NIVEL + EQUIPAMIENTO)
    stats_base = await calcular_stats_totales(personaje, guild_id, user_db_id)
    
       # ‚ô£‚úÖ AGREGAR STATS AL EMBED CON ICONOS
    embed.add_field(
        name="üìä ESTAD√çSTICAS",
        value=f"‚öîÔ∏è **ATK:** {stats_base['ataque']:,}\nüõ°Ô∏è **DEF:** {stats_base['defensa']:,}\n‚ù§Ô∏è **HP:** {hp_actual}/{hp_maximo}",
        inline=True
    )

    embed.add_field(
        name="üí∞ RECURSOS",
        value=f"üí∞ **Florines:** {florines:,}\n‚≠ê **EXP:** {exp:,}/{exp_necesaria:,}\nüÜô **Nivel:** {nivel}",
        inline=True
    )

    embed.add_field(
        name="üèÜ RANGO",
        value=f"**{rango}**",
        inline=False
    )
    
    # ‚ô£‚úÖ OBTENER EFECTOS ACTIVOS
    efectos_texto = await obtener_efectos_activos_texto(guild_id, str(user_db_id))
    if efectos_texto:
        embed.add_field(
            name="üîÆ EFECTOS ACTIVOS",
            value=efectos_texto,
            inline=False
        )

    # ‚ô£‚úÖ CREAR VIEW Y ENVIAR (ESTO ES LO QUE FALTABA)
    # ‚ô£‚úÖ DETECTAR SI ES CTX O INTERACTION
    if hasattr(ctx_or_interaction, 'author'):
        user_id = ctx_or_interaction.author.id  # Es ctx
    else:
        user_id = ctx_or_interaction.user.id    # Es interaction

    view = MenuReinoView(personaje, user_id)
    
    # ARREGLADO: ENVIAR SEG√öN EL TIPO
    if hasattr(ctx_or_interaction, 'send'):
        await ctx_or_interaction.send(embed=embed, view=view, delete_after=170)
    else:
        try:
            await ctx_or_interaction.response.edit_message(embed=embed, view=view, delete_after=170)
        except:
            await ctx_or_interaction.edit_original_response(embed=embed, view=view, delete_after=170)

@bot.command(name='add_exp_mascotas')
async def add_exp_mascotas(ctx):
    """Agregar columnas de experiencia a la tabla mascotas"""
    async with aiosqlite.connect(db_manager.db_path) as db:
        try:
            # Agregar columna exp_actual
            await db.execute("ALTER TABLE mascotas ADD COLUMN exp_actual INTEGER DEFAULT 0")
            await db.commit()
            print("‚úÖ Columna exp_actual agregada")
        except:
            print("‚ö†Ô∏è Columna exp_actual ya existe")
        
        try:
            # Agregar columna exp_necesaria
            await db.execute("ALTER TABLE mascotas ADD COLUMN exp_necesaria INTEGER DEFAULT 100")
            await db.commit()
            print("‚úÖ Columna exp_necesaria agregada")
        except:
            print("‚ö†Ô∏è Columna exp_necesaria ya existe")
        
        # Actualizar exp_necesaria basada en nivel actual
        cursor = await db.execute("SELECT guild_id, user_id, mascota_nombre, nivel FROM mascotas")
        mascotas = await cursor.fetchall()
        
        for guild_id, user_id, nombre, nivel in mascotas:
            exp_necesaria = nivel * 100  # 100 EXP por nivel
            await db.execute(
                "UPDATE mascotas SET exp_necesaria = ? WHERE guild_id = ? AND user_id = ? AND mascota_nombre = ?",
                (exp_necesaria, guild_id, user_id, nombre)
            )
        
        await db.commit()
        await ctx.send("‚úÖ **Sistema de EXP agregado a mascotas**\n- Columnas exp_actual y exp_necesaria creadas\n- EXP necesaria calculada por nivel")



#  ‚ô£‚úÖreino
@bot.command(name="reino")
async def comando_reino(ctx):
    """Mostrar el men√∫ principal del reino"""
    
    # BORRAR EL COMANDO PRIMERO
    try:
        await ctx.message.delete()
    except:
        pass
    
    print(f"üîç Usuario que usa reino: {ctx.author.id}")
    
    # Obtener personaje
    personaje = await obtener_personaje(ctx.guild.id, ctx.author.id)
    
    if not personaje:
        embed = discord.Embed(
            title="‚ùå Sin Personaje",
            description="Primero debes crear un personaje usando `!aventura`",
            color=0xff0000
        )
        await ctx.send(embed=embed, delete_after=10)
        return
    
    # Mostrar reino principal
    await mostrar_reino_principal(ctx, personaje)


#  ‚ô£‚úÖcurar pj
@bot.command(name="curar_pj")
async def curar_personaje(ctx, usuario: discord.Member = None):
    """[SUPERIOR] Curar completamente a un personaje"""
    # Solo SUPERIORES pueden usar este comando
    user_level = get_user_level(ctx.author.id, ctx.guild.id)
    if user_level != "SUPERIOR":
        await ctx.send("**No tienes el rango ni el poder para hacer esto.**",delete_after=10)
        return
    
    # Si no se especifica usuario, curar el propio
    if usuario is None:
        usuario = ctx.author
    
    async with aiosqlite.connect(db_manager.db_path) as db:
        # Verificar si tiene personaje
        cursor = await db.execute(
            "SELECT * FROM personajes WHERE guild_id = ? AND user_id = ?",
            (ctx.guild.id, usuario.id)
        )
        personaje = await cursor.fetchone()
        
        if not personaje:
            await ctx.send(f"‚ùå {usuario.display_name} no tiene personaje creado.")
            return
        
        # Curar completamente
        await db.execute(
            "UPDATE personajes SET hp_actual = hp_maximo WHERE guild_id = ? AND user_id = ?",
            (ctx.guild.id, usuario.id)
        )
        await db.commit()
    
    embed = discord.Embed(
        title="üíñ PERSONAJE CURADO",
        description=f"**{usuario.display_name}** ha sido completamente sanado.\n\n" +
                   f"‚úÖ HP restaurado al m√°ximo\n" +
                   f"‚úÖ Listo para aventuras √©picas",
        color=0x00FF00
    )
    
    await ctx.send(embed=embed)

#  ‚ô£‚úÖfix_db
@bot.command(name='fix_db')
async def fix_db(ctx):
    """Arreglar tablas de base de datos agregando columnas faltantes"""
    
    async with aiosqlite.connect(db_manager.db_path) as db:
        try:
            # ‚ô£‚úÖ AGREGAR COLUMNA EXP A PERSONAJES
            await db.execute("ALTER TABLE personajes ADD COLUMN exp INTEGER DEFAULT 0")
            print("‚úÖ Columna 'exp' agregada a personajes")
        except Exception as e:
            print(f"‚ùå Error agregando exp: {e}")
        
        try:
            # ‚ô£‚úÖ AGREGAR COLUMNA RAREZA A INVENTARIO_OBJETOS
            await db.execute("ALTER TABLE inventario_objetos ADD COLUMN rareza TEXT DEFAULT 'normal'")
            print("‚úÖ Columna 'rareza' agregada a inventario_objetos")
        except Exception as e:
            print(f"‚ùå Error agregando rareza: {e}")
        
        try:
            # ‚ô£‚úÖ AGREGAR COLUMNA RANGO A PERSONAJES
            await db.execute("ALTER TABLE personajes ADD COLUMN rango TEXT DEFAULT 'Novato'")
            print("‚úÖ Columna 'rango' agregada a personajes")
        except Exception as e:
            print(f"‚ùå Error agregando rango: {e}")
        
        await db.commit()
    
    embed = discord.Embed(
        title="üîß BASE DE DATOS ARREGLADA",
        description="Se agregaron las columnas faltantes:\n- `exp` a personajes\n- `rareza` a inventario_objetos\n- `rango` a personajes",
        color=0x00FF00
    )
    
    await ctx.send(embed=embed)



@bot.command(name='debug_pociones')
async def debug_pociones(ctx):
    """Debug: Ver pociones en ambas tablas"""
    user_id = str(ctx.author.id)
    guild_id = ctx.guild.id
    
    async with aiosqlite.connect(db_manager.db_path) as db:
        # Tabla inventario_objetos
        cursor1 = await db.execute(
            "SELECT objeto_nombre, cantidad FROM inventario_objetos WHERE guild_id = ? AND user_id = ? AND objeto_tipo = 'pocion'",
            (guild_id, user_id)
        )
        pociones_objetos = await cursor1.fetchall()
        
        # Tabla inventario_pociones
        cursor2 = await db.execute(
            "SELECT pocion_nombre, cantidad FROM inventario_pociones WHERE guild_id = ? AND user_id = ?",
            (guild_id, user_id)
        )
        pociones_tabla = await cursor2.fetchall()
    
    mensaje = f"üîç **DEBUG POCIONES:**\n\n"
    mensaje += f"**En inventario_objetos (tipo='pocion'):** {len(pociones_objetos)}\n"
    for p in pociones_objetos:
        mensaje += f"- {p[0]} (x{p[1]})\n"
    
    mensaje += f"\n**En inventario_pociones:** {len(pociones_tabla)}\n"
    for p in pociones_tabla:
        mensaje += f"- {p[0]} (x{p[1]})\n"
    
    await ctx.send(mensaje)



async def verificar_columna_exp():
    async with aiosqlite.connect('antiraid_data.db') as db:
        # REMOVIDA LA L√çNEA RECURSIVA QUE CAUSABA EL ERROR
        try:
            # Verificar si la columna 'exp' existe
            cursor = await db.execute("PRAGMA table_info(personajes)")
            columns = await cursor.fetchall()
            column_names = [column[1] for column in columns]
            
            if 'exp' not in column_names:
                # Agregar la columna con valor por defecto 0
                await db.execute("ALTER TABLE personajes ADD COLUMN exp INTEGER DEFAULT 0")
                await db.commit()
                print("‚úÖ Columna 'exp' agregada a la tabla personajes")
        except Exception as e:
            print(f"‚ùå Error al verificar columna exp: {e}")







# ‚ô£‚úÖ COMANDO ADMIN - TERMINAR AVENTURA
@bot.command(name='terminar_aventura')
async def terminar_aventura_admin(ctx, usuario: discord.Member = None):
    """Comando admin para terminar aventura instant√°neamente"""
    
    # Verificar si es admin
    if not ctx.author.guild_permissions.administrator:
        await ctx.send("‚ùå Solo administradores pueden usar este comando.")
        return
    
    # Si no especifica usuario, usar el autor
    if usuario is None:
        usuario = ctx.author
    
    guild_id = ctx.guild.id
    user_id = usuario.id
    
    async with aiosqlite.connect(db_manager.db_path) as db:
        # Verificar si tiene aventura activa
        cursor = await db.execute(
            "SELECT tipo_aventura FROM aventuras_activas WHERE guild_id = ? AND user_id = ?",
            (guild_id, user_id)
        )
        aventura = await cursor.fetchone()
        
        if not aventura:
            await ctx.send(f"‚ùå {usuario.mention} no tiene aventuras activas.")
            return
        
        tipo_aventura = aventura[0]
        
        # Forzar finalizaci√≥n cambiando tiempo_fin
        now = datetime.now(timezone.utc)
        await db.execute(
            "UPDATE aventuras_activas SET tiempo_fin = ? WHERE guild_id = ? AND user_id = ?",
            (now.isoformat(), guild_id, user_id)
        )
        await db.commit()
    
    await ctx.send(f"‚úÖ Aventura **{tipo_aventura}** de {usuario.mention} terminada instant√°neamente.\n‚è∞ Las recompensas se procesar√°n en m√°ximo 5 minutos.")

# ‚ô£‚úÖ COMANDO ADMIN - FORZAR PROCESAMIENTO
@bot.command(name='procesar_aventuras')
async def forzar_procesamiento(ctx):
    """Comando admin para forzar procesamiento de aventuras"""
    
    # Verificar si es admin
    if not ctx.author.guild_permissions.administrator:
        await ctx.send("‚ùå Solo administradores pueden usar este comando.")
        return
    
    await ctx.send("üîÑ Procesando aventuras completadas...")
    
    # Ejecutar funci√≥n de procesamiento
    await procesar_aventuras()
    
    await ctx.send("‚úÖ Procesamiento completado. Revisa mensajes privados.")












@bot.command(name='full_pj')
async def full_pj(ctx):
    """Comando de prueba: Crear personaje m√°ximo nivel con todo equipado + pociones + mascotas"""
    import random
    import json
    
    # Inicializar base de datos
    await db_manager.init_db()
    await db_manager.create_rpg_tables()
    await crear_tabla_inventario_pociones()
    await crear_tabla_mascotas()  # ‚ô£‚úÖ CREAR TABLA MASCOTAS
    
    user_id = str(ctx.author.id)
    guild_id = ctx.guild.id
    
    # Elegir clase aleatoria
    clases = ["humano", "elfo", "orco", "enano", "no_muerto"]
    clase_aleatoria = random.choice(clases)
    
    # Datos del personaje m√°ximo
    nivel_max = 100
    exp_max = 999999
    hp_max = 1000
    florines_max = 999999
    rango_max = "Leyenda Viviente"
    
    async with aiosqlite.connect(db_manager.db_path) as db:
        # Borrar datos existentes
        await db.execute("DELETE FROM personajes WHERE guild_id = ? AND user_id = ?", (guild_id, user_id))
        await db.execute("DELETE FROM inventario_objetos WHERE guild_id = ? AND user_id = ?", (guild_id, user_id))
        await db.execute("DELETE FROM inventario_pociones WHERE guild_id = ? AND user_id = ?", (guild_id, user_id))
        await db.execute("DELETE FROM mascotas WHERE guild_id = ? AND user_id = ?", (guild_id, user_id))  # ‚ô£‚úÖ BORRAR MASCOTAS
        
        # Crear personaje
        await db.execute(
            "INSERT INTO personajes (guild_id, user_id, clase, nivel, experiencia, hp_actual, hp_maximo, florines, rango) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)",
            (guild_id, user_id, clase_aleatoria, nivel_max, exp_max, hp_max, hp_max, florines_max, rango_max)
        )
        
        # Obtener armas, armaduras y accesorios de la clase
        armas_clase = ARMAS_POR_CLASE.get(clase_aleatoria, [])
        armaduras_clase = ARMADURAS_POR_CLASE.get(clase_aleatoria, [])
        accesorios_clase = ACCESORIOS_POR_CLASE.get(clase_aleatoria, [])
        
        # Agregar todas las armas de la clase
        for arma in armas_clase:
            stats_json = json.dumps({"ataque": arma["ataque"], "defensa": arma["defensa"]})
            await db.execute(
                "INSERT INTO inventario_objetos (guild_id, user_id, objeto_nombre, objeto_tipo, cantidad, equipado, stats, rareza) VALUES (?, ?, ?, ?, ?, ?, ?, ?)",
                (guild_id, user_id, arma["nombre"], "arma", 1, False, stats_json, arma["rareza"])
            )
            
        # Agregar todas las armaduras de la clase
        for armadura in armaduras_clase:
            stats_json = json.dumps({"ataque": armadura["ataque"], "defensa": armadura["defensa"]})
            await db.execute(
                "INSERT INTO inventario_objetos (guild_id, user_id, objeto_nombre, objeto_tipo, cantidad, equipado, stats, rareza) VALUES (?, ?, ?, ?, ?, ?, ?, ?)",
                (guild_id, user_id, armadura["nombre"], "armadura", 1, False, stats_json, armadura["rareza"])
            )
        
        # Agregar todos los accesorios de la clase
        for accesorio in accesorios_clase:
            stats_json = json.dumps({"ataque": accesorio["ataque"], "defensa": accesorio["defensa"]})
            await db.execute(
                "INSERT INTO inventario_objetos (guild_id, user_id, objeto_nombre, objeto_tipo, cantidad, equipado, stats, rareza) VALUES (?, ?, ?, ?, ?, ?, ?, ?)",
                (guild_id, user_id, accesorio["nombre"], "accesorio", 1, False, stats_json, accesorio["rareza"])
            )
        
        # ‚ô£‚úÖ AGREGAR TODAS LAS MASCOTAS DE LA CLASE
        # ‚ô£‚úÖ AGREGAR TODAS LAS MASCOTAS DE LA CLASE CON NOMBRES CORRECTOS
        mascotas_por_clase = {
            "humano": [
                {"nombre": "Halconero Com√∫n", "rareza": "normal", "nivel": 50},  # ‚ô£‚úÖ NOMBRES EXACTOS
                {"nombre": "Lobo Gris", "rareza": "raro", "nivel": 60},
                {"nombre": "Le√≥n de Guerra", "rareza": "epico", "nivel": 80},
                {"nombre": "Grifo Real", "rareza": "legendario", "nivel": 100},
                {"nombre": "Drag√≥n del Alba", "rareza": "legendario", "nivel": 100}
            ],
            "elfo": [
                {"nombre": "Zorro Esmeralda", "rareza": "normal", "nivel": 50},  # ‚ô£‚úÖ CAMBIAR comun POR normal
                {"nombre": "Aguila Nocturna", "rareza": "raro", "nivel": 60},
                {"nombre": "Gran Leopardo", "rareza": "epico", "nivel": 80},
                {"nombre": "Gran Alce Del Bosque", "rareza": "legendario", "nivel": 100},
                {"nombre": "Gran Fenix", "rareza": "legendario", "nivel": 100}
            ],
            "orco": [
                {"nombre": "Jabal√≠ Salvaje", "rareza": "normal", "nivel": 50},  # ‚ô£‚úÖ CAMBIAR comun POR normal
                {"nombre": "Lobo Sangriento", "rareza": "raro", "nivel": 60},
                {"nombre": "Tigre de Guerra", "rareza": "epico", "nivel": 80},
                {"nombre": "Oso de Guerra", "rareza": "legendario", "nivel": 100},
                {"nombre": "Drag√≥n de Fuego del Clan", "rareza": "legendario", "nivel": 100}  # ‚ô£‚úÖ NOMBRE EXACTO
            ],
            "enano": [
                {"nombre": "Tej√≥n de Mina", "rareza": "normal", "nivel": 50},  # ‚ô£‚úÖ CAMBIAR comun POR normal
                {"nombre": "√Åguila de Acero", "rareza": "raro", "nivel": 60},
                {"nombre": "Oso Mont√©s", "rareza": "epico", "nivel": 80},
                {"nombre": "Carnero R√∫nico", "rareza": "legendario", "nivel": 100},
                {"nombre": "Golem de Piedra Ancestral", "rareza": "legendario", "nivel": 100}  # ‚ô£‚úÖ NOMBRE EXACTO
            ],
            "no_muerto": [
                {"nombre": "Cuervo Sombr√≠o", "rareza": "normal", "nivel": 50},  # ‚ô£‚úÖ CAMBIAR comun POR normal
                {"nombre": "Lobo de las Sombras Eternas", "rareza": "raro", "nivel": 60},
                {"nombre": "Caballo Fantasma de la Muerte", "rareza": "epico", "nivel": 80},
                {"nombre": "G√°rgola del Abismo", "rareza": "legendario", "nivel": 100},
                {"nombre": "Cerberus", "rareza": "legendario", "nivel": 100}  # ‚ô£‚úÖ NOMBRE EXACTO
            ]
        }
        
        mascotas_clase = mascotas_por_clase.get(clase_aleatoria, [])
        primera_mascota = True
        
        for mascota in mascotas_clase:
            hp_mascota = mascota["nivel"] * 10
            exp_actual = mascota["nivel"] * 85  # Casi al m√°ximo
            exp_necesaria = mascota["nivel"] * 100
            stats_json = json.dumps({"rareza": mascota["rareza"]})
            
            await db.execute(
                "INSERT INTO mascotas (guild_id, user_id, mascota_nombre, mascota_tipo, nivel, clase, hp_maximo, activa, stats, exp_actual, exp_necesaria) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)",
                (guild_id, user_id, mascota["nombre"], mascota["nombre"], mascota["nivel"], clase_aleatoria, hp_mascota, primera_mascota, stats_json, exp_actual, exp_necesaria)
            )
            primera_mascota = False  # Solo la primera mascota estar√° activa
        
        # ‚ô£‚úÖ AGREGAR POCIONES
        for nombre_pocion, datos_pocion in POCIONES.items():
            stats_json = json.dumps({"efecto": datos_pocion["efecto"], "valor": datos_pocion["valor"]})
            await db.execute(
                "INSERT INTO inventario_objetos (guild_id, user_id, objeto_nombre, objeto_tipo, cantidad, equipado, stats, rareza) VALUES (?, ?, ?, ?, ?, ?, ?, ?)",
                (guild_id, user_id, nombre_pocion, "pocion", 1, False, stats_json, datos_pocion["rareza"])
            )
        
        await db.commit()
    
    # Contar equipamiento agregado
    total_armas = len(armas_clase)
    total_armaduras = len(armaduras_clase)
    total_accesorios = len(accesorios_clase)
    total_mascotas = len(mascotas_clase)  # ‚ô£‚úÖ CONTAR MASCOTAS
    total_pociones = len(POCIONES)
    
    embed = discord.Embed(
        title="üéâ PERSONAJE COMPLETO CREADO",
        description=f"**Clase:** {clase_aleatoria.capitalize()}\n**Nivel:** {nivel_max}\n**Rango:** {rango_max}",
        color=0x00FF00
    )
    embed.add_field(name="‚öîÔ∏è Armas", value=f"{total_armas}/10 armas legendarias", inline=True)
    embed.add_field(name="üõ°Ô∏è Armaduras", value=f"{total_armaduras}/10 armaduras legendarias", inline=True)
    embed.add_field(name="üíç Accesorios", value=f"{total_accesorios}/10 accesorios legendarios", inline=True)
    embed.add_field(name="üêæ Mascotas", value=f"{total_mascotas}/5 mascotas √©picas", inline=True)  # ‚ô£‚úÖ MOSTRAR MASCOTAS
    embed.add_field(name="üß™ Pociones", value=f"{total_pociones}/15 pociones legendarias", inline=True)
    embed.add_field(name="üí∞ Florines", value=f"{florines_max:,}", inline=True)
    
    await ctx.send(embed=embed)


#  ‚ô£‚úÖeliminar pj
@bot.command(name="eliminar_pj")
async def eliminar_personaje(ctx, usuario: discord.Member = None):
    """[SUPERIOR] Eliminar personaje de un usuario"""
    # BORRAR COMANDO DEL USUARIO EN 25 SEGUNDOS
    asyncio.create_task(borrar_comando_usuario(ctx.message, 25))
    
    # Solo SUPERIORES pueden usar este comando
    user_level = get_user_level(ctx.author.id, ctx.guild.id)
    if user_level != "SUPERIOR":
        await ctx.send("**Enserio crees que puedes hacer esto?.**", delete_after=10)
        return
    
    # Si no se especifica usuario, eliminar el propio
    if usuario is None:
        usuario = ctx.author
    
    async with aiosqlite.connect(db_manager.db_path) as db:
        # Verificar si tiene personaje
        cursor = await db.execute(
            "SELECT * FROM personajes WHERE guild_id = ? AND user_id = ?",
            (ctx.guild.id, usuario.id)
        )
        personaje = await cursor.fetchone()
        
        if not personaje:
            await ctx.send(f"‚ùå {usuario.display_name} no tiene personaje creado.", delete_after=10)
            return
        
        # Eliminar personaje y datos relacionados
        await db.execute("DELETE FROM personajes WHERE guild_id = ? AND user_id = ?", (ctx.guild.id, usuario.id))
        await db.execute("DELETE FROM inventario_objetos WHERE guild_id = ? AND user_id = ?", (ctx.guild.id, usuario.id))
        await db.execute("DELETE FROM mascotas WHERE guild_id = ? AND user_id = ?", (ctx.guild.id, usuario.id))
        await db.execute("DELETE FROM aventuras_activas WHERE guild_id = ? AND user_id = ?", (ctx.guild.id, usuario.id))
        await db.commit()
    
    embed = discord.Embed(
        title="üíÄ PERSONAJE ELIMINADO",
        description=f"**{usuario.display_name}** ha sido borrado de los registros del reino.\n\n" +
                   f"‚úÖ Personaje eliminado\n" +
                   f"‚úÖ Inventario borrado\n" +
                   f"‚úÖ Mascotas eliminadas\n" +
                   f"‚úÖ Aventuras canceladas",
        color=0xFF0000
    )
    embed.set_footer(text="Solo SUPERIORES pueden usar este comando")
    
    await ctx.send(embed=embed, delete_after=10)


# ========================================================================
#‚ô£ FUNCI√ìN PARA BORRADO DELAYED 
# ========================================================================

async def delete_user_command_delayed(message):
    """Borrar comando del usuario despu√©s de un delay"""
    try:
        await asyncio.sleep(5)  # Esperar 20 segundos
        await message.delete()
    except:
        pass  # Ignorar si ya fue borrado o no se puede borrar

# ===================================================================================================
# MANTENER PUERTO ABIERTO PARA RENDER (WEB SERVICE GRATUITO)
# ===================================================================================================
def keep_alive():
    app = Flask(__name__)
    
    @app.route('/')
    def home():
        return """
        üõ°Ô∏è <h1>CUY-DEFENSE Bot</h1>
        <p>Bot anti-raid funcionando correctamente!</p>
        <p>Estado: Activo ‚úÖ</p>
        """
    
    @app.route('/status')
    def status():
        return {"status": "active", "bot": "CUY-DEFENSE"}
    
    port = int(os.environ.get('PORT', 8080))
    app.run(host='0.0.0.0', port=port)

# ===================================================================================================
#‚ô£ RUN BOT
# ===================================================================================================
#  ‚ô£‚úÖ TOKEN
TOKEN = os.environ['TOKEN']

# Funci√≥n Flask m√°s simple
def simple_web_server():
    from flask import Flask
    app = Flask(__name__)
    
    @app.route('/')
    def home():
        return "üõ°Ô∏è CUY-DEFENSE Bot funcionando"
    
    @app.route('/status')
    def status():
        return {"status": "active", "bot": "CUY-DEFENSE"}
    
    port = int(os.environ.get('PORT', 8080))
    app.run(host='0.0.0.0', port=port, debug=False, use_reloader=False)

# Iniciar el bot
if __name__ == "__main__":
    try:
        # Cargar calabozos antes de iniciar
        tiempo_calabozos = cargar_calabozos()
        print(f"üîç CALABOZOS CARGADOS: {tiempo_calabozos}")
        
        # ‚úÖ CREAR TABLAS RPG AL INICIAR
        import asyncio
        asyncio.run(db_manager.create_rpg_tables())
        print("‚úÖ TABLAS RPG VERIFICADAS/CREADAS")
        
        # ‚úÖ SERVIDOR WEB SIMPLE PARA RENDER
        if os.environ.get('RENDER'):
            import threading
            threading.Thread(target=simple_web_server, daemon=True).start()
            print("üåê SERVIDOR WEB SIMPLE INICIADO")
        
        bot.run(TOKEN)
    except Exception as e:
        print(f"Error iniciando bot: {e}")